{"version":3,"file":"index.js","sources":["../src/helpers.js","../src/rows.js","../src/columns.js","../src/table.js","../src/config.js","../src/datatable.js"],"sourcesContent":["/**\n * Check is item is object\n * @return {Boolean}\n */\nexport const isObject = val => Object.prototype.toString.call(val) === \"[object Object]\"\n\n/**\n * Check is item is array\n * @return {Boolean}\n */\nexport const isArray = val => Array.isArray(val)\n\n/**\n * Check for valid JSON string\n * @param  {String}   str\n * @return {Boolean|Array|Object}\n */\nexport const isJson = str => {\n    let t = !1\n    try {\n        t = JSON.parse(str)\n    } catch (e) {\n        return !1\n    }\n    return !(null === t || (!isArray(t) && !isObject(t))) && t\n}\n\n/**\n * Merge objects (reccursive)\n * @param  {Object} r\n * @param  {Object} t\n * @return {Object}\n */\nexport const extend = (src, props) => {\n    for (const prop in props) {\n        if (props.hasOwnProperty(prop)) {\n            const val = props[prop]\n            if (val && isObject(val)) {\n                src[prop] = src[prop] || {}\n                extend(src[prop], val)\n            } else {\n                src[prop] = val\n            }\n        }\n    }\n    return src\n}\n\n/**\n * Iterator helper\n * @param  {(Array|Object)}   arr     Any object, array or array-like collection.\n * @param  {Function}         fn      Callback\n * @param  {Object}           scope   Change the value of this\n * @return {Void}\n */\nexport const each = (arr, fn, scope) => {\n    let n\n    if (isObject(arr)) {\n        for (n in arr) {\n            if (Object.prototype.hasOwnProperty.call(arr, n)) {\n                fn.call(scope, arr[n], n)\n            }\n        }\n    } else {\n        for (n = 0; n < arr.length; n++) {\n            fn.call(scope, arr[n], n)\n        }\n    }\n}\n\n/**\n * Add event listener to target\n * @param  {Object} el\n * @param  {String} e\n * @param  {Function} fn\n */\nexport const on = (el, e, fn) => {\n    el.addEventListener(e, fn, false)\n}\n\n/**\n * Create DOM element node\n * @param  {String}   a nodeName\n * @param  {Object}   b properties and attributes\n * @return {Object}\n */\nexport const createElement = (a, b) => {\n    const d = document.createElement(a)\n    if (b && \"object\" == typeof b) {\n        let e\n        for (e in b) {\n            if (\"html\" === e) {\n                d.innerHTML = b[e]\n            } else {\n                d.setAttribute(e, b[e])\n            }\n        }\n    }\n    return d\n}\n\nexport const flush = (el, ie) => {\n    if (el instanceof NodeList) {\n        each(el, e => {\n            flush(e, ie)\n        })\n    } else {\n        if (ie) {\n            while (el.hasChildNodes()) {\n                el.removeChild(el.firstChild)\n            }\n        } else {\n            el.innerHTML = \"\"\n        }\n    }\n}\n\n/**\n * Create button helper\n * @param  {String}   c\n * @param  {Number}   p\n * @param  {String}   t\n * @return {Object}\n */\nexport const button = (c, p, t) => createElement(\"li\", {\n    class: c,\n    html: `<a href=\"#\" data-page=\"${p}\">${t}</a>`\n})\n\n/**\n * classList shim\n * @type {Object}\n */\nexport const classList = {\n    add(s, a) {\n        if (s.classList) {\n            s.classList.add(a)\n        } else {\n            if (!classList.contains(s, a)) {\n                s.className = `${s.className.trim()} ${a}`\n            }\n        }\n    },\n    remove(s, a) {\n        if (s.classList) {\n            s.classList.remove(a)\n        } else {\n            if (classList.contains(s, a)) {\n                s.className = s.className.replace(\n                    new RegExp(`(^|\\\\s)${a.split(\" \").join(\"|\")}(\\\\s|$)`, \"gi\"),\n                    \" \"\n                )\n            }\n        }\n    },\n    contains(s, a) {\n        if (s)\n            return s.classList ?\n                s.classList.contains(a) :\n                !!s.className &&\n                !!s.className.match(new RegExp(`(\\\\s|^)${a}(\\\\s|$)`))\n    }\n}\n\n\n/**\n * Bubble sort algorithm\n */\nexport const sortItems = (a, b) => {\n    let c\n    let d\n    if (1 === b) {\n        c = 0\n        d = a.length\n    } else {\n        if (b === -1) {\n            c = a.length - 1\n            d = -1\n        }\n    }\n    for (let e = !0; e;) {\n        e = !1\n        for (let f = c; f != d; f += b) {\n            if (a[f + b] && a[f].value > a[f + b].value) {\n                const g = a[f]\n                const h = a[f + b]\n                const i = g\n                a[f] = h\n                a[f + b] = i\n                e = !0\n            }\n        }\n    }\n    return a\n}\n\n/**\n * Pager truncation algorithm\n */\nexport const truncate = (a, b, c, d, ellipsis) => {\n    d = d || 2\n    let j\n    const e = 2 * d\n    let f = b - d\n    let g = b + d\n    const h = []\n    const i = []\n    if (b < 4 - d + e) {\n        g = 3 + e\n    } else if (b > c - (3 - d + e)) {\n        f = c - (2 + e)\n    }\n    for (let k = 1; k <= c; k++) {\n        if (1 == k || k == c || (k >= f && k <= g)) {\n            const l = a[k - 1]\n            classList.remove(l, \"active\")\n            h.push(l)\n        }\n    }\n    each(h, c => {\n        const d = c.children[0].getAttribute(\"data-page\")\n        if (j) {\n            const e = j.children[0].getAttribute(\"data-page\")\n            if (d - e == 2) i.push(a[e])\n            else if (d - e != 1) {\n                const f = createElement(\"li\", {\n                    class: \"ellipsis\",\n                    html: `<a href=\"#\">${ellipsis}</a>`\n                })\n                i.push(f)\n            }\n        }\n        i.push(c)\n        j = c\n    })\n\n    return i\n}\n","import {isArray, each, createElement} from \"./helpers\"\n/**\n * Rows API\n * @param {Object} instance DataTable instance\n * @param {Array} rows\n */\nexport class Rows {\n    constructor(dt, rows) {\n        this.dt = dt\n        this.rows = rows\n\n        return this\n    }\n\n    /**\n     * Build a new row\n     * @param  {Array} row\n     * @return {HTMLElement}\n     */\n    build(row) {\n        const tr = createElement(\"tr\")\n\n        let headings = this.dt.headings\n\n        if (!headings.length) {\n            headings = row.map(() => \"\")\n        }\n\n        each(headings, (h, i) => {\n            const td = createElement(\"td\")\n\n            // Fixes #29\n            if (!row[i] || !row[i].length) {\n                row[i] = \"\"\n            }\n\n            td.innerHTML = row[i]\n\n            td.data = row[i]\n\n            tr.appendChild(td)\n        })\n\n        return tr\n    }\n\n    render(row) {\n        return row\n    }\n\n    /**\n     * Add new row\n     * @param {Array} select\n     */\n    add(data) {\n        if (isArray(data)) {\n            const dt = this.dt\n            // Check for multiple rows\n            if (isArray(data[0])) {\n                each(data, function (row) {\n                    dt.data.push(this.build(row))\n                }, this)\n            } else {\n                dt.data.push(this.build(data))\n            }\n\n            // We may have added data to an empty table\n            if ( dt.data.length ) {\n                dt.hasRows = true\n            }\n\n\n            this.update()\n\n            dt.columns().rebuild()\n        }\n\n    }\n\n    /**\n     * Remove row(s)\n     * @param  {Array|Number} select\n     * @return {Void}\n     */\n    remove(select) {\n        const dt = this.dt\n\n        if (isArray(select)) {\n            // Remove in reverse otherwise the indexes will be incorrect\n            select.sort((a, b) => b - a)\n\n            each(select, row => {\n                dt.data.splice(row, 1)\n            })\n        } else {\n            dt.data.splice(select, 1)\n        }\n\n        // We may have emptied the table\n        if ( !dt.data.length ) {\n            dt.hasRows = false\n        }\n\n        this.update()\n        dt.columns().rebuild()\n    }\n\n    /**\n     * Update row indexes\n     * @return {Void}\n     */\n    update() {\n        each(this.dt.data, (row, i) => {\n            row.dataIndex = i\n        })\n    }\n}\n","import {isArray, each, classList, sortItems} from \"./helpers\"\n\n/**\n * Columns API\n * @param {Object} instance DataTable instance\n * @param {Mixed} columns  Column index or array of column indexes\n */\nexport class Columns {\n    constructor(dt) {\n        this.dt = dt\n        return this\n    }\n\n    /**\n     * Swap two columns\n     * @return {Void}\n     */\n    swap(columns) {\n        if (columns.length && columns.length === 2) {\n            const cols = []\n\n            // Get the current column indexes\n            each(this.dt.headings, (h, i) => {\n                cols.push(i)\n            })\n\n            const x = columns[0]\n            const y = columns[1]\n            const b = cols[y]\n            cols[y] = cols[x]\n            cols[x] = b\n\n            this.order(cols)\n        }\n    }\n\n    /**\n     * Reorder the columns\n     * @return {Array} columns  Array of ordered column indexes\n     */\n    order(columns) {\n        let a\n        let b\n        let c\n        let d\n        let h\n        let s\n        let cell\n\n        const temp = [\n            [],\n            [],\n            [],\n            []\n        ]\n\n        const dt = this.dt\n\n        // Order the headings\n        each(columns, (column, x) => {\n            h = dt.headings[column]\n            s = h.getAttribute(\"data-sortable\") !== \"false\"\n            a = h.cloneNode(true)\n            a.originalCellIndex = x\n            a.sortable = s\n\n            temp[0].push(a)\n\n            if (!dt.hiddenColumns.includes(column)) {\n                b = h.cloneNode(true)\n                b.originalCellIndex = x\n                b.sortable = s\n\n                temp[1].push(b)\n            }\n        })\n\n        // Order the row cells\n        each(dt.data, (row, i) => {\n            c = row.cloneNode(false)\n            d = row.cloneNode(false)\n\n            c.dataIndex = d.dataIndex = i\n\n            if (row.searchIndex !== null && row.searchIndex !== undefined) {\n                c.searchIndex = d.searchIndex = row.searchIndex\n            }\n\n            // Append the cell to the fragment in the correct order\n            each(columns, column => {\n                cell = row.cells[column].cloneNode(true)\n                cell.data = row.cells[column].data\n                c.appendChild(cell)\n\n                if (!dt.hiddenColumns.includes(column)) {\n                    cell = row.cells[column].cloneNode(true)\n                    cell.data = row.cells[column].data\n                    d.appendChild(cell)\n                }\n            })\n\n            temp[2].push(c)\n            temp[3].push(d)\n        })\n\n        dt.headings = temp[0]\n        dt.activeHeadings = temp[1]\n\n        dt.data = temp[2]\n        dt.activeRows = temp[3]\n\n        // Update\n        dt.update()\n    }\n\n    /**\n     * Hide columns\n     * @return {Void}\n     */\n    hide(columns) {\n        if (columns.length) {\n            const dt = this.dt\n\n            each(columns, column => {\n                if (!dt.hiddenColumns.includes(column)) {\n                    dt.hiddenColumns.push(column)\n                }\n            })\n\n            this.rebuild()\n        }\n    }\n\n    /**\n     * Show columns\n     * @return {Void}\n     */\n    show(columns) {\n        if (columns.length) {\n            let index\n            const dt = this.dt\n\n            each(columns, column => {\n                index = dt.hiddenColumns.indexOf(column)\n                if (index > -1) {\n                    dt.hiddenColumns.splice(index, 1)\n                }\n            })\n\n            this.rebuild()\n        }\n    }\n\n    /**\n     * Check column(s) visibility\n     * @return {Boolean}\n     */\n    visible(columns) {\n        let cols\n        const dt = this.dt\n\n        columns = columns || dt.headings.map(th => th.originalCellIndex)\n\n        if (!isNaN(columns)) {\n            cols = !dt.hiddenColumns.includes(columns)\n        } else if (isArray(columns)) {\n            cols = []\n            each(columns, column => {\n                cols.push(!dt.hiddenColumns.includes(column))\n            })\n        }\n\n        return cols\n    }\n\n    /**\n     * Add a new column\n     * @param {Object} data\n     */\n    add(data) {\n        let td\n        const th = document.createElement(\"th\")\n\n        if (!this.dt.headings.length) {\n            this.dt.insert({\n                headings: [data.heading],\n                data: data.data.map(i => [i])\n            })\n            this.rebuild()\n            return\n        }\n\n        if (!this.dt.hiddenHeader) {\n            if (data.heading.nodeName) {\n                th.appendChild(data.heading)\n            } else {\n                th.innerHTML = data.heading\n            }\n        } else {\n            th.innerHTML = \"\"\n        }\n\n        this.dt.headings.push(th)\n\n        each(this.dt.data, (row, i) => {\n            if (data.data[i]) {\n                td = document.createElement(\"td\")\n\n                if (data.data[i].nodeName) {\n                    td.appendChild(data.data[i])\n                } else {\n                    td.innerHTML = data.data[i]\n                }\n\n                td.data = td.innerHTML\n\n                if (data.render) {\n                    td.innerHTML = data.render.call(this, td.data, td, row)\n                }\n\n                row.appendChild(td)\n            }\n        })\n\n        if (data.type) {\n            th.setAttribute(\"data-type\", data.type)\n        }\n        if (data.format) {\n            th.setAttribute(\"data-format\", data.format)\n        }\n\n        if (data.hasOwnProperty(\"sortable\")) {\n            th.sortable = data.sortable\n            th.setAttribute(\"data-sortable\", data.sortable === true ? \"true\" : \"false\")\n        }\n\n        this.rebuild()\n\n        this.dt.renderHeader()\n    }\n\n    /**\n     * Remove column(s)\n     * @param  {Array|Number} select\n     * @return {Void}\n     */\n    remove(select) {\n        if (isArray(select)) {\n            // Remove in reverse otherwise the indexes will be incorrect\n            select.sort((a, b) => b - a)\n\n            each(select, function (column) {\n                this.remove(column)\n            }, this)\n        } else {\n            this.dt.headings.splice(select, 1)\n\n            each(this.dt.data, row => {\n                row.removeChild(row.cells[select])\n            })\n        }\n\n        this.rebuild()\n    }\n\n    /**\n     * Sort by column\n     * @param  {int} column - The column no.\n     * @param  {string} dir - asc or desc\n     * @return {void}\n     */\n    sort(column, dir, init) {\n        const dt = this.dt\n\n        // Check column is present\n        if (dt.hasHeadings && (column < 0 || column > dt.headings.length)) {\n            return false\n        }\n\n        dt.sorting = true\n\n        let rows = dt.data\n        const alpha = []\n        const numeric = []\n        let a = 0\n        let n = 0\n        const th = dt.headings[column]\n        let parseFunction = content => content\n        const waitFor = []\n\n        // Check for date format\n        if (th.getAttribute(\"data-type\") === \"date\") {\n            let format = false\n            const formatted = th.hasAttribute(\"data-format\")\n\n            if (formatted) {\n                format = th.getAttribute(\"data-format\")\n            }\n            waitFor.push(import(\"./date\").then(({parseDate}) => {\n                parseFunction = content => parseDate(content, format)\n            }))\n        }\n\n        Promise.all(waitFor).then(() => {\n            Array.from(rows).forEach(tr => {\n                const cell = tr.cells[column]\n                const content = cell.hasAttribute('data-content') ? cell.getAttribute('data-content') : cell.innerText\n                const num = parseFunction(typeof content===\"string\" ? content.replace(/(\\$|,|\\s|%)/g, \"\") : content)\n\n                if (parseFloat(num) == num) {\n                    numeric[n++] = {\n                        value: Number(num),\n                        row: tr\n                    }\n                } else {\n                    alpha[a++] = {\n                        value: content,\n                        row: tr\n                    }\n                }\n            })\n\n            /* Sort according to direction (ascending or descending) */\n            if (!dir) {\n                if (classList.contains(th, \"asc\")) {\n                    dir = \"desc\"\n                } else {\n                    dir = \"asc\"\n                }\n            }\n            let top\n            let btm\n            if (dir == \"desc\") {\n                top = sortItems(alpha, -1)\n                btm = sortItems(numeric, -1)\n                classList.remove(th, \"asc\")\n                classList.add(th, \"desc\")\n            } else {\n                top = sortItems(numeric, 1)\n                btm = sortItems(alpha, 1)\n                classList.remove(th, \"desc\")\n                classList.add(th, \"asc\")\n            }\n\n            /* Clear asc/desc class names from the last sorted column's th if it isn't the same as the one that was just clicked */\n            if (dt.lastTh && th != dt.lastTh) {\n                classList.remove(dt.lastTh, \"desc\")\n                classList.remove(dt.lastTh, \"asc\")\n            }\n\n            dt.lastTh = th\n\n            /* Reorder the table */\n            rows = top.concat(btm)\n\n            dt.data = []\n            const indexes = []\n\n            each(rows, (v, i) => {\n                dt.data.push(v.row)\n\n                if (v.row.searchIndex !== null && v.row.searchIndex !== undefined) {\n                    indexes.push(i)\n                }\n            }, dt)\n\n            dt.searchData = indexes\n\n            this.rebuild()\n\n            dt.update()\n\n            if (!init) {\n                dt.emit(\"datatable.sort\", column, dir)\n            }\n        })\n    }\n\n    /**\n     * Rebuild the columns\n     * @return {Void}\n     */\n    rebuild() {\n        let a\n        let b\n        let c\n        let d\n        const dt = this.dt\n        const temp = []\n\n        dt.activeRows = []\n        dt.activeHeadings = []\n\n        each(dt.headings, (th, i) => {\n            th.originalCellIndex = i\n            th.sortable = th.getAttribute(\"data-sortable\") !== \"false\"\n            if (!dt.hiddenColumns.includes(i)) {\n                dt.activeHeadings.push(th)\n            }\n        }, this)\n\n        // Loop over the rows and reorder the cells\n        each(dt.data, (row, i) => {\n            a = row.cloneNode(false)\n            b = row.cloneNode(false)\n\n            a.dataIndex = b.dataIndex = i\n\n            if (row.searchIndex !== null && row.searchIndex !== undefined) {\n                a.searchIndex = b.searchIndex = row.searchIndex\n            }\n\n            // Append the cell to the fragment in the correct order\n            each(row.cells, cell => {\n                c = cell.cloneNode(true)\n                c.data = cell.data\n                a.appendChild(c)\n\n                if (!dt.hiddenColumns.includes(c.cellIndex)) {\n                    d = c.cloneNode(true)\n                    d.data = c.data\n                    b.appendChild(d)\n                }\n            })\n\n            // Append the fragment with the ordered cells\n            temp.push(a)\n            dt.activeRows.push(b)\n        })\n\n        dt.data = temp\n\n        dt.update()\n    }\n}\n","import {each, createElement} from \"./helpers\"\n\n/**\n * Parse data to HTML table\n */\nexport const dataToTable = function (data) {\n    let thead = false\n    let tbody = false\n\n    data = data || this.options.data\n\n    if (data.headings) {\n        thead = createElement(\"thead\")\n        const tr = createElement(\"tr\")\n        each(data.headings, col => {\n            const td = createElement(\"th\", {\n                html: col\n            })\n            tr.appendChild(td)\n        })\n\n        thead.appendChild(tr)\n    }\n\n    if (data.data && data.data.length) {\n        tbody = createElement(\"tbody\")\n        each(data.data, rows => {\n            if (data.headings) {\n                if (data.headings.length !== rows.length) {\n                    throw new Error(\n                        \"The number of rows do not match the number of headings.\"\n                    )\n                }\n            }\n            const tr = createElement(\"tr\")\n            each(rows, value => {\n                const td = createElement(\"td\", {\n                    html: value\n                })\n                tr.appendChild(td)\n            })\n            tbody.appendChild(tr)\n        })\n    }\n\n    if (thead) {\n        if (this.table.tHead !== null) {\n            this.table.removeChild(this.table.tHead)\n        }\n        this.table.appendChild(thead)\n    }\n\n    if (tbody) {\n        if (this.table.tBodies.length) {\n            this.table.removeChild(this.table.tBodies[0])\n        }\n        this.table.appendChild(tbody)\n    }\n}\n","/**\n * Default configuration\n * @typ {Object}\n */\nexport const defaultConfig = {\n    sortable: true,\n    searchable: true,\n\n    // Pagination\n    paging: true,\n    perPage: 10,\n    perPageSelect: [5, 10, 15, 20, 25],\n    nextPrev: true,\n    firstLast: false,\n    prevText: \"&lsaquo;\",\n    nextText: \"&rsaquo;\",\n    firstText: \"&laquo;\",\n    lastText: \"&raquo;\",\n    ellipsisText: \"&hellip;\",\n    ascText: \"▴\",\n    descText: \"▾\",\n    truncatePager: true,\n    pagerDelta: 2,\n\n    scrollY: \"\",\n\n    fixedColumns: true,\n    fixedHeight: false,\n\n    header: true,\n    footer: false,\n\n    // Customise the display text\n    labels: {\n        placeholder: \"Search...\", // The search input placeholder\n        perPage: \"{select} entries per page\", // per-page dropdown label\n        noRows: \"No entries found\", // Message shown when there are no search results\n        info: \"Showing {start} to {end} of {rows} entries\" //\n    },\n\n    // Customise the layout\n    layout: {\n        top: \"{select}{search}\",\n        bottom: \"{info}{pager}\"\n    }\n}\n","import {Rows} from \"./rows\"\nimport {Columns} from \"./columns\"\nimport {dataToTable} from \"./table\"\nimport {defaultConfig} from \"./config\"\nimport {\n    isObject,\n    isArray,\n    isJson,\n    extend,\n    each,\n    on,\n    createElement,\n    flush,\n    button,\n    classList,\n    truncate\n} from \"./helpers\"\n\n\nexport class DataTable {\n    constructor(table, options) {\n        this.initialized = false\n\n        // user options\n        this.options = extend(defaultConfig, options)\n\n        if (typeof table === \"string\") {\n            table = document.querySelector(table)\n        }\n\n        this.initialLayout = table.innerHTML\n        this.initialSortable = this.options.sortable\n\n        // Disable manual sorting if no header is present (#4)\n        if (!this.options.header) {\n            this.options.sortable = false\n        }\n\n        if (table.tHead === null) {\n            if (!this.options.data ||\n                (this.options.data && !this.options.data.headings)\n            ) {\n                this.options.sortable = false\n            }\n        }\n\n        if (table.tBodies.length && !table.tBodies[0].rows.length) {\n            if (this.options.data) {\n                if (!this.options.data.data) {\n                    throw new Error(\n                        \"You seem to be using the data option, but you've not defined any rows.\"\n                    )\n                }\n            }\n        }\n\n        this.table = table\n\n        this.init()\n    }\n\n    /**\n     * Add custom property or method to extend DataTable\n     * @param  {String} prop    - Method name or property\n     * @param  {Mixed} val      - Function or property value\n     * @return {Void}\n     */\n    static extend(prop, val) {\n        if (typeof val === \"function\") {\n            DataTable.prototype[prop] = val\n        } else {\n            DataTable[prop] = val\n        }\n    }\n\n    /**\n     * Initialize the instance\n     * @param  {Object} options\n     * @return {Void}\n     */\n    init(options) {\n        if (this.initialized || classList.contains(this.table, \"dataTable-table\")) {\n            return false\n        }\n\n        this.options = extend(this.options, options || {})\n\n        // IE detection\n        this.isIE = !!/(msie|trident)/i.test(navigator.userAgent)\n\n        this.currentPage = 1\n        this.onFirstPage = true\n\n        this.hiddenColumns = []\n        this.columnRenderers = []\n        this.selectedColumns = []\n\n        this.render()\n\n        setTimeout(() => {\n            this.emit(\"datatable.init\")\n            this.initialized = true\n\n            if (this.options.plugins) {\n                each(this.options.plugins, (options, plugin) => {\n                    if (this[plugin] && typeof this[plugin] === \"function\") {\n                        this[plugin] = this[plugin](options, {\n                            each,\n                            extend,\n                            classList,\n                            createElement\n                        })\n\n                        // Init plugin\n                        if (options.enabled && this[plugin].init && typeof this[plugin].init === \"function\") {\n                            this[plugin].init()\n                        }\n                    }\n                })\n            }\n        }, 10)\n    }\n\n    /**\n     * Render the instance\n     * @param  {String} type\n     * @return {Void}\n     */\n    render(type) {\n        if (type) {\n            switch (type) {\n            case \"page\":\n                this.renderPage()\n                break\n            case \"pager\":\n                this.renderPager()\n                break\n            case \"header\":\n                this.renderHeader()\n                break\n            }\n\n            return false\n        }\n\n        const o = this.options\n        let template = \"\"\n\n        // Convert data to HTML\n        if (o.data) {\n            dataToTable.call(this)\n        }\n\n        if (o.ajax) {\n            const ajax = o.ajax\n            const xhr = new XMLHttpRequest()\n\n            const xhrProgress = e => {\n                this.emit(\"datatable.ajax.progress\", e, xhr)\n            }\n\n            const xhrLoad = e => {\n                if (xhr.readyState === 4) {\n                    this.emit(\"datatable.ajax.loaded\", e, xhr)\n\n                    if (xhr.status === 200) {\n                        let obj = {}\n                        obj.data = ajax.load ? ajax.load.call(this, xhr) : xhr.responseText\n\n                        obj.type = \"json\"\n\n                        if (ajax.content && ajax.content.type) {\n                            obj.type = ajax.content.type\n\n                            obj = extend(obj, ajax.content)\n                        }\n\n                        this.import(obj)\n\n                        this.setColumns(true)\n\n                        this.emit(\"datatable.ajax.success\", e, xhr)\n                    } else {\n                        this.emit(\"datatable.ajax.error\", e, xhr)\n                    }\n                }\n            }\n\n            const xhrFailed = e => {\n                this.emit(\"datatable.ajax.error\", e, xhr)\n            }\n\n            const xhrCancelled = e => {\n                this.emit(\"datatable.ajax.abort\", e, xhr)\n            }\n\n            on(xhr, \"progress\", xhrProgress)\n            on(xhr, \"load\", xhrLoad)\n            on(xhr, \"error\", xhrFailed)\n            on(xhr, \"abort\", xhrCancelled)\n\n            this.emit(\"datatable.ajax.loading\", xhr)\n\n            xhr.open(\"GET\", typeof ajax === \"string\" ? o.ajax : o.ajax.url)\n            xhr.send()\n        }\n\n        // Store references\n        this.body = this.table.tBodies[0]\n        this.head = this.table.tHead\n        this.foot = this.table.tFoot\n\n        if (!this.body) {\n            this.body = createElement(\"tbody\")\n\n            this.table.appendChild(this.body)\n        }\n\n        this.hasRows = this.body.rows.length > 0\n\n        // Make a tHead if there isn't one (fixes #8)\n        if (!this.head) {\n            const h = createElement(\"thead\")\n            const t = createElement(\"tr\")\n\n            if (this.hasRows) {\n                each(this.body.rows[0].cells, () => {\n                    t.appendChild(createElement(\"th\"))\n                })\n\n                h.appendChild(t)\n            }\n\n            this.head = h\n\n            this.table.insertBefore(this.head, this.body)\n\n            this.hiddenHeader = !o.ajax\n        }\n\n        this.headings = []\n        this.hasHeadings = this.head.rows.length > 0\n\n        if (this.hasHeadings) {\n            this.header = this.head.rows[0]\n            this.headings = [].slice.call(this.header.cells)\n        }\n\n        // Header\n        if (!o.header) {\n            if (this.head) {\n                this.table.removeChild(this.table.tHead)\n            }\n        }\n\n        // Footer\n        if (o.footer) {\n            if (this.head && !this.foot) {\n                this.foot = createElement(\"tfoot\", {\n                    html: this.head.innerHTML\n                })\n                this.table.appendChild(this.foot)\n            }\n        } else {\n            if (this.foot) {\n                this.table.removeChild(this.table.tFoot)\n            }\n        }\n\n        // Build\n        this.wrapper = createElement(\"div\", {\n            class: \"dataTable-wrapper dataTable-loading\"\n        })\n\n        // Template for custom layouts\n        template += \"<div class='dataTable-top'>\"\n        template += o.layout.top\n        template += \"</div>\"\n        if (o.scrollY.length) {\n            template += `<div class='dataTable-container' style='height: ${o.scrollY}; overflow-Y: auto;'></div>`\n        } else {\n            template += \"<div class='dataTable-container'></div>\"\n        }\n        template += \"<div class='dataTable-bottom'>\"\n        template += o.layout.bottom\n        template += \"</div>\"\n\n        // Info placement\n        template = template.replace(\"{info}\", o.paging ? \"<div class='dataTable-info'></div>\" : \"\")\n\n        // Per Page Select\n        if (o.paging && o.perPageSelect) {\n            let wrap = \"<div class='dataTable-dropdown'><label>\"\n            wrap += o.labels.perPage\n            wrap += \"</label></div>\"\n\n            // Create the select\n            const select = createElement(\"select\", {\n                class: \"dataTable-selector\"\n            })\n\n            // Create the options\n            each(o.perPageSelect, val => {\n                const selected = val === o.perPage\n                const option = new Option(val, val, selected, selected)\n                select.add(option)\n            })\n\n            // Custom label\n            wrap = wrap.replace(\"{select}\", select.outerHTML)\n\n            // Selector placement\n            template = template.replace(\"{select}\", wrap)\n        } else {\n            template = template.replace(\"{select}\", \"\")\n        }\n\n        // Searchable\n        if (o.searchable) {\n            const form =\n                `<div class='dataTable-search'><input class='dataTable-input' placeholder='${o.labels.placeholder}' type='text'></div>`\n\n            // Search input placement\n            template = template.replace(\"{search}\", form)\n        } else {\n            template = template.replace(\"{search}\", \"\")\n        }\n\n        if (this.hasHeadings) {\n            // Sortable\n            this.render(\"header\")\n        }\n\n        // Add table class\n        classList.add(this.table, \"dataTable-table\")\n\n        // Paginator\n        const w = createElement(\"div\", {\n            class: \"dataTable-pagination\"\n        })\n        const paginator = createElement(\"ul\")\n        w.appendChild(paginator)\n\n        // Pager(s) placement\n        template = template.replace(/\\{pager\\}/g, w.outerHTML)\n\n        this.wrapper.innerHTML = template\n\n        this.container = this.wrapper.querySelector(\".dataTable-container\")\n\n        this.pagers = this.wrapper.querySelectorAll(\".dataTable-pagination\")\n\n        this.label = this.wrapper.querySelector(\".dataTable-info\")\n\n        // Insert in to DOM tree\n        this.table.parentNode.replaceChild(this.wrapper, this.table)\n        this.container.appendChild(this.table)\n\n        // Store the table dimensions\n        this.rect = this.table.getBoundingClientRect()\n\n        // Convert rows to array for processing\n        this.data = [].slice.call(this.body.rows)\n        this.activeRows = this.data.slice()\n        this.activeHeadings = this.headings.slice()\n\n        // Update\n        this.update()\n\n        if (!o.ajax) {\n            this.setColumns()\n        }\n\n        // Fix height\n        this.fixHeight()\n\n        // Fix columns\n        this.fixColumns()\n\n        // Class names\n        if (!o.header) {\n            classList.add(this.wrapper, \"no-header\")\n        }\n\n        if (!o.footer) {\n            classList.add(this.wrapper, \"no-footer\")\n        }\n\n        if (o.sortable) {\n            classList.add(this.wrapper, \"sortable\")\n        }\n\n        if (o.searchable) {\n            classList.add(this.wrapper, \"searchable\")\n        }\n\n        if (o.fixedHeight) {\n            classList.add(this.wrapper, \"fixed-height\")\n        }\n\n        if (o.fixedColumns) {\n            classList.add(this.wrapper, \"fixed-columns\")\n        }\n\n        this.bindEvents()\n    }\n\n    /**\n     * Render the page\n     * @return {Void}\n     */\n    renderPage() {\n        if (this.hasHeadings) {\n            flush(this.header, this.isIE)\n\n            each(this.activeHeadings, function (th) {\n                this.header.appendChild(th)\n            }, this)\n        }\n\n\n        if (this.hasRows && this.totalPages) {\n            if (this.currentPage > this.totalPages) {\n                this.currentPage = 1\n            }\n\n            // Use a fragment to limit touching the DOM\n            const index = this.currentPage - 1\n\n            const frag = document.createDocumentFragment()\n\n            each(this.pages[index], function (row) {\n                frag.appendChild(this.rows().render(row))\n            }, this)\n\n            this.clear(frag)\n\n            this.onFirstPage = this.currentPage === 1\n            this.onLastPage = this.currentPage === this.lastPage\n        } else {\n            this.setMessage(this.options.labels.noRows)\n        }\n\n        // Update the info\n        let current = 0\n\n        let f = 0\n        let t = 0\n        let items\n\n        if (this.totalPages) {\n            current = this.currentPage - 1\n            f = current * this.options.perPage\n            t = f + this.pages[current].length\n            f = f + 1\n            items = this.searching ? this.searchData.length : this.data.length\n        }\n\n        if (this.label && this.options.labels.info.length) {\n            // CUSTOM LABELS\n            const string = this.options.labels.info\n                .replace(\"{start}\", f)\n                .replace(\"{end}\", t)\n                .replace(\"{page}\", this.currentPage)\n                .replace(\"{pages}\", this.totalPages)\n                .replace(\"{rows}\", items)\n\n            this.label.innerHTML = items ? string : \"\"\n        }\n\n        if (this.currentPage == 1) {\n            this.fixHeight()\n        }\n    }\n\n    /**\n     * Render the pager(s)\n     * @return {Void}\n     */\n    renderPager() {\n        flush(this.pagers, this.isIE)\n\n        if (this.totalPages > 1) {\n            const c = \"pager\"\n            const frag = document.createDocumentFragment()\n            const prev = this.onFirstPage ? 1 : this.currentPage - 1\n            const next = this.onlastPage ? this.totalPages : this.currentPage + 1\n\n            // first button\n            if (this.options.firstLast) {\n                frag.appendChild(button(c, 1, this.options.firstText))\n            }\n\n            // prev button\n            if (this.options.nextPrev) {\n                frag.appendChild(button(c, prev, this.options.prevText))\n            }\n\n            let pager = this.links\n\n            // truncate the links\n            if (this.options.truncatePager) {\n                pager = truncate(\n                    this.links,\n                    this.currentPage,\n                    this.pages.length,\n                    this.options.pagerDelta,\n                    this.options.ellipsisText\n                )\n            }\n\n            // active page link\n            classList.add(this.links[this.currentPage - 1], \"active\")\n\n            // append the links\n            each(pager, p => {\n                classList.remove(p, \"active\")\n                frag.appendChild(p)\n            })\n\n            classList.add(this.links[this.currentPage - 1], \"active\")\n\n            // next button\n            if (this.options.nextPrev) {\n                frag.appendChild(button(c, next, this.options.nextText))\n            }\n\n            // first button\n            if (this.options.firstLast) {\n                frag.appendChild(button(c, this.totalPages, this.options.lastText))\n            }\n\n            // We may have more than one pager\n            each(this.pagers, pager => {\n                pager.appendChild(frag.cloneNode(true))\n            })\n        }\n    }\n\n    /**\n     * Render the header\n     * @return {Void}\n     */\n    renderHeader() {\n        this.labels = []\n\n        if (this.headings && this.headings.length) {\n            each(this.headings, (th, i) => {\n\n                this.labels[i] = th.textContent\n\n                if (classList.contains(th.firstElementChild, \"dataTable-sorter\")) {\n                    th.innerHTML = th.firstElementChild.innerHTML\n                }\n\n                th.sortable = th.getAttribute(\"data-sortable\") !== \"false\"\n\n                th.originalCellIndex = i\n                if (this.options.sortable && th.sortable) {\n                    const link = createElement(\"a\", {\n                        href: \"#\",\n                        class: \"dataTable-sorter\",\n                        html: th.innerHTML\n                    })\n\n                    th.innerHTML = \"\"\n                    th.setAttribute(\"data-sortable\", \"\")\n                    th.appendChild(link)\n                }\n            })\n        }\n\n        this.fixColumns()\n    }\n\n    /**\n     * Bind event listeners\n     * @return {[type]} [description]\n     */\n    bindEvents() {\n        const o = this.options\n        const that = this\n        // Per page selector\n        if (o.perPageSelect) {\n            const selector = this.wrapper.querySelector(\".dataTable-selector\")\n            if (selector) {\n                // Change per page\n                on(selector, \"change\", function () {\n                    o.perPage = parseInt(this.value, 10)\n                    that.update()\n\n                    that.fixHeight()\n\n                    that.emit(\"datatable.perpage\", o.perPage)\n                })\n            }\n        }\n\n        // Search input\n        if (o.searchable) {\n            this.input = this.wrapper.querySelector(\".dataTable-input\")\n            if (this.input) {\n                on(this.input, \"keyup\", function () {\n                    that.search(this.value)\n                })\n            }\n        }\n\n        // Pager(s) / sorting\n        on(this.wrapper, \"click\", e => {\n            const t = e.target\n            if (t.nodeName.toLowerCase() === \"a\") {\n                if (t.hasAttribute(\"data-page\")) {\n                    this.page(t.getAttribute(\"data-page\"))\n                    e.preventDefault()\n                } else if (\n                    o.sortable &&\n                    classList.contains(t, \"dataTable-sorter\") &&\n                    t.parentNode.getAttribute(\"data-sortable\") != \"false\"\n                ) {\n                    this.columns().sort(this.headings.indexOf(t.parentNode))\n                    e.preventDefault()\n                }\n            }\n        })\n\n        on(window, \"resize\", () => {\n            this.rect = this.container.getBoundingClientRect()\n            this.fixColumns()\n        })\n    }\n\n    /**\n     * Set up columns\n     * @return {[type]} [description]\n     */\n    setColumns(ajax) {\n\n        if (!ajax) {\n            each(this.data, row => {\n                each(row.cells, cell => {\n                    cell.data = cell.innerHTML\n                })\n            })\n        }\n\n        // Check for the columns option\n        if (this.options.columns && this.headings.length) {\n\n            each(this.options.columns, data => {\n\n                // convert single column selection to array\n                if (!isArray(data.select)) {\n                    data.select = [data.select]\n                }\n\n                if (data.hasOwnProperty(\"render\") && typeof data.render === \"function\") {\n                    this.selectedColumns = this.selectedColumns.concat(data.select)\n\n                    this.columnRenderers.push({\n                        columns: data.select,\n                        renderer: data.render\n                    })\n                }\n\n                // Add the data attributes to the th elements\n                each(data.select, column => {\n                    const th = this.headings[column]\n                    if (data.type) {\n                        th.setAttribute(\"data-type\", data.type)\n                    }\n                    if (data.format) {\n                        th.setAttribute(\"data-format\", data.format)\n                    }\n                    if (data.hasOwnProperty(\"sortable\")) {\n                        th.setAttribute(\"data-sortable\", data.sortable)\n                    }\n\n                    if (data.hasOwnProperty(\"hidden\")) {\n                        if (data.hidden !== false) {\n                            this.columns().hide([column])\n                        }\n                    }\n\n                    if (data.hasOwnProperty(\"sort\") && data.select.length === 1) {\n                        this.columns().sort(data.select[0], data.sort, true)\n                    }\n                })\n            })\n        }\n\n        if (this.hasRows) {\n            each(this.data, (row, i) => {\n                row.dataIndex = i\n                each(row.cells, cell => {\n                    cell.data = cell.innerHTML\n                })\n            })\n\n            if (this.selectedColumns.length) {\n                each(this.data, row => {\n                    each(row.cells, (cell, i) => {\n                        if (this.selectedColumns.includes(i)) {\n                            each(this.columnRenderers, o => {\n                                if (o.columns.includes(i)) {\n                                    cell.innerHTML = o.renderer.call(this, cell.data, cell, row)\n                                }\n                            })\n                        }\n                    })\n                })\n            }\n\n            this.columns().rebuild()\n        }\n\n        this.render(\"header\")\n    }\n\n    /**\n     * Destroy the instance\n     * @return {void}\n     */\n    destroy() {\n        this.table.innerHTML = this.initialLayout\n\n        // Remove the className\n        classList.remove(this.table, \"dataTable-table\")\n\n        // Remove the containers\n        this.wrapper.parentNode.replaceChild(this.table, this.wrapper)\n\n        this.initialized = false\n    }\n\n    /**\n     * Update the instance\n     * @return {Void}\n     */\n    update() {\n        classList.remove(this.wrapper, \"dataTable-empty\")\n\n        this.paginate(this)\n        this.render(\"page\")\n\n        this.links = []\n\n        let i = this.pages.length\n        while (i--) {\n            const num = i + 1\n            this.links[i] = button(i === 0 ? \"active\" : \"\", num, num)\n        }\n\n        this.sorting = false\n\n        this.render(\"pager\")\n\n        this.rows().update()\n\n        this.emit(\"datatable.update\")\n    }\n\n    /**\n     * Sort rows into pages\n     * @return {Number}\n     */\n    paginate() {\n        const perPage = this.options.perPage\n        let rows = this.activeRows\n\n        if (this.searching) {\n            rows = []\n\n            each(this.searchData, function (index) {\n                rows.push(this.activeRows[index])\n            }, this)\n        }\n\n        if (this.options.paging) {\n            // Check for hidden columns\n            this.pages = rows\n                .map((tr, i) => i % perPage === 0 ? rows.slice(i, i + perPage) : null)\n                .filter(page => page)\n        } else {\n            this.pages = [rows]\n        }\n\n        this.totalPages = this.lastPage = this.pages.length\n\n        return this.totalPages\n    }\n\n    /**\n     * Fix column widths\n     * @return {Void}\n     */\n    fixColumns() {\n\n        if ((this.options.scrollY.length || this.options.fixedColumns) && this.activeHeadings && this.activeHeadings.length) {\n            let cells\n            let hd = false\n            this.columnWidths = []\n\n            // If we have headings we need only set the widths on them\n            // otherwise we need a temp header and the widths need applying to all cells\n            if (this.table.tHead) {\n\n                if (this.options.scrollY.length) {\n                    hd = createElement(\"thead\")\n                    hd.appendChild(createElement(\"tr\"))\n                    hd.style.height = '0px'\n                    if (this.headerTable) {\n                        // move real header back into place\n                        this.table.tHead = this.headerTable.tHead\n                    }\n                }\n\n                // Reset widths\n                each(this.activeHeadings, cell => {\n                    cell.style.width = \"\"\n                }, this)\n\n                each(this.activeHeadings, function (cell, i) {\n                    const ow = cell.offsetWidth\n                    const w = ow / this.rect.width * 100\n                    cell.style.width = `${w}%`\n                    this.columnWidths[i] = ow\n                    if (this.options.scrollY.length) {\n                        const th = createElement(\"th\")\n                        hd.firstElementChild.appendChild(th)\n                        th.style.width = `${w}%`\n                        th.style.paddingTop = \"0\"\n                        th.style.paddingBottom = \"0\"\n                        th.style.border = \"0\"\n                    }\n                }, this)\n\n                if (this.options.scrollY.length) {\n                    const container = this.table.parentElement\n                    if (!this.headerTable) {\n                        this.headerTable = createElement(\"table\", {\n                            class: \"dataTable-table\"\n                        })\n                        const headercontainer = createElement(\"div\", {\n                            class: \"dataTable-headercontainer\"\n                        })\n                        headercontainer.appendChild(this.headerTable)\n                        container.parentElement.insertBefore(headercontainer, container)\n                    }\n                    const thd = this.table.tHead\n                    this.table.replaceChild(hd, thd)\n                    this.headerTable.tHead = thd\n\n                    // Compensate for scrollbars.\n                    this.headerTable.style.paddingRight = `${this.headerTable.clientWidth - this.table.clientWidth}px`\n\n                    if (container.scrollHeight > container.clientHeight) {\n                        // scrollbars on one page means scrollbars on all pages.\n                        container.style.overflowY = 'scroll'\n                    }\n                }\n\n            } else {\n                cells = []\n\n                // Make temperary headings\n                hd = createElement(\"thead\")\n                const r = createElement(\"tr\")\n                const c = this.table.tBodies[0].rows[0].cells\n                each(c, () => {\n                    const th = createElement(\"th\")\n                    r.appendChild(th)\n                    cells.push(th)\n                })\n\n                hd.appendChild(r)\n                this.table.insertBefore(hd, this.body)\n\n                const widths = []\n                each(cells, function (cell, i) {\n                    const ow = cell.offsetWidth\n                    const w = ow / this.rect.width * 100\n                    widths.push(w)\n                    this.columnWidths[i] = ow\n                }, this)\n\n                each(this.data, function (row) {\n                    each(row.cells, function (cell, i) {\n                        if (this.columns(cell.cellIndex).visible())\n                            cell.style.width = `${widths[i]}%`\n                    }, this)\n                }, this)\n\n                // Discard the temp header\n                this.table.removeChild(hd)\n            }\n        }\n    }\n\n    /**\n     * Fix the container height\n     * @return {Void}\n     */\n    fixHeight() {\n        if (this.options.fixedHeight) {\n            this.container.style.height = null\n            this.rect = this.container.getBoundingClientRect()\n            this.container.style.height = `${this.rect.height}px`\n        }\n    }\n\n    /**\n     * Perform a search of the data set\n     * @param  {string} query\n     * @return {void}\n     */\n    search(query) {\n        if (!this.hasRows) return false\n\n        query = query.toLowerCase()\n\n        this.currentPage = 1\n        this.searching = true\n        this.searchData = []\n\n        if (!query.length) {\n            this.searching = false\n            this.update()\n            this.emit(\"datatable.search\", query, this.searchData)\n            classList.remove(this.wrapper, \"search-results\")\n            return false\n        }\n\n        this.clear()\n\n        each(this.data, function (row, idx) {\n            const inArray = this.searchData.includes(row)\n\n            // https://github.com/Mobius1/Vanilla-DataTables/issues/12\n            const doesQueryMatch = query.split(\" \").reduce((bool, word) => {\n                let includes = false\n                let cell = null\n                let content = null\n\n                for (let x = 0; x < row.cells.length; x++) {\n                    cell = row.cells[x]\n                    content = cell.hasAttribute('data-content') ? cell.getAttribute('data-content') : cell.textContent\n\n                    if (\n                        content.toLowerCase().includes(word) &&\n                        this.columns(cell.cellIndex).visible()\n                    ) {\n                        includes = true\n                        break\n                    }\n                }\n\n                return bool && includes\n            }, true)\n\n            if (doesQueryMatch && !inArray) {\n                row.searchIndex = idx\n                this.searchData.push(idx)\n            } else {\n                row.searchIndex = null\n            }\n        }, this)\n\n        classList.add(this.wrapper, \"search-results\")\n\n        if (!this.searchData.length) {\n            classList.remove(this.wrapper, \"search-results\")\n\n            this.setMessage(this.options.labels.noRows)\n        } else {\n            this.update()\n        }\n\n        this.emit(\"datatable.search\", query, this.searchData)\n    }\n\n    /**\n     * Change page\n     * @param  {int} page\n     * @return {void}\n     */\n    page(page) {\n        // We don't want to load the current page again.\n        if (page == this.currentPage) {\n            return false\n        }\n\n        if (!isNaN(page)) {\n            this.currentPage = parseInt(page, 10)\n        }\n\n        if (page > this.pages.length || page < 0) {\n            return false\n        }\n\n        this.render(\"page\")\n        this.render(\"pager\")\n\n        this.emit(\"datatable.page\", page)\n    }\n\n    /**\n     * Sort by column\n     * @param  {int} column - The column no.\n     * @param  {string} direction - asc or desc\n     * @return {void}\n     */\n    sortColumn(column, direction) {\n        // Use columns API until sortColumn method is removed\n        this.columns().sort(column, direction)\n    }\n\n    /**\n     * Add new row data\n     * @param {object} data\n     */\n    insert(data) {\n        let rows = []\n        if (isObject(data)) {\n            if (data.headings) {\n                if (!this.hasHeadings && !this.hasRows) {\n                    const tr = createElement(\"tr\")\n                    let th\n                    each(data.headings, heading => {\n                        th = createElement(\"th\", {\n                            html: heading\n                        })\n\n                        tr.appendChild(th)\n                    })\n                    this.head.appendChild(tr)\n\n                    this.header = tr\n                    this.headings = [].slice.call(tr.cells)\n                    this.hasHeadings = true\n\n                    // Re-enable sorting if it was disabled due\n                    // to missing header\n                    this.options.sortable = this.initialSortable\n\n                    // Allow sorting on new header\n                    this.render(\"header\")\n\n                    // Activate newly added headings\n                    this.activeHeadings = this.headings.slice()\n                }\n            }\n\n            if (data.data && isArray(data.data)) {\n                rows = data.data\n            }\n        } else if (isArray(data)) {\n            each(data, row => {\n                const r = []\n                each(row, (cell, heading) => {\n\n                    const index = this.labels.indexOf(heading)\n\n                    if (index > -1) {\n                        r[index] = cell\n                    }\n                })\n                rows.push(r)\n            })\n        }\n\n        if (rows.length) {\n            this.rows().add(rows)\n\n            this.hasRows = true\n        }\n\n        this.update()\n\n        this.fixColumns()\n    }\n\n    /**\n     * Refresh the instance\n     * @return {void}\n     */\n    refresh() {\n        if (this.options.searchable) {\n            this.input.value = \"\"\n            this.searching = false\n        }\n        this.currentPage = 1\n        this.onFirstPage = true\n        this.update()\n\n        this.emit(\"datatable.refresh\")\n    }\n\n    /**\n     * Truncate the table\n     * @param  {mixes} html - HTML string or HTMLElement\n     * @return {void}\n     */\n    clear(html) {\n        if (this.body) {\n            flush(this.body, this.isIE)\n        }\n\n        let parent = this.body\n        if (!this.body) {\n            parent = this.table\n        }\n\n        if (html) {\n            if (typeof html === \"string\") {\n                const frag = document.createDocumentFragment()\n                frag.innerHTML = html\n            }\n\n            parent.appendChild(html)\n        }\n    }\n\n    /**\n     * Export table to various formats (csv, txt or sql)\n     * @param  {Object} options User options\n     * @return {Boolean}\n     */\n    export(options) {\n        if (!this.hasHeadings && !this.hasRows) return false\n\n        const headers = this.activeHeadings\n        let rows = []\n        const arr = []\n        let i\n        let x\n        let str\n        let link\n\n        const defaults = {\n            download: true,\n            skipColumn: [],\n\n            // csv\n            lineDelimiter: \"\\n\",\n            columnDelimiter: \",\",\n\n            // sql\n            tableName: \"myTable\",\n\n            // json\n            replacer: null,\n            space: 4\n        }\n\n        // Check for the options object\n        if (!isObject(options)) {\n            return false\n        }\n\n        const o = extend(defaults, options)\n\n        if (o.type) {\n            if (o.type === \"txt\" || o.type === \"csv\") {\n                // Include headings\n                rows[0] = this.header\n            }\n\n            // Selection or whole table\n            if (o.selection) {\n                // Page number\n                if (!isNaN(o.selection)) {\n                    rows = rows.concat(this.pages[o.selection - 1])\n                } else if (isArray(o.selection)) {\n                    // Array of page numbers\n                    for (i = 0; i < o.selection.length; i++) {\n                        rows = rows.concat(this.pages[o.selection[i] - 1])\n                    }\n                }\n            } else {\n                rows = rows.concat(this.activeRows)\n            }\n\n            // Only proceed if we have data\n            if (rows.length) {\n                if (o.type === \"txt\" || o.type === \"csv\") {\n                    str = \"\"\n\n                    for (i = 0; i < rows.length; i++) {\n                        for (x = 0; x < rows[i].cells.length; x++) {\n                            // Check for column skip and visibility\n                            if (\n                                !o.skipColumn.includes(headers[x].originalCellIndex) &&\n                                this.columns(headers[x].originalCellIndex).visible()\n                            ) {\n                                let text = rows[i].cells[x].textContent\n                                text = text.trim()\n                                text = text.replace(/\\s{2,}/g, ' ')\n                                text = text.replace(/\\n/g, '  ')\n                                text = text.replace(/\"/g, '\"\"')\n                                //have to manually encode \"#\" as encodeURI leaves it as is.\n                                text = text.replace(/#/g, \"%23\")\n                                if (text.includes(\",\"))\n                                    text = `\"${text}\"`\n\n\n                                str += text + o.columnDelimiter\n                            }\n                        }\n                        // Remove trailing column delimiter\n                        str = str.trim().substring(0, str.length - 1)\n\n                        // Apply line delimiter\n                        str += o.lineDelimiter\n                    }\n\n                    // Remove trailing line delimiter\n                    str = str.trim().substring(0, str.length - 1)\n\n                    if (o.download) {\n                        str = `data:text/csv;charset=utf-8,${str}`\n                    }\n                } else if (o.type === \"sql\") {\n                    // Begin INSERT statement\n                    str = `INSERT INTO \\`${o.tableName}\\` (`\n\n                    // Convert table headings to column names\n                    for (i = 0; i < headers.length; i++) {\n                        // Check for column skip and column visibility\n                        if (\n                            !o.skipColumn.includes(headers[i].originalCellIndex) &&\n                            this.columns(headers[i].originalCellIndex).visible()\n                        ) {\n                            str += `\\`${headers[i].textContent}\\`,`\n                        }\n                    }\n\n                    // Remove trailing comma\n                    str = str.trim().substring(0, str.length - 1)\n\n                    // Begin VALUES\n                    str += \") VALUES \"\n\n                    // Iterate rows and convert cell data to column values\n                    for (i = 0; i < rows.length; i++) {\n                        str += \"(\"\n\n                        for (x = 0; x < rows[i].cells.length; x++) {\n                            // Check for column skip and column visibility\n                            if (\n                                !o.skipColumn.includes(headers[x].originalCellIndex) &&\n                                this.columns(headers[x].originalCellIndex).visible()\n                            ) {\n                                str += `\"${rows[i].cells[x].textContent}\",`\n                            }\n                        }\n\n                        // Remove trailing comma\n                        str = str.trim().substring(0, str.length - 1)\n\n                        // end VALUES\n                        str += \"),\"\n                    }\n\n                    // Remove trailing comma\n                    str = str.trim().substring(0, str.length - 1)\n\n                    // Add trailing colon\n                    str += \";\"\n\n                    if (o.download) {\n                        str = `data:application/sql;charset=utf-8,${str}`\n                    }\n                } else if (o.type === \"json\") {\n                    // Iterate rows\n                    for (x = 0; x < rows.length; x++) {\n                        arr[x] = arr[x] || {}\n                        // Iterate columns\n                        for (i = 0; i < headers.length; i++) {\n                            // Check for column skip and column visibility\n                            if (\n                                !o.skipColumn.includes(headers[i].originalCellIndex) &&\n                                this.columns(headers[i].originalCellIndex).visible()\n                            ) {\n                                arr[x][headers[i].textContent] = rows[x].cells[i].textContent\n                            }\n                        }\n                    }\n\n                    // Convert the array of objects to JSON string\n                    str = JSON.stringify(arr, o.replacer, o.space)\n\n                    if (o.download) {\n                        str = `data:application/json;charset=utf-8,${str}`\n                    }\n                }\n\n                // Download\n                if (o.download) {\n                    // Filename\n                    o.filename = o.filename || \"datatable_export\"\n                    o.filename += `.${o.type}`\n\n                    str = encodeURI(str)\n\n                    // Create a link to trigger the download\n                    link = document.createElement(\"a\")\n                    link.href = str\n                    link.download = o.filename\n\n                    // Append the link\n                    document.body.appendChild(link)\n\n                    // Trigger the download\n                    link.click()\n\n                    // Remove the link\n                    document.body.removeChild(link)\n                }\n\n                return str\n            }\n        }\n\n        return false\n    }\n\n    /**\n     * Import data to the table\n     * @param  {Object} options User options\n     * @return {Boolean}\n     */\n    import(options) {\n        let obj = false\n        const defaults = {\n            // csv\n            lineDelimiter: \"\\n\",\n            columnDelimiter: \",\"\n        }\n\n        // Check for the options object\n        if (!isObject(options)) {\n            return false\n        }\n\n        options = extend(defaults, options)\n\n        if (options.data.length || isObject(options.data)) {\n            // Import CSV\n            if (options.type === \"csv\") {\n                obj = {\n                    data: []\n                }\n\n                // Split the string into rows\n                const rows = options.data.split(options.lineDelimiter)\n\n                if (rows.length) {\n\n                    if (options.headings) {\n                        obj.headings = rows[0].split(options.columnDelimiter)\n\n                        rows.shift()\n                    }\n\n                    each(rows, (row, i) => {\n                        obj.data[i] = []\n\n                        // Split the rows into values\n                        const values = row.split(options.columnDelimiter)\n\n                        if (values.length) {\n                            each(values, value => {\n                                obj.data[i].push(value)\n                            })\n                        }\n                    })\n                }\n            } else if (options.type === \"json\") {\n                const json = isJson(options.data)\n\n                // Valid JSON string\n                if (json) {\n                    obj = {\n                        headings: [],\n                        data: []\n                    }\n\n                    each(json, (data, i) => {\n                        obj.data[i] = []\n                        each(data, (value, column) => {\n                            if (!obj.headings.includes(column)) {\n                                obj.headings.push(column)\n                            }\n\n                            obj.data[i].push(value)\n                        })\n                    })\n                } else {\n                    // console.warn(\"That's not valid JSON!\")\n                }\n            }\n\n            if (isObject(options.data)) {\n                obj = options.data\n            }\n\n            if (obj) {\n                // Add the rows\n                this.insert(obj)\n            }\n        }\n\n        return false\n    }\n\n    /**\n     * Print the table\n     * @return {void}\n     */\n    print() {\n        const headings = this.activeHeadings\n        const rows = this.activeRows\n        const table = createElement(\"table\")\n        const thead = createElement(\"thead\")\n        const tbody = createElement(\"tbody\")\n\n        const tr = createElement(\"tr\")\n        each(headings, th => {\n            tr.appendChild(\n                createElement(\"th\", {\n                    html: th.textContent\n                })\n            )\n        })\n\n        thead.appendChild(tr)\n\n        each(rows, row => {\n            const tr = createElement(\"tr\")\n            each(row.cells, cell => {\n                tr.appendChild(\n                    createElement(\"td\", {\n                        html: cell.textContent\n                    })\n                )\n            })\n            tbody.appendChild(tr)\n        })\n\n        table.appendChild(thead)\n        table.appendChild(tbody)\n\n        // Open new window\n        const w = window.open()\n\n        // Append the table to the body\n        w.document.body.appendChild(table)\n\n        // Print\n        w.print()\n    }\n\n    /**\n     * Show a message in the table\n     * @param {string} message\n     */\n    setMessage(message) {\n        let colspan = 1\n\n        if (this.hasRows) {\n            colspan = this.data[0].cells.length\n        } else if (this.activeHeadings.length) {\n            colspan = this.activeHeadings.length\n        }\n\n        classList.add(this.wrapper, \"dataTable-empty\")\n\n        if (this.label) {\n            this.label.innerHTML = \"\"\n        }\n        this.totalPages = 0\n        this.render(\"pager\")\n\n        this.clear(\n            createElement(\"tr\", {\n                html: `<td class=\"dataTables-empty\" colspan=\"${colspan}\">${message}</td>`\n            })\n        )\n    }\n\n    /**\n     * Columns API access\n     * @return {Object} new Columns instance\n     */\n    columns(columns) {\n        return new Columns(this, columns)\n    }\n\n    /**\n     * Rows API access\n     * @return {Object} new Rows instance\n     */\n    rows(rows) {\n        return new Rows(this, rows)\n    }\n\n    /**\n     * Add custom event listener\n     * @param  {String} event\n     * @param  {Function} callback\n     * @return {Void}\n     */\n    on(event, callback) {\n        this.events = this.events || {}\n        this.events[event] = this.events[event] || []\n        this.events[event].push(callback)\n    }\n\n    /**\n     * Remove custom event listener\n     * @param  {String} event\n     * @param  {Function} callback\n     * @return {Void}\n     */\n    off(event, callback) {\n        this.events = this.events || {}\n        if (event in this.events === false) return\n        this.events[event].splice(this.events[event].indexOf(callback), 1)\n    }\n\n    /**\n     * Fire custom event\n     * @param  {String} event\n     * @return {Void}\n     */\n    emit(event) {\n        this.events = this.events || {}\n        if (event in this.events === false) return\n        for (let i = 0; i < this.events[event].length; i++) {\n            this.events[event][i].apply(this, Array.prototype.slice.call(arguments, 1))\n        }\n    }\n}\n"],"names":["isObject","val","Object","prototype","toString","call","isArray","Array","isJson","str","let","t","JSON","parse","e","extend","src","props","const","prop","hasOwnProperty","each","arr","fn","scope","n","length","on","el","addEventListener","createElement","a","b","d","document","innerHTML","setAttribute","flush","ie","NodeList","hasChildNodes","removeChild","firstChild","button","c","p","class","html","classList","add","s","contains","className","trim","remove","replace","RegExp","split","join","match","sortItems","f","value","g","h","i","truncate","ellipsis","j","k","l","push","children","getAttribute","Rows","dt","rows","this","build","row","tr","headings","map","td","data","appendChild","render","hasRows","update","columns","rebuild","select","sort","splice","dataIndex","Columns","swap","cols","x","y","order","cell","temp","column","cloneNode","originalCellIndex","sortable","hiddenColumns","includes","searchIndex","undefined","cells","activeHeadings","activeRows","hide","show","index","indexOf","visible","th","isNaN","insert","heading","hiddenHeader","nodeName","type","format","renderHeader","dir","init","hasHeadings","sorting","alpha","numeric","parseFunction","content","waitFor","hasAttribute","Promise","then","ref","parseDate","all","top","btm","from","forEach","innerText","num","parseFloat","Number","lastTh","concat","indexes","v","searchData","this$1","emit","cellIndex","dataToTable","thead","tbody","options","col","Error","table","tHead","tBodies","defaultConfig","searchable","paging","perPage","perPageSelect","nextPrev","firstLast","prevText","nextText","firstText","lastText","ellipsisText","ascText","descText","truncatePager","pagerDelta","scrollY","fixedColumns","fixedHeight","header","footer","labels","placeholder","noRows","info","layout","bottom","DataTable","initialized","querySelector","initialLayout","initialSortable","isIE","test","navigator","userAgent","currentPage","onFirstPage","columnRenderers","selectedColumns","setTimeout","plugins","plugin","enabled","renderPage","renderPager","o","template","ajax","xhr","XMLHttpRequest","readyState","status","obj","load","responseText","import","setColumns","open","url","send","body","head","foot","tFoot","insertBefore","slice","wrapper","wrap","selected","option","Option","outerHTML","form","w","paginator","container","pagers","querySelectorAll","label","parentNode","replaceChild","rect","getBoundingClientRect","fixHeight","fixColumns","bindEvents","totalPages","frag","createDocumentFragment","pages","clear","onLastPage","lastPage","setMessage","items","current","searching","string","prev","next","onlastPage","pager","links","textContent","firstElementChild","link","href","that","selector","parseInt","input","search","target","toLowerCase","page","preventDefault","window","renderer","hidden","destroy","paginate","filter","hd","columnWidths","style","height","headerTable","width","ow","offsetWidth","paddingTop","paddingBottom","border","parentElement","headercontainer","thd","paddingRight","clientWidth","scrollHeight","clientHeight","overflowY","r","widths","query","idx","inArray","reduce","bool","word","sortColumn","direction","refresh","parent","export","headers","download","skipColumn","lineDelimiter","columnDelimiter","tableName","replacer","space","selection","text","substring","stringify","filename","encodeURI","click","shift","values","json","print","message","colspan","event","callback","events","off","apply","arguments"],"mappings":"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"}