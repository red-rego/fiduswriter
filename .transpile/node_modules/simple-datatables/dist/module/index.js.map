{"version":3,"file":"index.js","sources":["../../src/helpers.js","../../src/rows.js","../../src/columns.js","../../src/table.js","../../src/config.js","../../src/datatable.js"],"sourcesContent":["/**\n * Check is item is object\n * @return {Boolean}\n */\nexport const isObject = val => Object.prototype.toString.call(val) === \"[object Object]\"\n\n/**\n * Check is item is array\n * @return {Boolean}\n */\nexport const isArray = val => Array.isArray(val)\n\n/**\n * Check for valid JSON string\n * @param  {String}   str\n * @return {Boolean|Array|Object}\n */\nexport const isJson = str => {\n    let t = !1\n    try {\n        t = JSON.parse(str)\n    } catch (e) {\n        return !1\n    }\n    return !(null === t || (!isArray(t) && !isObject(t))) && t\n}\n\n/**\n * Merge objects (reccursive)\n * @param  {Object} r\n * @param  {Object} t\n * @return {Object}\n */\nexport const extend = (src, props) => {\n    for (const prop in props) {\n        if (props.hasOwnProperty(prop)) {\n            const val = props[prop]\n            if (val && isObject(val)) {\n                src[prop] = src[prop] || {}\n                extend(src[prop], val)\n            } else {\n                src[prop] = val\n            }\n        }\n    }\n    return src\n}\n\n/**\n * Iterator helper\n * @param  {(Array|Object)}   arr     Any object, array or array-like collection.\n * @param  {Function}         fn      Callback\n * @param  {Object}           scope   Change the value of this\n * @return {Void}\n */\nexport const each = (arr, fn, scope) => {\n    let n\n    if (isObject(arr)) {\n        for (n in arr) {\n            if (Object.prototype.hasOwnProperty.call(arr, n)) {\n                fn.call(scope, arr[n], n)\n            }\n        }\n    } else {\n        for (n = 0; n < arr.length; n++) {\n            fn.call(scope, arr[n], n)\n        }\n    }\n}\n\n/**\n * Add event listener to target\n * @param  {Object} el\n * @param  {String} e\n * @param  {Function} fn\n */\nexport const on = (el, e, fn) => {\n    el.addEventListener(e, fn, false)\n}\n\n/**\n * Create DOM element node\n * @param  {String}   a nodeName\n * @param  {Object}   b properties and attributes\n * @return {Object}\n */\nexport const createElement = (a, b) => {\n    const d = document.createElement(a)\n    if (b && \"object\" == typeof b) {\n        let e\n        for (e in b) {\n            if (\"html\" === e) {\n                d.innerHTML = b[e]\n            } else {\n                d.setAttribute(e, b[e])\n            }\n        }\n    }\n    return d\n}\n\nexport const flush = (el, ie) => {\n    if (el instanceof NodeList) {\n        each(el, e => {\n            flush(e, ie)\n        })\n    } else {\n        if (ie) {\n            while (el.hasChildNodes()) {\n                el.removeChild(el.firstChild)\n            }\n        } else {\n            el.innerHTML = \"\"\n        }\n    }\n}\n\n/**\n * Create button helper\n * @param  {String}   c\n * @param  {Number}   p\n * @param  {String}   t\n * @return {Object}\n */\nexport const button = (c, p, t) => createElement(\"li\", {\n    class: c,\n    html: `<a href=\"#\" data-page=\"${p}\">${t}</a>`\n})\n\n/**\n * classList shim\n * @type {Object}\n */\nexport const classList = {\n    add(s, a) {\n        if (s.classList) {\n            s.classList.add(a)\n        } else {\n            if (!classList.contains(s, a)) {\n                s.className = `${s.className.trim()} ${a}`\n            }\n        }\n    },\n    remove(s, a) {\n        if (s.classList) {\n            s.classList.remove(a)\n        } else {\n            if (classList.contains(s, a)) {\n                s.className = s.className.replace(\n                    new RegExp(`(^|\\\\s)${a.split(\" \").join(\"|\")}(\\\\s|$)`, \"gi\"),\n                    \" \"\n                )\n            }\n        }\n    },\n    contains(s, a) {\n        if (s)\n            return s.classList ?\n                s.classList.contains(a) :\n                !!s.className &&\n                !!s.className.match(new RegExp(`(\\\\s|^)${a}(\\\\s|$)`))\n    }\n}\n\n\n/**\n * Bubble sort algorithm\n */\nexport const sortItems = (a, b) => {\n    let c\n    let d\n    if (1 === b) {\n        c = 0\n        d = a.length\n    } else {\n        if (b === -1) {\n            c = a.length - 1\n            d = -1\n        }\n    }\n    for (let e = !0; e;) {\n        e = !1\n        for (let f = c; f != d; f += b) {\n            if (a[f + b] && a[f].value > a[f + b].value) {\n                const g = a[f]\n                const h = a[f + b]\n                const i = g\n                a[f] = h\n                a[f + b] = i\n                e = !0\n            }\n        }\n    }\n    return a\n}\n\n/**\n * Pager truncation algorithm\n */\nexport const truncate = (a, b, c, d, ellipsis) => {\n    d = d || 2\n    let j\n    const e = 2 * d\n    let f = b - d\n    let g = b + d\n    const h = []\n    const i = []\n    if (b < 4 - d + e) {\n        g = 3 + e\n    } else if (b > c - (3 - d + e)) {\n        f = c - (2 + e)\n    }\n    for (let k = 1; k <= c; k++) {\n        if (1 == k || k == c || (k >= f && k <= g)) {\n            const l = a[k - 1]\n            classList.remove(l, \"active\")\n            h.push(l)\n        }\n    }\n    each(h, c => {\n        const d = c.children[0].getAttribute(\"data-page\")\n        if (j) {\n            const e = j.children[0].getAttribute(\"data-page\")\n            if (d - e == 2) i.push(a[e])\n            else if (d - e != 1) {\n                const f = createElement(\"li\", {\n                    class: \"ellipsis\",\n                    html: `<a href=\"#\">${ellipsis}</a>`\n                })\n                i.push(f)\n            }\n        }\n        i.push(c)\n        j = c\n    })\n\n    return i\n}\n","import {isArray, each, createElement} from \"./helpers\"\n/**\n * Rows API\n * @param {Object} instance DataTable instance\n * @param {Array} rows\n */\nexport class Rows {\n    constructor(dt, rows) {\n        this.dt = dt\n        this.rows = rows\n\n        return this\n    }\n\n    /**\n     * Build a new row\n     * @param  {Array} row\n     * @return {HTMLElement}\n     */\n    build(row) {\n        const tr = createElement(\"tr\")\n\n        let headings = this.dt.headings\n\n        if (!headings.length) {\n            headings = row.map(() => \"\")\n        }\n\n        each(headings, (h, i) => {\n            const td = createElement(\"td\")\n\n            // Fixes #29\n            if (!row[i] || !row[i].length) {\n                row[i] = \"\"\n            }\n\n            td.innerHTML = row[i]\n\n            td.data = row[i]\n\n            tr.appendChild(td)\n        })\n\n        return tr\n    }\n\n    render(row) {\n        return row\n    }\n\n    /**\n     * Add new row\n     * @param {Array} select\n     */\n    add(data) {\n        if (isArray(data)) {\n            const dt = this.dt\n            // Check for multiple rows\n            if (isArray(data[0])) {\n                each(data, function (row) {\n                    dt.data.push(this.build(row))\n                }, this)\n            } else {\n                dt.data.push(this.build(data))\n            }\n\n            // We may have added data to an empty table\n            if ( dt.data.length ) {\n                dt.hasRows = true\n            }\n\n\n            this.update()\n\n            dt.columns().rebuild()\n        }\n\n    }\n\n    /**\n     * Remove row(s)\n     * @param  {Array|Number} select\n     * @return {Void}\n     */\n    remove(select) {\n        const dt = this.dt\n\n        if (isArray(select)) {\n            // Remove in reverse otherwise the indexes will be incorrect\n            select.sort((a, b) => b - a)\n\n            each(select, row => {\n                dt.data.splice(row, 1)\n            })\n        } else {\n            dt.data.splice(select, 1)\n        }\n\n        // We may have emptied the table\n        if ( !dt.data.length ) {\n            dt.hasRows = false\n        }\n\n        this.update()\n        dt.columns().rebuild()\n    }\n\n    /**\n     * Update row indexes\n     * @return {Void}\n     */\n    update() {\n        each(this.dt.data, (row, i) => {\n            row.dataIndex = i\n        })\n    }\n}\n","import {isArray, each, classList, sortItems} from \"./helpers\"\n\n/**\n * Columns API\n * @param {Object} instance DataTable instance\n * @param {Mixed} columns  Column index or array of column indexes\n */\nexport class Columns {\n    constructor(dt) {\n        this.dt = dt\n        return this\n    }\n\n    /**\n     * Swap two columns\n     * @return {Void}\n     */\n    swap(columns) {\n        if (columns.length && columns.length === 2) {\n            const cols = []\n\n            // Get the current column indexes\n            each(this.dt.headings, (h, i) => {\n                cols.push(i)\n            })\n\n            const x = columns[0]\n            const y = columns[1]\n            const b = cols[y]\n            cols[y] = cols[x]\n            cols[x] = b\n\n            this.order(cols)\n        }\n    }\n\n    /**\n     * Reorder the columns\n     * @return {Array} columns  Array of ordered column indexes\n     */\n    order(columns) {\n        let a\n        let b\n        let c\n        let d\n        let h\n        let s\n        let cell\n\n        const temp = [\n            [],\n            [],\n            [],\n            []\n        ]\n\n        const dt = this.dt\n\n        // Order the headings\n        each(columns, (column, x) => {\n            h = dt.headings[column]\n            s = h.getAttribute(\"data-sortable\") !== \"false\"\n            a = h.cloneNode(true)\n            a.originalCellIndex = x\n            a.sortable = s\n\n            temp[0].push(a)\n\n            if (!dt.hiddenColumns.includes(column)) {\n                b = h.cloneNode(true)\n                b.originalCellIndex = x\n                b.sortable = s\n\n                temp[1].push(b)\n            }\n        })\n\n        // Order the row cells\n        each(dt.data, (row, i) => {\n            c = row.cloneNode(false)\n            d = row.cloneNode(false)\n\n            c.dataIndex = d.dataIndex = i\n\n            if (row.searchIndex !== null && row.searchIndex !== undefined) {\n                c.searchIndex = d.searchIndex = row.searchIndex\n            }\n\n            // Append the cell to the fragment in the correct order\n            each(columns, column => {\n                cell = row.cells[column].cloneNode(true)\n                cell.data = row.cells[column].data\n                c.appendChild(cell)\n\n                if (!dt.hiddenColumns.includes(column)) {\n                    cell = row.cells[column].cloneNode(true)\n                    cell.data = row.cells[column].data\n                    d.appendChild(cell)\n                }\n            })\n\n            temp[2].push(c)\n            temp[3].push(d)\n        })\n\n        dt.headings = temp[0]\n        dt.activeHeadings = temp[1]\n\n        dt.data = temp[2]\n        dt.activeRows = temp[3]\n\n        // Update\n        dt.update()\n    }\n\n    /**\n     * Hide columns\n     * @return {Void}\n     */\n    hide(columns) {\n        if (columns.length) {\n            const dt = this.dt\n\n            each(columns, column => {\n                if (!dt.hiddenColumns.includes(column)) {\n                    dt.hiddenColumns.push(column)\n                }\n            })\n\n            this.rebuild()\n        }\n    }\n\n    /**\n     * Show columns\n     * @return {Void}\n     */\n    show(columns) {\n        if (columns.length) {\n            let index\n            const dt = this.dt\n\n            each(columns, column => {\n                index = dt.hiddenColumns.indexOf(column)\n                if (index > -1) {\n                    dt.hiddenColumns.splice(index, 1)\n                }\n            })\n\n            this.rebuild()\n        }\n    }\n\n    /**\n     * Check column(s) visibility\n     * @return {Boolean}\n     */\n    visible(columns) {\n        let cols\n        const dt = this.dt\n\n        columns = columns || dt.headings.map(th => th.originalCellIndex)\n\n        if (!isNaN(columns)) {\n            cols = !dt.hiddenColumns.includes(columns)\n        } else if (isArray(columns)) {\n            cols = []\n            each(columns, column => {\n                cols.push(!dt.hiddenColumns.includes(column))\n            })\n        }\n\n        return cols\n    }\n\n    /**\n     * Add a new column\n     * @param {Object} data\n     */\n    add(data) {\n        let td\n        const th = document.createElement(\"th\")\n\n        if (!this.dt.headings.length) {\n            this.dt.insert({\n                headings: [data.heading],\n                data: data.data.map(i => [i])\n            })\n            this.rebuild()\n            return\n        }\n\n        if (!this.dt.hiddenHeader) {\n            if (data.heading.nodeName) {\n                th.appendChild(data.heading)\n            } else {\n                th.innerHTML = data.heading\n            }\n        } else {\n            th.innerHTML = \"\"\n        }\n\n        this.dt.headings.push(th)\n\n        each(this.dt.data, (row, i) => {\n            if (data.data[i]) {\n                td = document.createElement(\"td\")\n\n                if (data.data[i].nodeName) {\n                    td.appendChild(data.data[i])\n                } else {\n                    td.innerHTML = data.data[i]\n                }\n\n                td.data = td.innerHTML\n\n                if (data.render) {\n                    td.innerHTML = data.render.call(this, td.data, td, row)\n                }\n\n                row.appendChild(td)\n            }\n        })\n\n        if (data.type) {\n            th.setAttribute(\"data-type\", data.type)\n        }\n        if (data.format) {\n            th.setAttribute(\"data-format\", data.format)\n        }\n\n        if (data.hasOwnProperty(\"sortable\")) {\n            th.sortable = data.sortable\n            th.setAttribute(\"data-sortable\", data.sortable === true ? \"true\" : \"false\")\n        }\n\n        this.rebuild()\n\n        this.dt.renderHeader()\n    }\n\n    /**\n     * Remove column(s)\n     * @param  {Array|Number} select\n     * @return {Void}\n     */\n    remove(select) {\n        if (isArray(select)) {\n            // Remove in reverse otherwise the indexes will be incorrect\n            select.sort((a, b) => b - a)\n\n            each(select, function (column) {\n                this.remove(column)\n            }, this)\n        } else {\n            this.dt.headings.splice(select, 1)\n\n            each(this.dt.data, row => {\n                row.removeChild(row.cells[select])\n            })\n        }\n\n        this.rebuild()\n    }\n\n    /**\n     * Sort by column\n     * @param  {int} column - The column no.\n     * @param  {string} dir - asc or desc\n     * @return {void}\n     */\n    sort(column, dir, init) {\n        const dt = this.dt\n\n        // Check column is present\n        if (dt.hasHeadings && (column < 0 || column > dt.headings.length)) {\n            return false\n        }\n\n        dt.sorting = true\n\n        let rows = dt.data\n        const alpha = []\n        const numeric = []\n        let a = 0\n        let n = 0\n        const th = dt.headings[column]\n        let parseFunction = content => content\n        const waitFor = []\n\n        // Check for date format\n        if (th.getAttribute(\"data-type\") === \"date\") {\n            let format = false\n            const formatted = th.hasAttribute(\"data-format\")\n\n            if (formatted) {\n                format = th.getAttribute(\"data-format\")\n            }\n            waitFor.push(import(\"./date\").then(({parseDate}) => {\n                parseFunction = content => parseDate(content, format)\n            }))\n        }\n\n        Promise.all(waitFor).then(() => {\n            Array.from(rows).forEach(tr => {\n                const cell = tr.cells[column]\n                const content = cell.hasAttribute('data-content') ? cell.getAttribute('data-content') : cell.innerText\n                const num = parseFunction(typeof content===\"string\" ? content.replace(/(\\$|,|\\s|%)/g, \"\") : content)\n\n                if (parseFloat(num) == num) {\n                    numeric[n++] = {\n                        value: Number(num),\n                        row: tr\n                    }\n                } else {\n                    alpha[a++] = {\n                        value: content,\n                        row: tr\n                    }\n                }\n            })\n\n            /* Sort according to direction (ascending or descending) */\n            if (!dir) {\n                if (classList.contains(th, \"asc\")) {\n                    dir = \"desc\"\n                } else {\n                    dir = \"asc\"\n                }\n            }\n            let top\n            let btm\n            if (dir == \"desc\") {\n                top = sortItems(alpha, -1)\n                btm = sortItems(numeric, -1)\n                classList.remove(th, \"asc\")\n                classList.add(th, \"desc\")\n            } else {\n                top = sortItems(numeric, 1)\n                btm = sortItems(alpha, 1)\n                classList.remove(th, \"desc\")\n                classList.add(th, \"asc\")\n            }\n\n            /* Clear asc/desc class names from the last sorted column's th if it isn't the same as the one that was just clicked */\n            if (dt.lastTh && th != dt.lastTh) {\n                classList.remove(dt.lastTh, \"desc\")\n                classList.remove(dt.lastTh, \"asc\")\n            }\n\n            dt.lastTh = th\n\n            /* Reorder the table */\n            rows = top.concat(btm)\n\n            dt.data = []\n            const indexes = []\n\n            each(rows, (v, i) => {\n                dt.data.push(v.row)\n\n                if (v.row.searchIndex !== null && v.row.searchIndex !== undefined) {\n                    indexes.push(i)\n                }\n            }, dt)\n\n            dt.searchData = indexes\n\n            this.rebuild()\n\n            dt.update()\n\n            if (!init) {\n                dt.emit(\"datatable.sort\", column, dir)\n            }\n        })\n    }\n\n    /**\n     * Rebuild the columns\n     * @return {Void}\n     */\n    rebuild() {\n        let a\n        let b\n        let c\n        let d\n        const dt = this.dt\n        const temp = []\n\n        dt.activeRows = []\n        dt.activeHeadings = []\n\n        each(dt.headings, (th, i) => {\n            th.originalCellIndex = i\n            th.sortable = th.getAttribute(\"data-sortable\") !== \"false\"\n            if (!dt.hiddenColumns.includes(i)) {\n                dt.activeHeadings.push(th)\n            }\n        }, this)\n\n        // Loop over the rows and reorder the cells\n        each(dt.data, (row, i) => {\n            a = row.cloneNode(false)\n            b = row.cloneNode(false)\n\n            a.dataIndex = b.dataIndex = i\n\n            if (row.searchIndex !== null && row.searchIndex !== undefined) {\n                a.searchIndex = b.searchIndex = row.searchIndex\n            }\n\n            // Append the cell to the fragment in the correct order\n            each(row.cells, cell => {\n                c = cell.cloneNode(true)\n                c.data = cell.data\n                a.appendChild(c)\n\n                if (!dt.hiddenColumns.includes(c.cellIndex)) {\n                    d = c.cloneNode(true)\n                    d.data = c.data\n                    b.appendChild(d)\n                }\n            })\n\n            // Append the fragment with the ordered cells\n            temp.push(a)\n            dt.activeRows.push(b)\n        })\n\n        dt.data = temp\n\n        dt.update()\n    }\n}\n","import {each, createElement} from \"./helpers\"\n\n/**\n * Parse data to HTML table\n */\nexport const dataToTable = function (data) {\n    let thead = false\n    let tbody = false\n\n    data = data || this.options.data\n\n    if (data.headings) {\n        thead = createElement(\"thead\")\n        const tr = createElement(\"tr\")\n        each(data.headings, col => {\n            const td = createElement(\"th\", {\n                html: col\n            })\n            tr.appendChild(td)\n        })\n\n        thead.appendChild(tr)\n    }\n\n    if (data.data && data.data.length) {\n        tbody = createElement(\"tbody\")\n        each(data.data, rows => {\n            if (data.headings) {\n                if (data.headings.length !== rows.length) {\n                    throw new Error(\n                        \"The number of rows do not match the number of headings.\"\n                    )\n                }\n            }\n            const tr = createElement(\"tr\")\n            each(rows, value => {\n                const td = createElement(\"td\", {\n                    html: value\n                })\n                tr.appendChild(td)\n            })\n            tbody.appendChild(tr)\n        })\n    }\n\n    if (thead) {\n        if (this.table.tHead !== null) {\n            this.table.removeChild(this.table.tHead)\n        }\n        this.table.appendChild(thead)\n    }\n\n    if (tbody) {\n        if (this.table.tBodies.length) {\n            this.table.removeChild(this.table.tBodies[0])\n        }\n        this.table.appendChild(tbody)\n    }\n}\n","/**\n * Default configuration\n * @typ {Object}\n */\nexport const defaultConfig = {\n    sortable: true,\n    searchable: true,\n\n    // Pagination\n    paging: true,\n    perPage: 10,\n    perPageSelect: [5, 10, 15, 20, 25],\n    nextPrev: true,\n    firstLast: false,\n    prevText: \"&lsaquo;\",\n    nextText: \"&rsaquo;\",\n    firstText: \"&laquo;\",\n    lastText: \"&raquo;\",\n    ellipsisText: \"&hellip;\",\n    ascText: \"▴\",\n    descText: \"▾\",\n    truncatePager: true,\n    pagerDelta: 2,\n\n    scrollY: \"\",\n\n    fixedColumns: true,\n    fixedHeight: false,\n\n    header: true,\n    footer: false,\n\n    // Customise the display text\n    labels: {\n        placeholder: \"Search...\", // The search input placeholder\n        perPage: \"{select} entries per page\", // per-page dropdown label\n        noRows: \"No entries found\", // Message shown when there are no search results\n        info: \"Showing {start} to {end} of {rows} entries\" //\n    },\n\n    // Customise the layout\n    layout: {\n        top: \"{select}{search}\",\n        bottom: \"{info}{pager}\"\n    }\n}\n","import {Rows} from \"./rows\"\nimport {Columns} from \"./columns\"\nimport {dataToTable} from \"./table\"\nimport {defaultConfig} from \"./config\"\nimport {\n    isObject,\n    isArray,\n    isJson,\n    extend,\n    each,\n    on,\n    createElement,\n    flush,\n    button,\n    classList,\n    truncate\n} from \"./helpers\"\n\n\nexport class DataTable {\n    constructor(table, options) {\n        this.initialized = false\n\n        // user options\n        this.options = extend(defaultConfig, options)\n\n        if (typeof table === \"string\") {\n            table = document.querySelector(table)\n        }\n\n        this.initialLayout = table.innerHTML\n        this.initialSortable = this.options.sortable\n\n        // Disable manual sorting if no header is present (#4)\n        if (!this.options.header) {\n            this.options.sortable = false\n        }\n\n        if (table.tHead === null) {\n            if (!this.options.data ||\n                (this.options.data && !this.options.data.headings)\n            ) {\n                this.options.sortable = false\n            }\n        }\n\n        if (table.tBodies.length && !table.tBodies[0].rows.length) {\n            if (this.options.data) {\n                if (!this.options.data.data) {\n                    throw new Error(\n                        \"You seem to be using the data option, but you've not defined any rows.\"\n                    )\n                }\n            }\n        }\n\n        this.table = table\n\n        this.init()\n    }\n\n    /**\n     * Add custom property or method to extend DataTable\n     * @param  {String} prop    - Method name or property\n     * @param  {Mixed} val      - Function or property value\n     * @return {Void}\n     */\n    static extend(prop, val) {\n        if (typeof val === \"function\") {\n            DataTable.prototype[prop] = val\n        } else {\n            DataTable[prop] = val\n        }\n    }\n\n    /**\n     * Initialize the instance\n     * @param  {Object} options\n     * @return {Void}\n     */\n    init(options) {\n        if (this.initialized || classList.contains(this.table, \"dataTable-table\")) {\n            return false\n        }\n\n        this.options = extend(this.options, options || {})\n\n        // IE detection\n        this.isIE = !!/(msie|trident)/i.test(navigator.userAgent)\n\n        this.currentPage = 1\n        this.onFirstPage = true\n\n        this.hiddenColumns = []\n        this.columnRenderers = []\n        this.selectedColumns = []\n\n        this.render()\n\n        setTimeout(() => {\n            this.emit(\"datatable.init\")\n            this.initialized = true\n\n            if (this.options.plugins) {\n                each(this.options.plugins, (options, plugin) => {\n                    if (this[plugin] && typeof this[plugin] === \"function\") {\n                        this[plugin] = this[plugin](options, {\n                            each,\n                            extend,\n                            classList,\n                            createElement\n                        })\n\n                        // Init plugin\n                        if (options.enabled && this[plugin].init && typeof this[plugin].init === \"function\") {\n                            this[plugin].init()\n                        }\n                    }\n                })\n            }\n        }, 10)\n    }\n\n    /**\n     * Render the instance\n     * @param  {String} type\n     * @return {Void}\n     */\n    render(type) {\n        if (type) {\n            switch (type) {\n            case \"page\":\n                this.renderPage()\n                break\n            case \"pager\":\n                this.renderPager()\n                break\n            case \"header\":\n                this.renderHeader()\n                break\n            }\n\n            return false\n        }\n\n        const o = this.options\n        let template = \"\"\n\n        // Convert data to HTML\n        if (o.data) {\n            dataToTable.call(this)\n        }\n\n        if (o.ajax) {\n            const ajax = o.ajax\n            const xhr = new XMLHttpRequest()\n\n            const xhrProgress = e => {\n                this.emit(\"datatable.ajax.progress\", e, xhr)\n            }\n\n            const xhrLoad = e => {\n                if (xhr.readyState === 4) {\n                    this.emit(\"datatable.ajax.loaded\", e, xhr)\n\n                    if (xhr.status === 200) {\n                        let obj = {}\n                        obj.data = ajax.load ? ajax.load.call(this, xhr) : xhr.responseText\n\n                        obj.type = \"json\"\n\n                        if (ajax.content && ajax.content.type) {\n                            obj.type = ajax.content.type\n\n                            obj = extend(obj, ajax.content)\n                        }\n\n                        this.import(obj)\n\n                        this.setColumns(true)\n\n                        this.emit(\"datatable.ajax.success\", e, xhr)\n                    } else {\n                        this.emit(\"datatable.ajax.error\", e, xhr)\n                    }\n                }\n            }\n\n            const xhrFailed = e => {\n                this.emit(\"datatable.ajax.error\", e, xhr)\n            }\n\n            const xhrCancelled = e => {\n                this.emit(\"datatable.ajax.abort\", e, xhr)\n            }\n\n            on(xhr, \"progress\", xhrProgress)\n            on(xhr, \"load\", xhrLoad)\n            on(xhr, \"error\", xhrFailed)\n            on(xhr, \"abort\", xhrCancelled)\n\n            this.emit(\"datatable.ajax.loading\", xhr)\n\n            xhr.open(\"GET\", typeof ajax === \"string\" ? o.ajax : o.ajax.url)\n            xhr.send()\n        }\n\n        // Store references\n        this.body = this.table.tBodies[0]\n        this.head = this.table.tHead\n        this.foot = this.table.tFoot\n\n        if (!this.body) {\n            this.body = createElement(\"tbody\")\n\n            this.table.appendChild(this.body)\n        }\n\n        this.hasRows = this.body.rows.length > 0\n\n        // Make a tHead if there isn't one (fixes #8)\n        if (!this.head) {\n            const h = createElement(\"thead\")\n            const t = createElement(\"tr\")\n\n            if (this.hasRows) {\n                each(this.body.rows[0].cells, () => {\n                    t.appendChild(createElement(\"th\"))\n                })\n\n                h.appendChild(t)\n            }\n\n            this.head = h\n\n            this.table.insertBefore(this.head, this.body)\n\n            this.hiddenHeader = !o.ajax\n        }\n\n        this.headings = []\n        this.hasHeadings = this.head.rows.length > 0\n\n        if (this.hasHeadings) {\n            this.header = this.head.rows[0]\n            this.headings = [].slice.call(this.header.cells)\n        }\n\n        // Header\n        if (!o.header) {\n            if (this.head) {\n                this.table.removeChild(this.table.tHead)\n            }\n        }\n\n        // Footer\n        if (o.footer) {\n            if (this.head && !this.foot) {\n                this.foot = createElement(\"tfoot\", {\n                    html: this.head.innerHTML\n                })\n                this.table.appendChild(this.foot)\n            }\n        } else {\n            if (this.foot) {\n                this.table.removeChild(this.table.tFoot)\n            }\n        }\n\n        // Build\n        this.wrapper = createElement(\"div\", {\n            class: \"dataTable-wrapper dataTable-loading\"\n        })\n\n        // Template for custom layouts\n        template += \"<div class='dataTable-top'>\"\n        template += o.layout.top\n        template += \"</div>\"\n        if (o.scrollY.length) {\n            template += `<div class='dataTable-container' style='height: ${o.scrollY}; overflow-Y: auto;'></div>`\n        } else {\n            template += \"<div class='dataTable-container'></div>\"\n        }\n        template += \"<div class='dataTable-bottom'>\"\n        template += o.layout.bottom\n        template += \"</div>\"\n\n        // Info placement\n        template = template.replace(\"{info}\", o.paging ? \"<div class='dataTable-info'></div>\" : \"\")\n\n        // Per Page Select\n        if (o.paging && o.perPageSelect) {\n            let wrap = \"<div class='dataTable-dropdown'><label>\"\n            wrap += o.labels.perPage\n            wrap += \"</label></div>\"\n\n            // Create the select\n            const select = createElement(\"select\", {\n                class: \"dataTable-selector\"\n            })\n\n            // Create the options\n            each(o.perPageSelect, val => {\n                const selected = val === o.perPage\n                const option = new Option(val, val, selected, selected)\n                select.add(option)\n            })\n\n            // Custom label\n            wrap = wrap.replace(\"{select}\", select.outerHTML)\n\n            // Selector placement\n            template = template.replace(\"{select}\", wrap)\n        } else {\n            template = template.replace(\"{select}\", \"\")\n        }\n\n        // Searchable\n        if (o.searchable) {\n            const form =\n                `<div class='dataTable-search'><input class='dataTable-input' placeholder='${o.labels.placeholder}' type='text'></div>`\n\n            // Search input placement\n            template = template.replace(\"{search}\", form)\n        } else {\n            template = template.replace(\"{search}\", \"\")\n        }\n\n        if (this.hasHeadings) {\n            // Sortable\n            this.render(\"header\")\n        }\n\n        // Add table class\n        classList.add(this.table, \"dataTable-table\")\n\n        // Paginator\n        const w = createElement(\"div\", {\n            class: \"dataTable-pagination\"\n        })\n        const paginator = createElement(\"ul\")\n        w.appendChild(paginator)\n\n        // Pager(s) placement\n        template = template.replace(/\\{pager\\}/g, w.outerHTML)\n\n        this.wrapper.innerHTML = template\n\n        this.container = this.wrapper.querySelector(\".dataTable-container\")\n\n        this.pagers = this.wrapper.querySelectorAll(\".dataTable-pagination\")\n\n        this.label = this.wrapper.querySelector(\".dataTable-info\")\n\n        // Insert in to DOM tree\n        this.table.parentNode.replaceChild(this.wrapper, this.table)\n        this.container.appendChild(this.table)\n\n        // Store the table dimensions\n        this.rect = this.table.getBoundingClientRect()\n\n        // Convert rows to array for processing\n        this.data = [].slice.call(this.body.rows)\n        this.activeRows = this.data.slice()\n        this.activeHeadings = this.headings.slice()\n\n        // Update\n        this.update()\n\n        if (!o.ajax) {\n            this.setColumns()\n        }\n\n        // Fix height\n        this.fixHeight()\n\n        // Fix columns\n        this.fixColumns()\n\n        // Class names\n        if (!o.header) {\n            classList.add(this.wrapper, \"no-header\")\n        }\n\n        if (!o.footer) {\n            classList.add(this.wrapper, \"no-footer\")\n        }\n\n        if (o.sortable) {\n            classList.add(this.wrapper, \"sortable\")\n        }\n\n        if (o.searchable) {\n            classList.add(this.wrapper, \"searchable\")\n        }\n\n        if (o.fixedHeight) {\n            classList.add(this.wrapper, \"fixed-height\")\n        }\n\n        if (o.fixedColumns) {\n            classList.add(this.wrapper, \"fixed-columns\")\n        }\n\n        this.bindEvents()\n    }\n\n    /**\n     * Render the page\n     * @return {Void}\n     */\n    renderPage() {\n        if (this.hasHeadings) {\n            flush(this.header, this.isIE)\n\n            each(this.activeHeadings, function (th) {\n                this.header.appendChild(th)\n            }, this)\n        }\n\n\n        if (this.hasRows && this.totalPages) {\n            if (this.currentPage > this.totalPages) {\n                this.currentPage = 1\n            }\n\n            // Use a fragment to limit touching the DOM\n            const index = this.currentPage - 1\n\n            const frag = document.createDocumentFragment()\n\n            each(this.pages[index], function (row) {\n                frag.appendChild(this.rows().render(row))\n            }, this)\n\n            this.clear(frag)\n\n            this.onFirstPage = this.currentPage === 1\n            this.onLastPage = this.currentPage === this.lastPage\n        } else {\n            this.setMessage(this.options.labels.noRows)\n        }\n\n        // Update the info\n        let current = 0\n\n        let f = 0\n        let t = 0\n        let items\n\n        if (this.totalPages) {\n            current = this.currentPage - 1\n            f = current * this.options.perPage\n            t = f + this.pages[current].length\n            f = f + 1\n            items = this.searching ? this.searchData.length : this.data.length\n        }\n\n        if (this.label && this.options.labels.info.length) {\n            // CUSTOM LABELS\n            const string = this.options.labels.info\n                .replace(\"{start}\", f)\n                .replace(\"{end}\", t)\n                .replace(\"{page}\", this.currentPage)\n                .replace(\"{pages}\", this.totalPages)\n                .replace(\"{rows}\", items)\n\n            this.label.innerHTML = items ? string : \"\"\n        }\n\n        if (this.currentPage == 1) {\n            this.fixHeight()\n        }\n    }\n\n    /**\n     * Render the pager(s)\n     * @return {Void}\n     */\n    renderPager() {\n        flush(this.pagers, this.isIE)\n\n        if (this.totalPages > 1) {\n            const c = \"pager\"\n            const frag = document.createDocumentFragment()\n            const prev = this.onFirstPage ? 1 : this.currentPage - 1\n            const next = this.onlastPage ? this.totalPages : this.currentPage + 1\n\n            // first button\n            if (this.options.firstLast) {\n                frag.appendChild(button(c, 1, this.options.firstText))\n            }\n\n            // prev button\n            if (this.options.nextPrev) {\n                frag.appendChild(button(c, prev, this.options.prevText))\n            }\n\n            let pager = this.links\n\n            // truncate the links\n            if (this.options.truncatePager) {\n                pager = truncate(\n                    this.links,\n                    this.currentPage,\n                    this.pages.length,\n                    this.options.pagerDelta,\n                    this.options.ellipsisText\n                )\n            }\n\n            // active page link\n            classList.add(this.links[this.currentPage - 1], \"active\")\n\n            // append the links\n            each(pager, p => {\n                classList.remove(p, \"active\")\n                frag.appendChild(p)\n            })\n\n            classList.add(this.links[this.currentPage - 1], \"active\")\n\n            // next button\n            if (this.options.nextPrev) {\n                frag.appendChild(button(c, next, this.options.nextText))\n            }\n\n            // first button\n            if (this.options.firstLast) {\n                frag.appendChild(button(c, this.totalPages, this.options.lastText))\n            }\n\n            // We may have more than one pager\n            each(this.pagers, pager => {\n                pager.appendChild(frag.cloneNode(true))\n            })\n        }\n    }\n\n    /**\n     * Render the header\n     * @return {Void}\n     */\n    renderHeader() {\n        this.labels = []\n\n        if (this.headings && this.headings.length) {\n            each(this.headings, (th, i) => {\n\n                this.labels[i] = th.textContent\n\n                if (classList.contains(th.firstElementChild, \"dataTable-sorter\")) {\n                    th.innerHTML = th.firstElementChild.innerHTML\n                }\n\n                th.sortable = th.getAttribute(\"data-sortable\") !== \"false\"\n\n                th.originalCellIndex = i\n                if (this.options.sortable && th.sortable) {\n                    const link = createElement(\"a\", {\n                        href: \"#\",\n                        class: \"dataTable-sorter\",\n                        html: th.innerHTML\n                    })\n\n                    th.innerHTML = \"\"\n                    th.setAttribute(\"data-sortable\", \"\")\n                    th.appendChild(link)\n                }\n            })\n        }\n\n        this.fixColumns()\n    }\n\n    /**\n     * Bind event listeners\n     * @return {[type]} [description]\n     */\n    bindEvents() {\n        const o = this.options\n        const that = this\n        // Per page selector\n        if (o.perPageSelect) {\n            const selector = this.wrapper.querySelector(\".dataTable-selector\")\n            if (selector) {\n                // Change per page\n                on(selector, \"change\", function () {\n                    o.perPage = parseInt(this.value, 10)\n                    that.update()\n\n                    that.fixHeight()\n\n                    that.emit(\"datatable.perpage\", o.perPage)\n                })\n            }\n        }\n\n        // Search input\n        if (o.searchable) {\n            this.input = this.wrapper.querySelector(\".dataTable-input\")\n            if (this.input) {\n                on(this.input, \"keyup\", function () {\n                    that.search(this.value)\n                })\n            }\n        }\n\n        // Pager(s) / sorting\n        on(this.wrapper, \"click\", e => {\n            const t = e.target\n            if (t.nodeName.toLowerCase() === \"a\") {\n                if (t.hasAttribute(\"data-page\")) {\n                    this.page(t.getAttribute(\"data-page\"))\n                    e.preventDefault()\n                } else if (\n                    o.sortable &&\n                    classList.contains(t, \"dataTable-sorter\") &&\n                    t.parentNode.getAttribute(\"data-sortable\") != \"false\"\n                ) {\n                    this.columns().sort(this.headings.indexOf(t.parentNode))\n                    e.preventDefault()\n                }\n            }\n        })\n\n        on(window, \"resize\", () => {\n            this.rect = this.container.getBoundingClientRect()\n            this.fixColumns()\n        })\n    }\n\n    /**\n     * Set up columns\n     * @return {[type]} [description]\n     */\n    setColumns(ajax) {\n\n        if (!ajax) {\n            each(this.data, row => {\n                each(row.cells, cell => {\n                    cell.data = cell.innerHTML\n                })\n            })\n        }\n\n        // Check for the columns option\n        if (this.options.columns && this.headings.length) {\n\n            each(this.options.columns, data => {\n\n                // convert single column selection to array\n                if (!isArray(data.select)) {\n                    data.select = [data.select]\n                }\n\n                if (data.hasOwnProperty(\"render\") && typeof data.render === \"function\") {\n                    this.selectedColumns = this.selectedColumns.concat(data.select)\n\n                    this.columnRenderers.push({\n                        columns: data.select,\n                        renderer: data.render\n                    })\n                }\n\n                // Add the data attributes to the th elements\n                each(data.select, column => {\n                    const th = this.headings[column]\n                    if (data.type) {\n                        th.setAttribute(\"data-type\", data.type)\n                    }\n                    if (data.format) {\n                        th.setAttribute(\"data-format\", data.format)\n                    }\n                    if (data.hasOwnProperty(\"sortable\")) {\n                        th.setAttribute(\"data-sortable\", data.sortable)\n                    }\n\n                    if (data.hasOwnProperty(\"hidden\")) {\n                        if (data.hidden !== false) {\n                            this.columns().hide([column])\n                        }\n                    }\n\n                    if (data.hasOwnProperty(\"sort\") && data.select.length === 1) {\n                        this.columns().sort(data.select[0], data.sort, true)\n                    }\n                })\n            })\n        }\n\n        if (this.hasRows) {\n            each(this.data, (row, i) => {\n                row.dataIndex = i\n                each(row.cells, cell => {\n                    cell.data = cell.innerHTML\n                })\n            })\n\n            if (this.selectedColumns.length) {\n                each(this.data, row => {\n                    each(row.cells, (cell, i) => {\n                        if (this.selectedColumns.includes(i)) {\n                            each(this.columnRenderers, o => {\n                                if (o.columns.includes(i)) {\n                                    cell.innerHTML = o.renderer.call(this, cell.data, cell, row)\n                                }\n                            })\n                        }\n                    })\n                })\n            }\n\n            this.columns().rebuild()\n        }\n\n        this.render(\"header\")\n    }\n\n    /**\n     * Destroy the instance\n     * @return {void}\n     */\n    destroy() {\n        this.table.innerHTML = this.initialLayout\n\n        // Remove the className\n        classList.remove(this.table, \"dataTable-table\")\n\n        // Remove the containers\n        this.wrapper.parentNode.replaceChild(this.table, this.wrapper)\n\n        this.initialized = false\n    }\n\n    /**\n     * Update the instance\n     * @return {Void}\n     */\n    update() {\n        classList.remove(this.wrapper, \"dataTable-empty\")\n\n        this.paginate(this)\n        this.render(\"page\")\n\n        this.links = []\n\n        let i = this.pages.length\n        while (i--) {\n            const num = i + 1\n            this.links[i] = button(i === 0 ? \"active\" : \"\", num, num)\n        }\n\n        this.sorting = false\n\n        this.render(\"pager\")\n\n        this.rows().update()\n\n        this.emit(\"datatable.update\")\n    }\n\n    /**\n     * Sort rows into pages\n     * @return {Number}\n     */\n    paginate() {\n        const perPage = this.options.perPage\n        let rows = this.activeRows\n\n        if (this.searching) {\n            rows = []\n\n            each(this.searchData, function (index) {\n                rows.push(this.activeRows[index])\n            }, this)\n        }\n\n        if (this.options.paging) {\n            // Check for hidden columns\n            this.pages = rows\n                .map((tr, i) => i % perPage === 0 ? rows.slice(i, i + perPage) : null)\n                .filter(page => page)\n        } else {\n            this.pages = [rows]\n        }\n\n        this.totalPages = this.lastPage = this.pages.length\n\n        return this.totalPages\n    }\n\n    /**\n     * Fix column widths\n     * @return {Void}\n     */\n    fixColumns() {\n\n        if ((this.options.scrollY.length || this.options.fixedColumns) && this.activeHeadings && this.activeHeadings.length) {\n            let cells\n            let hd = false\n            this.columnWidths = []\n\n            // If we have headings we need only set the widths on them\n            // otherwise we need a temp header and the widths need applying to all cells\n            if (this.table.tHead) {\n\n                if (this.options.scrollY.length) {\n                    hd = createElement(\"thead\")\n                    hd.appendChild(createElement(\"tr\"))\n                    hd.style.height = '0px'\n                    if (this.headerTable) {\n                        // move real header back into place\n                        this.table.tHead = this.headerTable.tHead\n                    }\n                }\n\n                // Reset widths\n                each(this.activeHeadings, cell => {\n                    cell.style.width = \"\"\n                }, this)\n\n                each(this.activeHeadings, function (cell, i) {\n                    const ow = cell.offsetWidth\n                    const w = ow / this.rect.width * 100\n                    cell.style.width = `${w}%`\n                    this.columnWidths[i] = ow\n                    if (this.options.scrollY.length) {\n                        const th = createElement(\"th\")\n                        hd.firstElementChild.appendChild(th)\n                        th.style.width = `${w}%`\n                        th.style.paddingTop = \"0\"\n                        th.style.paddingBottom = \"0\"\n                        th.style.border = \"0\"\n                    }\n                }, this)\n\n                if (this.options.scrollY.length) {\n                    const container = this.table.parentElement\n                    if (!this.headerTable) {\n                        this.headerTable = createElement(\"table\", {\n                            class: \"dataTable-table\"\n                        })\n                        const headercontainer = createElement(\"div\", {\n                            class: \"dataTable-headercontainer\"\n                        })\n                        headercontainer.appendChild(this.headerTable)\n                        container.parentElement.insertBefore(headercontainer, container)\n                    }\n                    const thd = this.table.tHead\n                    this.table.replaceChild(hd, thd)\n                    this.headerTable.tHead = thd\n\n                    // Compensate for scrollbars.\n                    this.headerTable.style.paddingRight = `${this.headerTable.clientWidth - this.table.clientWidth}px`\n\n                    if (container.scrollHeight > container.clientHeight) {\n                        // scrollbars on one page means scrollbars on all pages.\n                        container.style.overflowY = 'scroll'\n                    }\n                }\n\n            } else {\n                cells = []\n\n                // Make temperary headings\n                hd = createElement(\"thead\")\n                const r = createElement(\"tr\")\n                const c = this.table.tBodies[0].rows[0].cells\n                each(c, () => {\n                    const th = createElement(\"th\")\n                    r.appendChild(th)\n                    cells.push(th)\n                })\n\n                hd.appendChild(r)\n                this.table.insertBefore(hd, this.body)\n\n                const widths = []\n                each(cells, function (cell, i) {\n                    const ow = cell.offsetWidth\n                    const w = ow / this.rect.width * 100\n                    widths.push(w)\n                    this.columnWidths[i] = ow\n                }, this)\n\n                each(this.data, function (row) {\n                    each(row.cells, function (cell, i) {\n                        if (this.columns(cell.cellIndex).visible())\n                            cell.style.width = `${widths[i]}%`\n                    }, this)\n                }, this)\n\n                // Discard the temp header\n                this.table.removeChild(hd)\n            }\n        }\n    }\n\n    /**\n     * Fix the container height\n     * @return {Void}\n     */\n    fixHeight() {\n        if (this.options.fixedHeight) {\n            this.container.style.height = null\n            this.rect = this.container.getBoundingClientRect()\n            this.container.style.height = `${this.rect.height}px`\n        }\n    }\n\n    /**\n     * Perform a search of the data set\n     * @param  {string} query\n     * @return {void}\n     */\n    search(query) {\n        if (!this.hasRows) return false\n\n        query = query.toLowerCase()\n\n        this.currentPage = 1\n        this.searching = true\n        this.searchData = []\n\n        if (!query.length) {\n            this.searching = false\n            this.update()\n            this.emit(\"datatable.search\", query, this.searchData)\n            classList.remove(this.wrapper, \"search-results\")\n            return false\n        }\n\n        this.clear()\n\n        each(this.data, function (row, idx) {\n            const inArray = this.searchData.includes(row)\n\n            // https://github.com/Mobius1/Vanilla-DataTables/issues/12\n            const doesQueryMatch = query.split(\" \").reduce((bool, word) => {\n                let includes = false\n                let cell = null\n                let content = null\n\n                for (let x = 0; x < row.cells.length; x++) {\n                    cell = row.cells[x]\n                    content = cell.hasAttribute('data-content') ? cell.getAttribute('data-content') : cell.textContent\n\n                    if (\n                        content.toLowerCase().includes(word) &&\n                        this.columns(cell.cellIndex).visible()\n                    ) {\n                        includes = true\n                        break\n                    }\n                }\n\n                return bool && includes\n            }, true)\n\n            if (doesQueryMatch && !inArray) {\n                row.searchIndex = idx\n                this.searchData.push(idx)\n            } else {\n                row.searchIndex = null\n            }\n        }, this)\n\n        classList.add(this.wrapper, \"search-results\")\n\n        if (!this.searchData.length) {\n            classList.remove(this.wrapper, \"search-results\")\n\n            this.setMessage(this.options.labels.noRows)\n        } else {\n            this.update()\n        }\n\n        this.emit(\"datatable.search\", query, this.searchData)\n    }\n\n    /**\n     * Change page\n     * @param  {int} page\n     * @return {void}\n     */\n    page(page) {\n        // We don't want to load the current page again.\n        if (page == this.currentPage) {\n            return false\n        }\n\n        if (!isNaN(page)) {\n            this.currentPage = parseInt(page, 10)\n        }\n\n        if (page > this.pages.length || page < 0) {\n            return false\n        }\n\n        this.render(\"page\")\n        this.render(\"pager\")\n\n        this.emit(\"datatable.page\", page)\n    }\n\n    /**\n     * Sort by column\n     * @param  {int} column - The column no.\n     * @param  {string} direction - asc or desc\n     * @return {void}\n     */\n    sortColumn(column, direction) {\n        // Use columns API until sortColumn method is removed\n        this.columns().sort(column, direction)\n    }\n\n    /**\n     * Add new row data\n     * @param {object} data\n     */\n    insert(data) {\n        let rows = []\n        if (isObject(data)) {\n            if (data.headings) {\n                if (!this.hasHeadings && !this.hasRows) {\n                    const tr = createElement(\"tr\")\n                    let th\n                    each(data.headings, heading => {\n                        th = createElement(\"th\", {\n                            html: heading\n                        })\n\n                        tr.appendChild(th)\n                    })\n                    this.head.appendChild(tr)\n\n                    this.header = tr\n                    this.headings = [].slice.call(tr.cells)\n                    this.hasHeadings = true\n\n                    // Re-enable sorting if it was disabled due\n                    // to missing header\n                    this.options.sortable = this.initialSortable\n\n                    // Allow sorting on new header\n                    this.render(\"header\")\n\n                    // Activate newly added headings\n                    this.activeHeadings = this.headings.slice()\n                }\n            }\n\n            if (data.data && isArray(data.data)) {\n                rows = data.data\n            }\n        } else if (isArray(data)) {\n            each(data, row => {\n                const r = []\n                each(row, (cell, heading) => {\n\n                    const index = this.labels.indexOf(heading)\n\n                    if (index > -1) {\n                        r[index] = cell\n                    }\n                })\n                rows.push(r)\n            })\n        }\n\n        if (rows.length) {\n            this.rows().add(rows)\n\n            this.hasRows = true\n        }\n\n        this.update()\n\n        this.fixColumns()\n    }\n\n    /**\n     * Refresh the instance\n     * @return {void}\n     */\n    refresh() {\n        if (this.options.searchable) {\n            this.input.value = \"\"\n            this.searching = false\n        }\n        this.currentPage = 1\n        this.onFirstPage = true\n        this.update()\n\n        this.emit(\"datatable.refresh\")\n    }\n\n    /**\n     * Truncate the table\n     * @param  {mixes} html - HTML string or HTMLElement\n     * @return {void}\n     */\n    clear(html) {\n        if (this.body) {\n            flush(this.body, this.isIE)\n        }\n\n        let parent = this.body\n        if (!this.body) {\n            parent = this.table\n        }\n\n        if (html) {\n            if (typeof html === \"string\") {\n                const frag = document.createDocumentFragment()\n                frag.innerHTML = html\n            }\n\n            parent.appendChild(html)\n        }\n    }\n\n    /**\n     * Export table to various formats (csv, txt or sql)\n     * @param  {Object} options User options\n     * @return {Boolean}\n     */\n    export(options) {\n        if (!this.hasHeadings && !this.hasRows) return false\n\n        const headers = this.activeHeadings\n        let rows = []\n        const arr = []\n        let i\n        let x\n        let str\n        let link\n\n        const defaults = {\n            download: true,\n            skipColumn: [],\n\n            // csv\n            lineDelimiter: \"\\n\",\n            columnDelimiter: \",\",\n\n            // sql\n            tableName: \"myTable\",\n\n            // json\n            replacer: null,\n            space: 4\n        }\n\n        // Check for the options object\n        if (!isObject(options)) {\n            return false\n        }\n\n        const o = extend(defaults, options)\n\n        if (o.type) {\n            if (o.type === \"txt\" || o.type === \"csv\") {\n                // Include headings\n                rows[0] = this.header\n            }\n\n            // Selection or whole table\n            if (o.selection) {\n                // Page number\n                if (!isNaN(o.selection)) {\n                    rows = rows.concat(this.pages[o.selection - 1])\n                } else if (isArray(o.selection)) {\n                    // Array of page numbers\n                    for (i = 0; i < o.selection.length; i++) {\n                        rows = rows.concat(this.pages[o.selection[i] - 1])\n                    }\n                }\n            } else {\n                rows = rows.concat(this.activeRows)\n            }\n\n            // Only proceed if we have data\n            if (rows.length) {\n                if (o.type === \"txt\" || o.type === \"csv\") {\n                    str = \"\"\n\n                    for (i = 0; i < rows.length; i++) {\n                        for (x = 0; x < rows[i].cells.length; x++) {\n                            // Check for column skip and visibility\n                            if (\n                                !o.skipColumn.includes(headers[x].originalCellIndex) &&\n                                this.columns(headers[x].originalCellIndex).visible()\n                            ) {\n                                let text = rows[i].cells[x].textContent\n                                text = text.trim()\n                                text = text.replace(/\\s{2,}/g, ' ')\n                                text = text.replace(/\\n/g, '  ')\n                                text = text.replace(/\"/g, '\"\"')\n                                //have to manually encode \"#\" as encodeURI leaves it as is.\n                                text = text.replace(/#/g, \"%23\")\n                                if (text.includes(\",\"))\n                                    text = `\"${text}\"`\n\n\n                                str += text + o.columnDelimiter\n                            }\n                        }\n                        // Remove trailing column delimiter\n                        str = str.trim().substring(0, str.length - 1)\n\n                        // Apply line delimiter\n                        str += o.lineDelimiter\n                    }\n\n                    // Remove trailing line delimiter\n                    str = str.trim().substring(0, str.length - 1)\n\n                    if (o.download) {\n                        str = `data:text/csv;charset=utf-8,${str}`\n                    }\n                } else if (o.type === \"sql\") {\n                    // Begin INSERT statement\n                    str = `INSERT INTO \\`${o.tableName}\\` (`\n\n                    // Convert table headings to column names\n                    for (i = 0; i < headers.length; i++) {\n                        // Check for column skip and column visibility\n                        if (\n                            !o.skipColumn.includes(headers[i].originalCellIndex) &&\n                            this.columns(headers[i].originalCellIndex).visible()\n                        ) {\n                            str += `\\`${headers[i].textContent}\\`,`\n                        }\n                    }\n\n                    // Remove trailing comma\n                    str = str.trim().substring(0, str.length - 1)\n\n                    // Begin VALUES\n                    str += \") VALUES \"\n\n                    // Iterate rows and convert cell data to column values\n                    for (i = 0; i < rows.length; i++) {\n                        str += \"(\"\n\n                        for (x = 0; x < rows[i].cells.length; x++) {\n                            // Check for column skip and column visibility\n                            if (\n                                !o.skipColumn.includes(headers[x].originalCellIndex) &&\n                                this.columns(headers[x].originalCellIndex).visible()\n                            ) {\n                                str += `\"${rows[i].cells[x].textContent}\",`\n                            }\n                        }\n\n                        // Remove trailing comma\n                        str = str.trim().substring(0, str.length - 1)\n\n                        // end VALUES\n                        str += \"),\"\n                    }\n\n                    // Remove trailing comma\n                    str = str.trim().substring(0, str.length - 1)\n\n                    // Add trailing colon\n                    str += \";\"\n\n                    if (o.download) {\n                        str = `data:application/sql;charset=utf-8,${str}`\n                    }\n                } else if (o.type === \"json\") {\n                    // Iterate rows\n                    for (x = 0; x < rows.length; x++) {\n                        arr[x] = arr[x] || {}\n                        // Iterate columns\n                        for (i = 0; i < headers.length; i++) {\n                            // Check for column skip and column visibility\n                            if (\n                                !o.skipColumn.includes(headers[i].originalCellIndex) &&\n                                this.columns(headers[i].originalCellIndex).visible()\n                            ) {\n                                arr[x][headers[i].textContent] = rows[x].cells[i].textContent\n                            }\n                        }\n                    }\n\n                    // Convert the array of objects to JSON string\n                    str = JSON.stringify(arr, o.replacer, o.space)\n\n                    if (o.download) {\n                        str = `data:application/json;charset=utf-8,${str}`\n                    }\n                }\n\n                // Download\n                if (o.download) {\n                    // Filename\n                    o.filename = o.filename || \"datatable_export\"\n                    o.filename += `.${o.type}`\n\n                    str = encodeURI(str)\n\n                    // Create a link to trigger the download\n                    link = document.createElement(\"a\")\n                    link.href = str\n                    link.download = o.filename\n\n                    // Append the link\n                    document.body.appendChild(link)\n\n                    // Trigger the download\n                    link.click()\n\n                    // Remove the link\n                    document.body.removeChild(link)\n                }\n\n                return str\n            }\n        }\n\n        return false\n    }\n\n    /**\n     * Import data to the table\n     * @param  {Object} options User options\n     * @return {Boolean}\n     */\n    import(options) {\n        let obj = false\n        const defaults = {\n            // csv\n            lineDelimiter: \"\\n\",\n            columnDelimiter: \",\"\n        }\n\n        // Check for the options object\n        if (!isObject(options)) {\n            return false\n        }\n\n        options = extend(defaults, options)\n\n        if (options.data.length || isObject(options.data)) {\n            // Import CSV\n            if (options.type === \"csv\") {\n                obj = {\n                    data: []\n                }\n\n                // Split the string into rows\n                const rows = options.data.split(options.lineDelimiter)\n\n                if (rows.length) {\n\n                    if (options.headings) {\n                        obj.headings = rows[0].split(options.columnDelimiter)\n\n                        rows.shift()\n                    }\n\n                    each(rows, (row, i) => {\n                        obj.data[i] = []\n\n                        // Split the rows into values\n                        const values = row.split(options.columnDelimiter)\n\n                        if (values.length) {\n                            each(values, value => {\n                                obj.data[i].push(value)\n                            })\n                        }\n                    })\n                }\n            } else if (options.type === \"json\") {\n                const json = isJson(options.data)\n\n                // Valid JSON string\n                if (json) {\n                    obj = {\n                        headings: [],\n                        data: []\n                    }\n\n                    each(json, (data, i) => {\n                        obj.data[i] = []\n                        each(data, (value, column) => {\n                            if (!obj.headings.includes(column)) {\n                                obj.headings.push(column)\n                            }\n\n                            obj.data[i].push(value)\n                        })\n                    })\n                } else {\n                    // console.warn(\"That's not valid JSON!\")\n                }\n            }\n\n            if (isObject(options.data)) {\n                obj = options.data\n            }\n\n            if (obj) {\n                // Add the rows\n                this.insert(obj)\n            }\n        }\n\n        return false\n    }\n\n    /**\n     * Print the table\n     * @return {void}\n     */\n    print() {\n        const headings = this.activeHeadings\n        const rows = this.activeRows\n        const table = createElement(\"table\")\n        const thead = createElement(\"thead\")\n        const tbody = createElement(\"tbody\")\n\n        const tr = createElement(\"tr\")\n        each(headings, th => {\n            tr.appendChild(\n                createElement(\"th\", {\n                    html: th.textContent\n                })\n            )\n        })\n\n        thead.appendChild(tr)\n\n        each(rows, row => {\n            const tr = createElement(\"tr\")\n            each(row.cells, cell => {\n                tr.appendChild(\n                    createElement(\"td\", {\n                        html: cell.textContent\n                    })\n                )\n            })\n            tbody.appendChild(tr)\n        })\n\n        table.appendChild(thead)\n        table.appendChild(tbody)\n\n        // Open new window\n        const w = window.open()\n\n        // Append the table to the body\n        w.document.body.appendChild(table)\n\n        // Print\n        w.print()\n    }\n\n    /**\n     * Show a message in the table\n     * @param {string} message\n     */\n    setMessage(message) {\n        let colspan = 1\n\n        if (this.hasRows) {\n            colspan = this.data[0].cells.length\n        } else if (this.activeHeadings.length) {\n            colspan = this.activeHeadings.length\n        }\n\n        classList.add(this.wrapper, \"dataTable-empty\")\n\n        if (this.label) {\n            this.label.innerHTML = \"\"\n        }\n        this.totalPages = 0\n        this.render(\"pager\")\n\n        this.clear(\n            createElement(\"tr\", {\n                html: `<td class=\"dataTables-empty\" colspan=\"${colspan}\">${message}</td>`\n            })\n        )\n    }\n\n    /**\n     * Columns API access\n     * @return {Object} new Columns instance\n     */\n    columns(columns) {\n        return new Columns(this, columns)\n    }\n\n    /**\n     * Rows API access\n     * @return {Object} new Rows instance\n     */\n    rows(rows) {\n        return new Rows(this, rows)\n    }\n\n    /**\n     * Add custom event listener\n     * @param  {String} event\n     * @param  {Function} callback\n     * @return {Void}\n     */\n    on(event, callback) {\n        this.events = this.events || {}\n        this.events[event] = this.events[event] || []\n        this.events[event].push(callback)\n    }\n\n    /**\n     * Remove custom event listener\n     * @param  {String} event\n     * @param  {Function} callback\n     * @return {Void}\n     */\n    off(event, callback) {\n        this.events = this.events || {}\n        if (event in this.events === false) return\n        this.events[event].splice(this.events[event].indexOf(callback), 1)\n    }\n\n    /**\n     * Fire custom event\n     * @param  {String} event\n     * @return {Void}\n     */\n    emit(event) {\n        this.events = this.events || {}\n        if (event in this.events === false) return\n        for (let i = 0; i < this.events[event].length; i++) {\n            this.events[event][i].apply(this, Array.prototype.slice.call(arguments, 1))\n        }\n    }\n}\n"],"names":["isObject","val","Object","prototype","toString","call","isArray","Array","extend","src","props","const","prop","hasOwnProperty","each","arr","fn","scope","let","n","length","on","el","e","addEventListener","createElement","a","b","d","document","innerHTML","setAttribute","flush","ie","NodeList","hasChildNodes","removeChild","firstChild","button","c","p","t","class","html","classList","add","s","contains","className","trim","remove","replace","RegExp","split","join","match","sortItems","f","value","g","h","i","Rows","dt","rows","this","build","row","tr","headings","map","td","data","appendChild","render","push","hasRows","update","columns","rebuild","select","sort","splice","dataIndex","Columns","swap","cols","x","y","order","cell","temp","column","getAttribute","cloneNode","originalCellIndex","sortable","hiddenColumns","includes","searchIndex","undefined","cells","activeHeadings","activeRows","hide","show","index","indexOf","visible","th","isNaN","insert","heading","hiddenHeader","nodeName","type","format","renderHeader","dir","init","hasHeadings","sorting","alpha","numeric","parseFunction","content","waitFor","hasAttribute","import","then","ref","parseDate","Promise","all","top","btm","from","forEach","innerText","num","parseFloat","Number","lastTh","concat","indexes","v","searchData","this$1","emit","cellIndex","defaultConfig","searchable","paging","perPage","perPageSelect","nextPrev","firstLast","prevText","nextText","firstText","lastText","ellipsisText","ascText","descText","truncatePager","pagerDelta","scrollY","fixedColumns","fixedHeight","header","footer","labels","placeholder","noRows","info","layout","bottom","DataTable","table","options","initialized","querySelector","initialLayout","initialSortable","tHead","tBodies","Error","isIE","test","navigator","userAgent","currentPage","onFirstPage","columnRenderers","selectedColumns","setTimeout","plugins","plugin","enabled","renderPage","renderPager","o","template","thead","tbody","col","ajax","xhr","XMLHttpRequest","readyState","status","obj","load","responseText","setColumns","open","url","send","body","head","foot","tFoot","insertBefore","slice","wrapper","wrap","selected","option","Option","outerHTML","form","w","paginator","container","pagers","querySelectorAll","label","parentNode","replaceChild","rect","getBoundingClientRect","fixHeight","fixColumns","bindEvents","totalPages","frag","createDocumentFragment","pages","clear","onLastPage","lastPage","setMessage","items","current","searching","string","prev","next","onlastPage","pager","links","ellipsis","j","k","l","children","truncate","textContent","firstElementChild","link","href","that","selector","parseInt","input","search","target","toLowerCase","page","preventDefault","window","renderer","hidden","destroy","paginate","filter","hd","columnWidths","style","height","headerTable","width","ow","offsetWidth","paddingTop","paddingBottom","border","parentElement","headercontainer","thd","paddingRight","clientWidth","scrollHeight","clientHeight","overflowY","r","widths","query","idx","inArray","reduce","bool","word","sortColumn","direction","refresh","parent","export","str","headers","download","skipColumn","lineDelimiter","columnDelimiter","tableName","replacer","space","selection","text","substring","JSON","stringify","filename","encodeURI","click","shift","values","json","parse","isJson","print","message","colspan","event","callback","events","off","apply","arguments"],"mappings":"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"}