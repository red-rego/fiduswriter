(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[12],{

/***/ "./js/modules/images/edit_dialog/index.js":
/*!************************************************!*\
  !*** ./js/modules/images/edit_dialog/index.js ***!
  \************************************************/
/*! exports provided: ImageEditDialog */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ImageEditDialog\", function() { return ImageEditDialog; });\n/* harmony import */ var _templates__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./templates */ \"./js/modules/images/edit_dialog/templates.js\");\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common */ \"./js/modules/common/index.js\");\n/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./model */ \"./js/modules/images/edit_dialog/model.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar ImageEditDialog =\n/*#__PURE__*/\nfunction () {\n  function ImageEditDialog(imageDB) {\n    var imageId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var editor = arguments.length > 2 ? arguments[2] : undefined;\n\n    _classCallCheck(this, ImageEditDialog);\n\n    this.imageDB = imageDB;\n    this.editor = editor;\n    this.imageId = imageId;\n    this.dialog = false;\n  } //open a dialog for uploading an image\n\n\n  _createClass(ImageEditDialog, [{\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n\n      var returnPromise = new Promise(function (resolve) {\n        _this.dialog = new _common__WEBPACK_IMPORTED_MODULE_1__[\"Dialog\"]({\n          title: _this.imageId ? gettext('Update Image Information') : gettext('Upload Image'),\n          id: 'editimage',\n          classes: 'fw-media-uploader',\n          body: Object(_templates__WEBPACK_IMPORTED_MODULE_0__[\"imageEditTemplate\"])({\n            image: _this.imageId ? _this.imageDB.db[_this.imageId] : false,\n            cats: _this.imageDB.cats\n          }),\n          buttons: [{\n            text: _this.imageId ? gettext('Update') : gettext('Upload'),\n            click: function click() {\n              return resolve(_this.saveImage());\n            },\n            classes: \"fw-dark\"\n          }, {\n            type: 'cancel',\n            classes: \"fw-orange\",\n            click: function click() {\n              return _this.dialog.close();\n            }\n          }]\n        });\n\n        _this.dialog.open();\n      });\n      document.querySelectorAll('.fw-checkable-label').forEach(function (el) {\n        return el.addEventListener('click', function () {\n          return Object(_common__WEBPACK_IMPORTED_MODULE_1__[\"setCheckableLabel\"])(el);\n        });\n      });\n\n      if (!this.imageId) {\n        this.bindMediaUploadEvents();\n      }\n\n      document.querySelector('.figure-edit-menu').addEventListener('click', function (event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        var contentMenu = new _common__WEBPACK_IMPORTED_MODULE_1__[\"ContentMenu\"]({\n          menu: Object(_model__WEBPACK_IMPORTED_MODULE_2__[\"imageEditModel\"])(),\n          width: 220,\n          page: _this,\n          menuPos: {\n            X: event.pageX - 50,\n            Y: event.pageY + 50\n          }\n        });\n        contentMenu.open();\n      });\n      return returnPromise;\n    } //add image upload events\n\n  }, {\n    key: \"bindMediaUploadEvents\",\n    value: function bindMediaUploadEvents() {\n      var _this2 = this;\n\n      var selectButton = document.querySelector('#editimage .fw-media-select-button'),\n          mediaInputSelector = document.querySelector('#editimage .fw-media-file-input');\n      this.mediaPreviewerDiv = document.querySelector('#editimage .figure-preview > div');\n      this.rotation = 0;\n      this.cropped = false;\n      selectButton.addEventListener('click', function () {\n        mediaInputSelector.click();\n      });\n      mediaInputSelector.addEventListener('change', function () {\n        _this2.mediaInput = mediaInputSelector.files[0];\n        var fr = new window.FileReader();\n\n        fr.onload = function () {\n          _this2.mediaPreviewerDiv.innerHTML = \"<div class=\\\"img\\\" style=\\\"background-image: url(\".concat(fr.result, \");\\\" />\");\n          _this2.mediaPreviewer = _this2.mediaPreviewerDiv.querySelector('.img');\n\n          _this2.mediaPreviewerDiv.classList.remove('crop-mode');\n\n          _this2.dialog.centerDialog(); //this.cropMode(false)\n\n        };\n\n        fr.readAsDataURL(_this2.mediaInput);\n        document.querySelector('.figure-edit-menu').classList.remove(\"hide\");\n      });\n    }\n  }, {\n    key: \"displayCreateImageError\",\n    value: function displayCreateImageError(errors) {\n      Object.keys(errors).forEach(function (eKey) {\n        var eMsg = \"<div class=\\\"warning\\\">\".concat(errors[eKey], \"</div>\");\n\n        if ('error' == eKey) {\n          document.getElementById(\"editimage\").insertAdjacentHTML('afterbegin', eMsg);\n        } else {\n          document.getElementById(\"id_\".concat(eKey)).insertAdjacentHTML('afterend', eMsg);\n        }\n      });\n    }\n  }, {\n    key: \"saveImage\",\n    value: function saveImage() {\n      var _this3 = this;\n\n      var imageData = {\n        title: document.querySelector('#editimage .fw-media-title').value,\n        cats: Array.from(document.querySelectorAll('#editimage .entry-cat:checked')).map(function (el) {\n          return parseInt(el.value);\n        }).join(',')\n      };\n\n      if (this.imageId) {\n        imageData.id = this.imageId;\n      } else if (!this.rotation && !this.cropped) {\n        imageData.image = this.mediaInput;\n      } else {\n        var mediaPreviewer_style = this.mediaPreviewer.currentStyle || window.getComputedStyle(this.mediaPreviewer, false);\n        var base64data = mediaPreviewer_style.backgroundImage.slice(4, -1).replace(/\"/g, \"\");\n        var bstr = atob(base64data.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        imageData.image = new File([u8arr], this.mediaInput.name, {\n          type: this.mediaInput.type\n        });\n      } // Remove old warning messages\n\n\n      document.querySelectorAll('#editimage .warning').forEach(function (el) {\n        return el.parentElement.removeChild(el);\n      });\n      return new Promise(function (resolve) {\n        _this3.imageDB.saveImage(imageData).then(function (imageId) {\n          _this3.dialog.close();\n\n          Object(_common__WEBPACK_IMPORTED_MODULE_1__[\"addAlert\"])('success', gettext('The image has been updated.'));\n          _this3.imageId = imageId;\n          resolve(imageId);\n        }, function (errors) {\n          _this3.displayCreateImageError(errors);\n\n          Object(_common__WEBPACK_IMPORTED_MODULE_1__[\"addAlert\"])('error', gettext('Some errors were found. Please examine the form.'));\n        });\n      });\n    }\n  }]);\n\n  return ImageEditDialog;\n}();\n\n//# sourceURL=webpack:///./js/modules/images/edit_dialog/index.js?");

/***/ }),

/***/ "./js/modules/images/edit_dialog/model.js":
/*!************************************************!*\
  !*** ./js/modules/images/edit_dialog/model.js ***!
  \************************************************/
/*! exports provided: imageEditModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"imageEditModel\", function() { return imageEditModel; });\n/* harmony import */ var cropperjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cropperjs */ \"./node_modules/cropperjs/dist/cropper.js\");\n/* harmony import */ var cropperjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(cropperjs__WEBPACK_IMPORTED_MODULE_0__);\n\nvar imageEditModel = function imageEditModel() {\n  return {\n    content: [{\n      title: gettext('Rotate Left'),\n      type: 'action',\n      tooltip: gettext('Rotate-left'),\n      order: 0,\n      action: function action(dialog) {\n        rotateBase64Image(dialog.mediaPreviewer.src, dialog.mediaInput.type, 'left').then(function (response) {\n          dialog.mediaPreviewer.src = response;\n        });\n\n        if (dialog.rotation === 0) {\n          dialog.rotation = 270;\n        } else {\n          dialog.rotation -= 90;\n        }\n      },\n      icon: 'redo fa-rotate-180'\n    }, {\n      title: gettext('Rotate Right'),\n      type: 'action',\n      tooltip: gettext('Rotate-right'),\n      order: 0,\n      action: function action(dialog) {\n        rotateBase64Image(dialog.mediaPreviewer.src, dialog.mediaInput.type, 'right').then(function (response) {\n          dialog.mediaPreviewer.src = response;\n        });\n\n        if (dialog.rotation === 270) {\n          dialog.rotation = 0;\n        } else {\n          dialog.rotation += 90;\n        }\n      },\n      icon: 'undo'\n    }, {\n      title: gettext('Crop'),\n      type: 'action',\n      tooltip: gettext('Crop image'),\n      order: 0,\n      action: function action(dialog) {\n        var cropper = new cropperjs__WEBPACK_IMPORTED_MODULE_0___default.a(dialog.mediaPreviewer, {\n          viewMode: 1,\n          responsive: true\n        });\n        toggleCropMode(true, dialog, cropper);\n      },\n      icon: 'crop'\n    }]\n  };\n};\nvar oldButtons = false;\n\nvar toggleCropMode = function toggleCropMode(val, dialog, cropper) {\n  if (val && !oldButtons) {\n    dialog.mediaPreviewerDiv.classList.add('crop-mode');\n    oldButtons = dialog.dialog.buttons;\n    dialog.dialog.setButtons([{\n      text: gettext(\"Crop\"),\n      click: function click() {\n        dialog.mediaPreviewer.src = cropper.getCroppedCanvas().toDataURL(dialog.mediaInput.type);\n        dialog.cropped = true;\n        cropper.destroy();\n        toggleCropMode(false, dialog, cropper);\n      },\n      classes: \"fw-dark\"\n    }, {\n      type: 'cancel',\n      classes: \"fw-orange\",\n      click: function click() {\n        cropper.destroy();\n        toggleCropMode(false, dialog, cropper);\n      }\n    }]);\n  } else {\n    dialog.mediaPreviewerDiv.classList.remove('crop-mode');\n\n    if (oldButtons) {\n      dialog.dialog.buttons = oldButtons;\n      oldButtons = false;\n    }\n  }\n\n  dialog.dialog.refreshButtons();\n  dialog.dialog.centerDialog();\n};\n\nvar rotateBase64Image = function rotateBase64Image(base64data, type, direction) {\n  return new Promise(function (resolve) {\n    var canvas = document.createElement(\"canvas\");\n    var ctx = canvas.getContext(\"2d\");\n    var image = new Image();\n    image.src = base64data;\n\n    image.onload = function () {\n      canvas.height = image.width;\n      canvas.width = image.height;\n\n      if (direction == 'left') {\n        ctx.rotate(90 * Math.PI / 180);\n        ctx.translate(0, -canvas.width);\n      } else {\n        ctx.rotate(-90 * Math.PI / 180);\n        ctx.translate(-canvas.height, 0);\n      }\n\n      ctx.drawImage(image, 0, 0);\n      resolve(canvas.toDataURL(type));\n    };\n  });\n};\n\n//# sourceURL=webpack:///./js/modules/images/edit_dialog/model.js?");

/***/ }),

/***/ "./js/modules/images/edit_dialog/templates.js":
/*!****************************************************!*\
  !*** ./js/modules/images/edit_dialog/templates.js ***!
  \****************************************************/
/*! exports provided: imageEditTemplate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"imageEditTemplate\", function() { return imageEditTemplate; });\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common */ \"./js/modules/common/index.js\");\n\n/* A template for the image category selection of the image selection dialog. */\n\nvar imageEditCategoryTemplate = function imageEditCategoryTemplate(_ref) {\n  var image = _ref.image,\n      cats = _ref.cats;\n\n  if (!cats.length) {\n    return '';\n  }\n\n  return \"<div class=\\\"fw-media-category\\\">\\n            <div>\".concat(gettext('Select categories'), \"</div>\\n            \").concat(cats.map(function (cat) {\n    return \"<label class=\\\"fw-checkable fw-checkable-label\".concat(image && image.cats.includes(cat.id) ? ' checked' : '', \"\\\"\\n                        for=\\\"imageCat\").concat(cat.id, \"\\\">\\n                    \").concat(Object(_common__WEBPACK_IMPORTED_MODULE_0__[\"escapeText\"])(cat.category_title), \"\\n                </label>\\n                <input class=\\\"fw-checkable-input fw-media-form entry-cat\\\" type=\\\"checkbox\\\"\\n                        id=\\\"imageCat\").concat(cat.id, \"\\\" name=\\\"imageCat\\\" value=\\\"\").concat(cat.id, \"\\\" \").concat(image && image.cats.includes(cat.id) ? ' checked' : '', \">\");\n  }).join(''), \"\\n        </div>\");\n};\n/* A template for the form for the image upload dialog. */\n\n\nvar imageEditTemplate = function imageEditTemplate(_ref2) {\n  var image = _ref2.image,\n      cats = _ref2.cats;\n  return \"<div>\\n        <input name=\\\"title\\\" class=\\\"fw-media-title\\\" type=\\\"text\\\"\\n                placeholder=\\\"\".concat(gettext('Insert a title'), \"\\\" value=\\\"\").concat(image ? Object(_common__WEBPACK_IMPORTED_MODULE_0__[\"escapeText\"])(image.title) : '', \"\\\" />\\n        \").concat(image ? '' : \"<button type=\\\"button\\\" class=\\\"fw-media-select-button fw-button fw-light\\\">\\n                \".concat(gettext('Select a file'), \"\\n            </button>\\n            <input name=\\\"image\\\" type=\\\"file\\\" class=\\\"fw-media-file-input\\\">\"), \"\\n    </div>\\n    <div class=\\\"figure-preview\\\">\\n        <button class=\\\"figure-edit-menu hide\\\" title=\\\"\").concat(gettext('Edit Figure'), \"\\\">\\n            <span class=\\\"figure-edit-icon\\\"><i class=\\\"fa fa-ellipsis-v\\\"></i></span>\\n        </button>\\n    <div>\\n        \").concat(image && image.image ? \"<div class=\\\"img\\\" style=\\\"background-image: url(\".concat(image.image, \");\\\"></div>\") : '', \"\\n    </div></div>\\n    \").concat(imageEditCategoryTemplate({\n    image: image,\n    cats: cats\n  }));\n};\n\n//# sourceURL=webpack:///./js/modules/images/edit_dialog/templates.js?");

/***/ })

}]);