/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/static/js/transpile/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/admin_console.mjs");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/admin_console.mjs":
/*!******************************!*\
  !*** ./js/admin_console.mjs ***!
  \******************************/
/*! no exports provided */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_admin_console__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/admin_console */ \"./js/modules/admin_console/index.js\");\n\nvar theAdminConsole = new _modules_admin_console__WEBPACK_IMPORTED_MODULE_0__[\"AdminConsole\"](window.fidusConfig);\ntheAdminConsole.init();\nwindow.theAdminConsole = theAdminConsole;\n\n//# sourceURL=webpack:///./js/admin_console.mjs?");

/***/ }),

/***/ "./js/modules/admin_console/index.js":
/*!*******************************************!*\
  !*** ./js/modules/admin_console/index.js ***!
  \*******************************************/
/*! exports provided: AdminConsole */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AdminConsole\", function() { return AdminConsole; });\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common */ \"./js/modules/common/index.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n // To see how many users are currently online and send them maintenance messages\n\nvar AdminConsole =\n/*#__PURE__*/\nfunction () {\n  function AdminConsole(_ref) {\n    var websocketUrl = _ref.websocketUrl;\n\n    _classCallCheck(this, AdminConsole);\n\n    this.websocketUrl = websocketUrl;\n  }\n\n  _createClass(AdminConsole, [{\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n\n      Object(_common__WEBPACK_IMPORTED_MODULE_0__[\"whenReady\"])().then(function () {\n        _this.bind();\n      });\n    }\n  }, {\n    key: \"bind\",\n    value: function bind() {\n      var _this2 = this;\n\n      this.ws = new _common__WEBPACK_IMPORTED_MODULE_0__[\"WebSocketConnector\"]({\n        url: \"\".concat(this.websocketUrl, \"/ws/base/\"),\n        appLoaded: function appLoaded() {\n          return true;\n        },\n        initialMessage: function initialMessage() {\n          return {\n            type: 'subscribe_admin'\n          };\n        },\n        receiveData: function receiveData(data) {\n          switch (data.type) {\n            case 'connection_info':\n              _this2.renderConnectionInfo(data.sessions);\n\n              break;\n\n            case 'message_delivered':\n              {\n                Object(_common__WEBPACK_IMPORTED_MODULE_0__[\"addAlert\"])('info', gettext('Message delivered successfully!'));\n                var button = document.querySelector('input#submit_user_message');\n                button.value = gettext('Message delivered');\n                break;\n              }\n\n            default:\n              break;\n          }\n        }\n      });\n      this.ws.init();\n      document.body.addEventListener('click', function (event) {\n        var el = {};\n\n        switch (true) {\n          case Object(_common__WEBPACK_IMPORTED_MODULE_0__[\"findTarget\"])(event, 'input#submit_user_message:not(.disabled)', el):\n            {\n              var message = document.querySelector('textarea#user_message').value;\n\n              if (!message.length) {\n                return;\n              }\n\n              document.querySelector('textarea#user_message').disabled = true;\n              document.querySelector('input#submit_user_message').disabled = true;\n              document.querySelector('input#submit_user_message').value = gettext('Sending...');\n\n              _this2.sendUserMessage(message);\n\n              break;\n            }\n\n          default:\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"sendUserMessage\",\n    value: function sendUserMessage(message) {\n      this.ws.send(function () {\n        return {\n          type: 'message',\n          message: message\n        };\n      });\n    }\n  }, {\n    key: \"renderConnectionInfo\",\n    value: function renderConnectionInfo(sessions) {\n      var counterEl = document.getElementById('session_count');\n\n      if (counterEl) {\n        counterEl.innerHTML = sessions;\n      }\n    }\n  }]);\n\n  return AdminConsole;\n}();\n\n//# sourceURL=webpack:///./js/modules/admin_console/index.js?");

/***/ }),

/***/ "./js/modules/common/basic.js":
/*!************************************!*\
  !*** ./js/modules/common/basic.js ***!
  \************************************/
/*! exports provided: addDropdownBox, openDropdownBox, setCheckableLabel, activateWait, deactivateWait, addAlert, showSystemMessage, localizeDate, noSpaceTmp, escapeText, cancelPromise, findTarget, whenReady, setDocTitle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addDropdownBox\", function() { return addDropdownBox; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"openDropdownBox\", function() { return openDropdownBox; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setCheckableLabel\", function() { return setCheckableLabel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"activateWait\", function() { return activateWait; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deactivateWait\", function() { return deactivateWait; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addAlert\", function() { return addAlert; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"showSystemMessage\", function() { return showSystemMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"localizeDate\", function() { return localizeDate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"noSpaceTmp\", function() { return noSpaceTmp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"escapeText\", function() { return escapeText; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cancelPromise\", function() { return cancelPromise; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findTarget\", function() { return findTarget; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"whenReady\", function() { return whenReady; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setDocTitle\", function() { return setDocTitle; });\n/* harmony import */ var _dialog__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dialog */ \"./js/modules/common/dialog.js\");\n\n/** Creates a dropdown box.\n * @param btn The button to open and close the dropdown box.\n * @param box The node containing the contents of the dropdown box.\n * @param preopen An optional function to be called before opening the dropdown box. Used to position dropdown box.\n */\n\nvar addDropdownBox = function addDropdownBox(btn, box) {\n  var preopen = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  btn.addEventListener('click', function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (btn.classList.contains('disabled')) {\n      return;\n    }\n\n    if (!box.clientWidth) {\n      if (preopen) {\n        preopen();\n      }\n\n      openDropdownBox(box);\n    }\n  });\n};\n/** Opens a dropdown box.\n * @param box The node containing the contents of the dropdown box.\n */\n\nvar openDropdownBox = function openDropdownBox(box) {\n  // Show this box\n  box.style.display = 'block';\n\n  var closeDropdownBox = function closeDropdownBox(event) {\n    event.preventDefault();\n    box.style.display = '';\n    document.removeEventListener('click', closeDropdownBox, false);\n  };\n\n  document.body.addEventListener('click', closeDropdownBox, false);\n};\n/** Checks or unchecks a checkable label. This is used for example for bibliography categories when editing bibliography items.\n * @param label The node who's parent has to be checked or unchecked.\n */\n\nvar setCheckableLabel = function setCheckableLabel(labelEl) {\n  if (labelEl.classList.contains('checked')) {\n    labelEl.classList.remove('checked');\n  } else {\n    labelEl.classList.add('checked');\n  }\n};\n/** Cover the page signaling to the user to wait.\n */\n\nvar activateWait = function activateWait() {\n  var full = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var waitEl = document.getElementById('wait');\n\n  if (waitEl) {\n    waitEl.classList.add('active');\n\n    if (full) {\n      waitEl.classList.add('full');\n    }\n  }\n};\n/** Remove the wait cover.\n */\n\nvar deactivateWait = function deactivateWait() {\n  var waitEl = document.getElementById('wait');\n\n  if (waitEl) {\n    waitEl.classList.remove('active');\n    waitEl.classList.remove('full');\n  }\n};\n/** Show a message to the user.\n * @param alertType The type of message that is shown (error, warning, info or success).\n * @param alertMsg The message text.\n */\n\nvar addAlert = function addAlert(alertType, alertMsg) {\n  var iconNames = {\n    'error': 'exclamation-circle',\n    'warning': 'exclamation-circle',\n    'info': 'info-circle',\n    'success': 'check-circle'\n  };\n  if (!document.getElementById('#alerts-outer-wrapper')) document.body.insertAdjacentHTML('beforeend', '<div id=\"alerts-outer-wrapper\"><ul id=\"alerts-wrapper\"></ul></div>');\n  var alertsWrapper = document.getElementById('alerts-wrapper');\n  alertsWrapper.insertAdjacentHTML('beforeend', \"<li class=\\\"alerts-\".concat(alertType, \" fa fa-\").concat(iconNames[alertType], \"\\\">\").concat(alertMsg, \"</li>\"));\n  var alertBox = alertsWrapper.lastElementChild;\n  setTimeout(function () {\n    alertBox.classList.add('visible');\n    setTimeout(function () {\n      alertBox.classList.remove('visible');\n      setTimeout(function () {\n        return alertsWrapper.removeChild(alertBox);\n      }, 2000);\n    }, 4000);\n  }, 1);\n}; // Used for system mesages\n\nvar showSystemMessage = function showSystemMessage(message) {\n  var dialog = new _dialog__WEBPACK_IMPORTED_MODULE_0__[\"Dialog\"]({\n    title: gettext('System message'),\n    body: \"<p>\".concat(escapeText(message), \"</p>\"),\n    buttons: [{\n      type: 'close'\n    }]\n  });\n  dialog.open();\n};\n/** Turn milliseconds since epoch (UTC) into a local date string.\n * @param {number} milliseconds Number of milliseconds since epoch (1/1/1970 midnight, UTC).\n * @param {boolean} type 'full' for full date (default), 'sortable-date' for sortable date, 'minutes' for minute accuracy\n */\n\nvar CACHED_DATES = {\n  'sortable-date': {},\n  'minutes': {},\n  'full': {}\n};\nvar localizeDate = function localizeDate(milliseconds) {\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'full';\n\n  if (milliseconds === 0) {\n    return '';\n  } else if (CACHED_DATES[type][milliseconds]) {\n    return CACHED_DATES[type][milliseconds];\n  }\n\n  var theDate = new Date(milliseconds);\n  var returnValue;\n\n  switch (type) {\n    case 'sortable-date':\n      {\n        var yyyy = theDate.getFullYear();\n        var mm = theDate.getMonth() + 1;\n        var dd = theDate.getDate();\n        returnValue = \"\".concat(yyyy, \"-\").concat(String(mm).padStart(2, '0'), \"-\").concat(String(dd).padStart(2, '0'));\n        break;\n      }\n\n    case 'minutes':\n      returnValue = theDate.toLocaleString([], {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n      break;\n\n    default:\n      returnValue = theDate.toLocaleString();\n  }\n\n  if (Object.keys(CACHED_DATES[type]).length > 5000) {\n    CACHED_DATES[type] = {};\n  }\n\n  CACHED_DATES[type][milliseconds] = returnValue;\n  return returnValue;\n};\n/**\n * Turn string literals into single line, removing spaces at start of line\n */\n\nvar noSpaceTmp = function noSpaceTmp(_strings) {\n  var values = Array.from(arguments);\n  var tmpStrings = Array.from(values.shift());\n  var combined = \"\";\n\n  while (tmpStrings.length > 0 || values.length > 0) {\n    if (tmpStrings.length > 0) {\n      combined += tmpStrings.shift();\n    }\n\n    if (values.length > 0) {\n      combined += values.shift();\n    }\n  }\n\n  var out = \"\";\n  combined.split('\\n').forEach(function (line) {\n    out += line.replace(/^\\s*/g, '');\n  });\n  return out;\n};\nvar escapeText = function escapeText(text) {\n  return text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n};\n/**\n * Return a cancel promise if you need to cancel a promise chain. Import as\n * ES6 promises are not (yet) cancelable.\n */\n\nvar cancelPromise = function cancelPromise() {\n  return new Promise(function () {});\n}; // Check if selector matches one of the ancestors of the event target.\n// Used in switch statements of document event listeners.\n\nvar findTarget = function findTarget(event, selector) {\n  var el = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  el.target = event.target.closest(selector);\n\n  if (el.target) {\n    event.stopPropagation();\n    return true;\n  }\n\n  return false;\n}; // Promise when page has been loaded.\n\nvar whenReady = function whenReady() {\n  if (document.readyState === \"complete\") {\n    return Promise.resolve();\n  } else {\n    return new Promise(function (resolve) {\n      document.addEventListener(\"readystatechange\", function (_event) {\n        if (document.readyState === \"complete\") {\n          resolve();\n        }\n      });\n    });\n  }\n};\nvar setDocTitle = function setDocTitle(title, app) {\n  var titleText = \"\".concat(title, \" - \").concat(app.name);\n\n  if (document.title !== titleText) {\n    document.title = titleText;\n  }\n};\n\n//# sourceURL=webpack:///./js/modules/common/basic.js?");

/***/ }),

/***/ "./js/modules/common/content_menu.js":
/*!*******************************************!*\
  !*** ./js/modules/common/content_menu.js ***!
  \*******************************************/
/*! exports provided: ContentMenu */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ContentMenu\", function() { return ContentMenu; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar menuTemplate = function menuTemplate(_ref) {\n  var id = _ref.id,\n      classes = _ref.classes,\n      height = _ref.height,\n      width = _ref.width,\n      zIndex = _ref.zIndex,\n      menu = _ref.menu,\n      scroll = _ref.scroll,\n      page = _ref.page;\n  return \"<div tabindex=\\\"-1\\\" role=\\\"incontent_menu\\\"\\n        class=\\\"ui-content_menu ui-corner-all ui-widget ui-widget-content ui-front\\\"\\n        \".concat(id ? \"aria-describedby=\\\"\".concat(id, \"\\\"\") : '', \" style=\\\"z-index: \").concat(zIndex, \";\\\">\\n    <div \").concat(id ? \"id=\\\"\".concat(id, \"\\\"\") : '', \" class=\\\"ui-content_menu-content ui-widget-content\").concat(classes ? \" \".concat(classes) : '').concat(scroll ? \" ui-scrollable\" : '', \"\\\" style=\\\"width: \").concat(width, \"; height: \").concat(height, \";\\\">\\n    <div>\\n        <ul class=\\\"content-menu-list\\\">\\n        \").concat(menu.content.map(function (menuItem, index) {\n    return menuItem.type == \"separator\" ? '<hr class=\"content-menu-item-divider\"/>' : \"<li data-index=\\\"\".concat(index, \"\\\" class=\\\"content-menu-item\").concat(menuItem.disabled && menuItem.disabled(page) ? ' disabled' : '', \"\\\" title='\").concat(menuItem.tooltip, \"'>\\n                    \").concat(typeof menuItem.title === 'function' ? menuItem.title(page) : menuItem.title, \" \").concat(menuItem.icon ? \"<span class=\\\"content-menu-item-icon\\\"><i class=\\\"fa fa-\".concat(menuItem.icon, \"\\\"></i></span>\") : '', \"\\n                    </li>\");\n  }).join(''), \"\\n        </ul>\\n    </div>\\n    </div>\\n</div>\\n<div class=\\\"ui-widget-overlay ui-front\\\" style=\\\"z-index: \").concat(zIndex - 1, \"\\\"></div>\");\n};\n\nvar ContentMenu =\n/*#__PURE__*/\nfunction () {\n  function ContentMenu(_ref2) {\n    var _ref2$id = _ref2.id,\n        id = _ref2$id === void 0 ? false : _ref2$id,\n        _ref2$page = _ref2.page,\n        page = _ref2$page === void 0 ? false : _ref2$page,\n        _ref2$classes = _ref2.classes,\n        classes = _ref2$classes === void 0 ? false : _ref2$classes,\n        _ref2$menu = _ref2.menu,\n        menu = _ref2$menu === void 0 ? {\n      content: []\n    } : _ref2$menu,\n        _ref2$height = _ref2.height,\n        height = _ref2$height === void 0 ? false : _ref2$height,\n        _ref2$width = _ref2.width,\n        width = _ref2$width === void 0 ? false : _ref2$width,\n        _ref2$onClose = _ref2.onClose,\n        onClose = _ref2$onClose === void 0 ? false : _ref2$onClose,\n        _ref2$scroll = _ref2.scroll,\n        scroll = _ref2$scroll === void 0 ? false : _ref2$scroll,\n        _ref2$dialogEl = _ref2.dialogEl,\n        dialogEl = _ref2$dialogEl === void 0 ? false : _ref2$dialogEl,\n        _ref2$backdropEl = _ref2.backdropEl,\n        backdropEl = _ref2$backdropEl === void 0 ? false : _ref2$backdropEl,\n        _ref2$menuPos = _ref2.menuPos,\n        menuPos = _ref2$menuPos === void 0 ? false : _ref2$menuPos;\n\n    _classCallCheck(this, ContentMenu);\n\n    this.id = id;\n    this.page = page;\n    this.classes = classes;\n    this.menu = menu;\n    this.height = height ? \"\".concat(height, \"px\") : 'auto';\n    this.width = width ? \"\".concat(width, \"px\") : 'auto';\n    this.onClose = onClose;\n    this.scroll = scroll;\n    this.dialogEl = dialogEl;\n    this.backdropEl = backdropEl;\n    this.menuPos = menuPos;\n  }\n\n  _createClass(ContentMenu, [{\n    key: \"open\",\n    value: function open() {\n      if (this.dialogEl) {\n        return;\n      }\n\n      document.body.insertAdjacentHTML('beforeend', menuTemplate({\n        id: this.id,\n        classes: this.classes,\n        height: this.height,\n        width: this.width,\n        zIndex: this.getHighestDialogZIndex() + 2,\n        menu: this.menu,\n        scroll: this.scroll,\n        page: this.page\n      }));\n      this.backdropEl = document.body.lastElementChild;\n      this.dialogEl = this.backdropEl.previousElementSibling;\n      if (this.menuPos && this.menuPos.X && this.menuPos.Y) this.positionDialog();else this.centerDialog();\n      this.bind();\n    }\n  }, {\n    key: \"centerDialog\",\n    value: function centerDialog() {\n      var totalWidth = window.innerWidth,\n          totalHeight = window.innerHeight,\n          dialogRect = this.dialogEl.getBoundingClientRect(),\n          dialogWidth = dialogRect.width + 10,\n          dialogHeight = dialogRect.height + 10,\n          scrollTopOffset = window.pageYOffset,\n          scrollLeftOffset = window.pageXOffset;\n      this.dialogEl.style.top = \"\".concat((totalHeight - dialogHeight) / 2 + scrollTopOffset, \"px\");\n      this.dialogEl.style.left = \"\".concat((totalWidth - dialogWidth) / 2 + scrollLeftOffset, \"px\");\n    }\n  }, {\n    key: \"positionDialog\",\n    value: function positionDialog() {\n      var dialogHeight = this.dialogEl.getBoundingClientRect().height + 10,\n          scrollTopOffset = window.pageYOffset,\n          clientHeight = window.document.documentElement.clientHeight,\n          left = this.menuPos.X; // We try to ensure that the menu is seen in the browser at the preferred location.\n      // Adjustments are made in case it doesn't fit.\n\n      var top = this.menuPos.Y;\n\n      if (top + dialogHeight > scrollTopOffset + clientHeight) {\n        top -= top + dialogHeight - (scrollTopOffset + clientHeight);\n      }\n\n      if (top < scrollTopOffset) {\n        top = scrollTopOffset + 10;\n      }\n\n      this.dialogEl.style.top = \"\".concat(top, \"px\");\n      this.dialogEl.style.left = \"\".concat(left, \"px\");\n    }\n  }, {\n    key: \"bind\",\n    value: function bind() {\n      var _this = this;\n\n      this.backdropEl.addEventListener('click', function () {\n        return _this.close();\n      });\n      this.dialogEl.addEventListener('click', function (event) {\n        return _this.onclick(event);\n      });\n    }\n  }, {\n    key: \"getHighestDialogZIndex\",\n    value: function getHighestDialogZIndex() {\n      var zIndex = 100;\n      document.querySelectorAll('div.ui-content_menu').forEach(function (dialogEl) {\n        return zIndex = Math.max(zIndex, dialogEl.style.zIndex);\n      });\n      document.querySelectorAll('div.ui-dialog').forEach(function (dialogEl) {\n        return zIndex = Math.max(zIndex, dialogEl.style.zIndex);\n      });\n      return zIndex;\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (!this.dialogEl) {\n        return;\n      }\n\n      this.dialogEl.parentElement.removeChild(this.dialogEl);\n      this.backdropEl.parentElement.removeChild(this.backdropEl);\n\n      if (this.onClose) {\n        this.onClose();\n      }\n    }\n  }, {\n    key: \"onclick\",\n    value: function onclick(event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n      var target = event.target;\n\n      if (target.matches('li.content-menu-item')) {\n        var menuNumber = target.dataset.index;\n        var menuItem = this.menu.content[menuNumber];\n\n        if (menuItem.disabled && menuItem.disabled(this.page)) {\n          return;\n        }\n\n        menuItem.action(this.page);\n        this.close();\n      }\n    }\n  }]);\n\n  return ContentMenu;\n}();\n\n//# sourceURL=webpack:///./js/modules/common/content_menu.js?");

/***/ }),

/***/ "./js/modules/common/datatable_bulk.js":
/*!*********************************************!*\
  !*** ./js/modules/common/datatable_bulk.js ***!
  \*********************************************/
/*! exports provided: DatatableBulk */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DatatableBulk\", function() { return DatatableBulk; });\n/* harmony import */ var _basic__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./basic */ \"./js/modules/common/basic.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\nvar bulk_id = 0;\nvar DatatableBulk =\n/*#__PURE__*/\nfunction () {\n  function DatatableBulk(overview, actions) {\n    _classCallCheck(this, DatatableBulk);\n\n    this.id = \"dt-bulk-\".concat(++bulk_id);\n    this.overview = overview;\n    this.actions = actions;\n    this.opened = false;\n  }\n\n  _createClass(DatatableBulk, [{\n    key: \"init\",\n    value: function init(table) {\n      var _this = this;\n\n      this.table = table;\n      Object(_basic__WEBPACK_IMPORTED_MODULE_0__[\"whenReady\"])().then(function () {\n        return _this.bindEvents();\n      });\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      document.body.addEventListener('click', this.onClick.bind(this));\n      this.table.addEventListener('change', this.onTableCheckChange.bind(this));\n      this.onTableCheckChange();\n    }\n  }, {\n    key: \"onTableCheckChange\",\n    value: function onTableCheckChange() {\n      if (this.isChecked()) {\n        document.querySelector(\"#\".concat(this.id)).classList.remove('disabled');\n      } else {\n        document.querySelector(\"#\".concat(this.id)).classList.add('disabled');\n      }\n    }\n  }, {\n    key: \"isAllChecked\",\n    value: function isAllChecked() {\n      var checkboxes = this.table.querySelectorAll('input.entry-select[type=checkbox]');\n      var unchecked = [].filter.call(checkboxes, function (box) {\n        return !box.checked;\n      });\n      return !(unchecked && unchecked.length);\n    }\n  }, {\n    key: \"isChecked\",\n    value: function isChecked() {\n      var checked_boxes = this.table.querySelectorAll('input.entry-select[type=checkbox]:checked');\n      return checked_boxes && checked_boxes.length;\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(event) {\n      var target = event.target;\n      var last_opened = this.opened;\n\n      if (last_opened) {\n        this.opened = false;\n        document.querySelector(\"#\".concat(this.id)).classList.remove('opened');\n      }\n\n      if (target.matches(\"#\".concat(this.id, \" *\"))) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        event.stopPropagation();\n\n        if (target.matches('.dt-bulk-dropdown, .dt-bulk-dropdown *')) {\n          // Dropdown\n          if (!last_opened) {\n            this.opened = true;\n            document.querySelector(\"#\".concat(this.id)).classList.add('opened');\n          }\n        } else if (target.matches('.fw-check + label, .fw-check + label *')) {\n          // Click on bulk checkbox\n          var is_checked = this.isAllChecked();\n          this.table.querySelectorAll('input.entry-select[type=checkbox]').forEach(function (checkbox) {\n            return checkbox.checked = !is_checked;\n          });\n          this.onTableCheckChange();\n        } else if (target.matches('.fw-pulldown-item')) {\n          // Click on action pulldown\n          var action_id = parseInt(target.dataset.id);\n          this.actions[action_id].action(this.overview);\n        }\n      }\n    }\n  }, {\n    key: \"getHTML\",\n    value: function getHTML() {\n      var pulldown_options = this.actions.map(function (action, i) {\n        return \"<li><span data-id=\\\"\".concat(i, \"\\\" class=\\\"fw-pulldown-item\\\">\").concat(Object(_basic__WEBPACK_IMPORTED_MODULE_0__[\"escapeText\"])(action.title), \"</span></li>\");\n      }).join('');\n      return \"<div id=\\\"\".concat(this.id, \"\\\" class=\\\"dt-bulk\").concat(this.opened ? ' opened' : '', \"\\\">\\n                <input type=\\\"checkbox\\\" id=\\\"\").concat(this.id, \"_check\\\" class=\\\"fw-check\\\"><label for=\\\"\").concat(this.id, \"_check\\\"></label>\\n                <span class=\\\"dt-bulk-dropdown\\\"><i class=\\\"fa fa-caret-down\\\"></i></span>\\n                <div class=\\\"fw-pulldown fw-left\\\">\\n                    <ul>\").concat(pulldown_options, \"</ul>\\n                </div>\\n            </div>\");\n    }\n  }]);\n\n  return DatatableBulk;\n}();\n\n//# sourceURL=webpack:///./js/modules/common/datatable_bulk.js?");

/***/ }),

/***/ "./js/modules/common/dialog.js":
/*!*************************************!*\
  !*** ./js/modules/common/dialog.js ***!
  \*************************************/
/*! exports provided: Dialog */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Dialog\", function() { return Dialog; });\n/* harmony import */ var _basic__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./basic */ \"./js/modules/common/basic.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar dialogTemplate = function dialogTemplate(_ref) {\n  var id = _ref.id,\n      classes = _ref.classes,\n      title = _ref.title,\n      height = _ref.height,\n      width = _ref.width,\n      icon = _ref.icon,\n      buttons = _ref.buttons,\n      zIndex = _ref.zIndex,\n      body = _ref.body,\n      scroll = _ref.scroll;\n  return \"<div tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n        class=\\\"ui-dialog ui-corner-all ui-widget ui-widget-content ui-front ui-dialog-buttons\\\"\\n        \".concat(id ? \"aria-describedby=\\\"\".concat(id, \"\\\"\") : '', \" style=\\\"z-index: \").concat(zIndex, \";\\\">\\n    <div class=\\\"ui-dialog-titlebar ui-corner-all ui-widget-header ui-helper-clearfix\\\">\\n        \").concat(icon ? \"<i class=\\\"fa fa-\".concat(icon, \"\\\" aria-hidden=\\\"true\\\"></i>\") : '', \"\\n        <span id=\\\"ui-id-2\\\" class=\\\"ui-dialog-title\\\">\").concat(title, \"</span>\\n        <button type=\\\"button\\\" class=\\\"ui-button ui-corner-all ui-widget ui-button-icon-only ui-dialog-titlebar-close\\\" title=\\\"\").concat(gettext('Close'), \"\\\">\\n            <span class=\\\"ui-button-icon ui-icon ui-icon-closethick\\\"> </span>\\n            <span class=\\\"ui-button-icon-space\\\"> </span>\\n            \").concat(gettext('Close'), \"\\n        </button>\\n    </div>\\n    <div \").concat(id ? \"id=\\\"\".concat(id, \"\\\"\") : '', \" class=\\\"ui-dialog-content ui-widget-content\").concat(classes ? \" \".concat(classes) : '').concat(scroll ? \" ui-scrollable\" : '', \"\\\" style=\\\"width: \").concat(width, \"; height: \").concat(height, \";\\\">\\n        \").concat(body, \"\\n    </div>\\n    <div class=\\\"ui-dialog-buttonpane ui-widget-content ui-helper-clearfix\\\">\\n        <div class=\\\"ui-dialog-buttonset\\\">\").concat(buttonsTemplate({\n    buttons: buttons\n  }), \"</div>\\n    </div>\\n</div>\\n<div class=\\\"ui-widget-overlay ui-front\\\" style=\\\"z-index: \").concat(zIndex - 1, \"\\\"></div>\");\n};\n\nvar buttonsTemplate = function buttonsTemplate(_ref2) {\n  var buttons = _ref2.buttons;\n  return buttons.map(function (button) {\n    return buttonTemplate(button);\n  }).join('');\n};\n\nvar buttonTemplate = function buttonTemplate(_ref3) {\n  var text = _ref3.text,\n      classes = _ref3.classes,\n      icon = _ref3.icon;\n  return \"<button type=\\\"button\\\" class=\\\"\".concat(classes ? classes : 'fw-light', \" fw-button ui-button ui-corner-all ui-widget\\\">\\n    \").concat(icon ? \"<i class=\\\"fa fa-\".concat(icon, \"\\\" aria-hidden=\\\"true\\\"></i>\") : '', \"\\n    \").concat(text, \"\\n</button>\");\n};\n\nvar BUTTON_TYPES = {\n  close: {\n    text: gettext('Close'),\n    classes: 'fw-orange',\n    click: function click(dialog) {\n      return function () {\n        return dialog.close();\n      };\n    }\n  },\n  cancel: {\n    text: gettext('Cancel'),\n    classes: 'fw-orange',\n    click: function click(dialog) {\n      return function () {\n        return dialog.close();\n      };\n    }\n  },\n  ok: {\n    text: gettext('OK'),\n    classes: 'fw-dark',\n    click: function click(dialog) {\n      return function () {\n        return dialog.close();\n      };\n    }\n  }\n};\nvar Dialog =\n/*#__PURE__*/\nfunction () {\n  function Dialog(options) {\n    _classCallCheck(this, Dialog);\n\n    this.eventAddress = this.scrollevent.bind(this);\n    this.id = options.id || false;\n    this.classes = options.classes || false;\n    this.title = options.title || '';\n    this.body = options.body || '';\n    this.height = options.height ? \"\".concat(options.height, \"px\") : 'auto';\n    this.width = options.width ? \"\".concat(options.width, \"px\") : 'auto';\n    this.buttons = [];\n\n    if (options.buttons) {\n      this.setButtons(options.buttons);\n    }\n\n    this.beforeClose = options.onClose || false;\n    this.onClose = options.onClose || false;\n    this.icon = options.icon || false;\n    this.scroll = options.scroll || false;\n    this.dialogEl = false;\n    this.backdropEl = false;\n  }\n\n  _createClass(Dialog, [{\n    key: \"setButtons\",\n    value: function setButtons(buttons) {\n      var _this = this;\n\n      this.buttons = buttons.map(function (button) {\n        return {\n          text: button.text ? button.text : button.type ? BUTTON_TYPES[button.type].text : '',\n          classes: button.classes ? button.classes : button.type ? BUTTON_TYPES[button.type].classes : false,\n          click: button.click ? button.click : button.type ? BUTTON_TYPES[button.type].click(_this) : '',\n          icon: button.icon ? button.icon : false\n        };\n      });\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      if (this.dialogEl) {\n        return;\n      }\n\n      document.body.insertAdjacentHTML('beforeend', dialogTemplate({\n        id: this.id,\n        classes: this.classes,\n        title: this.title,\n        height: this.height,\n        width: this.width,\n        icon: this.icon,\n        buttons: this.buttons,\n        zIndex: this.getHighestDialogZIndex() + 2,\n        body: this.body,\n        scroll: this.scroll\n      }));\n      this.backdropEl = document.body.lastElementChild;\n      this.dialogEl = this.backdropEl.previousElementSibling;\n      this.centerDialog();\n      this.bind();\n    }\n  }, {\n    key: \"refreshButtons\",\n    value: function refreshButtons() {\n      this.dialogEl.querySelector('.ui-dialog-buttonset').innerHTML = buttonsTemplate({\n        buttons: this.buttons\n      });\n    }\n  }, {\n    key: \"centerDialog\",\n    value: function centerDialog() {\n      var totalWidth = window.innerWidth,\n          totalHeight = window.innerHeight,\n          dialogWidth = this.dialogEl.clientWidth,\n          dialogHeight = this.dialogEl.clientHeight,\n          scrollTopOffset = window.pageYOffset,\n          scrollLeftOffset = window.pageXOffset;\n      this.dialogEl.style.top = \"\".concat((totalHeight - dialogHeight) / 2 + scrollTopOffset, \"px\");\n      this.dialogEl.style.left = \"\".concat((totalWidth - dialogWidth) / 2 + scrollLeftOffset, \"px\");\n    }\n  }, {\n    key: \"scrollevent\",\n    value: function scrollevent() {\n      this.centerDialog();\n    }\n  }, {\n    key: \"bind\",\n    value: function bind() {\n      var _this2 = this;\n\n      window.addEventListener('scroll', this.eventAddress, false);\n      this.dialogEl.addEventListener('click', function (event) {\n        var el = {};\n        var buttonNumber, seekItem;\n\n        switch (true) {\n          case Object(_basic__WEBPACK_IMPORTED_MODULE_0__[\"findTarget\"])(event, '.ui-dialog-buttonpane button', el):\n            event.preventDefault();\n            buttonNumber = 0;\n            seekItem = el.target;\n\n            while (seekItem.previousElementSibling) {\n              buttonNumber++;\n              seekItem = seekItem.previousElementSibling;\n            }\n\n            _this2.buttons[buttonNumber].click();\n\n            break;\n\n          case Object(_basic__WEBPACK_IMPORTED_MODULE_0__[\"findTarget\"])(event, '.ui-dialog-titlebar-close', el):\n            event.preventDefault();\n\n            _this2.close();\n\n            break;\n\n          default:\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"getHighestDialogZIndex\",\n    value: function getHighestDialogZIndex() {\n      var zIndex = 100;\n      document.querySelectorAll('div.ui-dialog').forEach(function (dialogEl) {\n        return zIndex = Math.max(zIndex, dialogEl.style.zIndex);\n      });\n      return zIndex;\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (!this.dialogEl) {\n        return;\n      }\n\n      window.removeEventListener(\"scroll\", this.eventAddress, false);\n\n      if (this.beforeClose) {\n        this.beforeClose();\n      }\n\n      this.dialogEl.parentElement.removeChild(this.dialogEl);\n      this.backdropEl.parentElement.removeChild(this.backdropEl);\n\n      if (this.onClose) {\n        this.onClose();\n      }\n    }\n  }]);\n\n  return Dialog;\n}();\n\n//# sourceURL=webpack:///./js/modules/common/dialog.js?");

/***/ }),

/***/ "./js/modules/common/index.js":
/*!************************************!*\
  !*** ./js/modules/common/index.js ***!
  \************************************/
/*! exports provided: OverviewMenuView, addDropdownBox, openDropdownBox, setCheckableLabel, activateWait, deactivateWait, addAlert, localizeDate, noSpaceTmp, escapeText, cancelPromise, findTarget, whenReady, setDocTitle, showSystemMessage, get, getJson, post, postJson, postBare, ensureCSS, getUserInfo, setLanguage, loginUser, Dialog, ContentMenu, makeWorker, baseBodyTemplate, WebSocketConnector, filterPrimaryEmail, DatatableBulk */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _overview_menu__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./overview_menu */ \"./js/modules/common/overview_menu.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"OverviewMenuView\", function() { return _overview_menu__WEBPACK_IMPORTED_MODULE_0__[\"OverviewMenuView\"]; });\n\n/* harmony import */ var _basic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./basic */ \"./js/modules/common/basic.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"addDropdownBox\", function() { return _basic__WEBPACK_IMPORTED_MODULE_1__[\"addDropdownBox\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"openDropdownBox\", function() { return _basic__WEBPACK_IMPORTED_MODULE_1__[\"openDropdownBox\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"setCheckableLabel\", function() { return _basic__WEBPACK_IMPORTED_MODULE_1__[\"setCheckableLabel\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"activateWait\", function() { return _basic__WEBPACK_IMPORTED_MODULE_1__[\"activateWait\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"deactivateWait\", function() { return _basic__WEBPACK_IMPORTED_MODULE_1__[\"deactivateWait\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"addAlert\", function() { return _basic__WEBPACK_IMPORTED_MODULE_1__[\"addAlert\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"localizeDate\", function() { return _basic__WEBPACK_IMPORTED_MODULE_1__[\"localizeDate\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"noSpaceTmp\", function() { return _basic__WEBPACK_IMPORTED_MODULE_1__[\"noSpaceTmp\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"escapeText\", function() { return _basic__WEBPACK_IMPORTED_MODULE_1__[\"escapeText\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"cancelPromise\", function() { return _basic__WEBPACK_IMPORTED_MODULE_1__[\"cancelPromise\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"findTarget\", function() { return _basic__WEBPACK_IMPORTED_MODULE_1__[\"findTarget\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"whenReady\", function() { return _basic__WEBPACK_IMPORTED_MODULE_1__[\"whenReady\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"setDocTitle\", function() { return _basic__WEBPACK_IMPORTED_MODULE_1__[\"setDocTitle\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"showSystemMessage\", function() { return _basic__WEBPACK_IMPORTED_MODULE_1__[\"showSystemMessage\"]; });\n\n/* harmony import */ var _network__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./network */ \"./js/modules/common/network.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"get\", function() { return _network__WEBPACK_IMPORTED_MODULE_2__[\"get\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getJson\", function() { return _network__WEBPACK_IMPORTED_MODULE_2__[\"getJson\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"post\", function() { return _network__WEBPACK_IMPORTED_MODULE_2__[\"post\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"postJson\", function() { return _network__WEBPACK_IMPORTED_MODULE_2__[\"postJson\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"postBare\", function() { return _network__WEBPACK_IMPORTED_MODULE_2__[\"postBare\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ensureCSS\", function() { return _network__WEBPACK_IMPORTED_MODULE_2__[\"ensureCSS\"]; });\n\n/* harmony import */ var _user__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./user */ \"./js/modules/common/user.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getUserInfo\", function() { return _user__WEBPACK_IMPORTED_MODULE_3__[\"getUserInfo\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"setLanguage\", function() { return _user__WEBPACK_IMPORTED_MODULE_3__[\"setLanguage\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"loginUser\", function() { return _user__WEBPACK_IMPORTED_MODULE_3__[\"loginUser\"]; });\n\n/* harmony import */ var _dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dialog */ \"./js/modules/common/dialog.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Dialog\", function() { return _dialog__WEBPACK_IMPORTED_MODULE_4__[\"Dialog\"]; });\n\n/* harmony import */ var _content_menu__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./content_menu */ \"./js/modules/common/content_menu.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ContentMenu\", function() { return _content_menu__WEBPACK_IMPORTED_MODULE_5__[\"ContentMenu\"]; });\n\n/* harmony import */ var _worker__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./worker */ \"./js/modules/common/worker.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"makeWorker\", function() { return _worker__WEBPACK_IMPORTED_MODULE_6__[\"makeWorker\"]; });\n\n/* harmony import */ var _templates__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./templates */ \"./js/modules/common/templates.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"baseBodyTemplate\", function() { return _templates__WEBPACK_IMPORTED_MODULE_7__[\"baseBodyTemplate\"]; });\n\n/* harmony import */ var _ws__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ws */ \"./js/modules/common/ws.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"WebSocketConnector\", function() { return _ws__WEBPACK_IMPORTED_MODULE_8__[\"WebSocketConnector\"]; });\n\n/* harmony import */ var _user_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./user_util */ \"./js/modules/common/user_util.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"filterPrimaryEmail\", function() { return _user_util__WEBPACK_IMPORTED_MODULE_9__[\"filterPrimaryEmail\"]; });\n\n/* harmony import */ var _datatable_bulk__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./datatable_bulk */ \"./js/modules/common/datatable_bulk.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DatatableBulk\", function() { return _datatable_bulk__WEBPACK_IMPORTED_MODULE_10__[\"DatatableBulk\"]; });\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack:///./js/modules/common/index.js?");

/***/ }),

/***/ "./js/modules/common/network.js":
/*!**************************************!*\
  !*** ./js/modules/common/network.js ***!
  \**************************************/
/*! exports provided: get, getJson, postBare, post, postJson, ensureCSS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"get\", function() { return get; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getJson\", function() { return getJson; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"postBare\", function() { return postBare; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"post\", function() { return post; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"postJson\", function() { return postJson; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ensureCSS\", function() { return ensureCSS; });\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/** Get cookie to set as part of the request header of all AJAX requests to the server.\n * @param name The name of the token to look for in the cookie.\n */\nvar getCookie = function getCookie(name) {\n  if (!document.cookie || document.cookie === '') {\n    return null;\n  }\n\n  var cookie = document.cookie.split(';').map(function (cookie) {\n    return cookie.trim();\n  }).find(function (cookie) {\n    if (cookie.substring(0, name.length + 1) == name + '=') {\n      return true;\n    } else {\n      return false;\n    }\n  });\n\n  if (cookie) {\n    return decodeURIComponent(cookie.substring(name.length + 1));\n  }\n\n  return null;\n};\n\nvar getCsrfToken = function getCsrfToken() {\n  return getCookie('csrftoken');\n};\n/* from https://www.tjvantoll.com/2015/09/13/fetch-and-errors/ */\n\n\nvar handleFetchErrors = function handleFetchErrors(response) {\n  if (!response.ok) {\n    throw response;\n  }\n\n  return response;\n};\n\nvar get = function get(url) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var csrfToken = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if (!csrfToken) {\n    csrfToken = getCsrfToken(); // Won't work in web worker.\n  }\n\n  var queryString = Object.keys(params).map(function (key) {\n    return \"\".concat(encodeURIComponent(key), \"=\").concat(encodeURIComponent(params[key]));\n  }).join('&');\n\n  if (queryString.length) {\n    url = \"\".concat(url, \"?\").concat(queryString);\n  }\n\n  return fetch(url, {\n    method: \"GET\",\n    headers: {\n      'X-CSRFToken': csrfToken,\n      'Accept': 'application/json',\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    credentials: 'include'\n  }).then(handleFetchErrors);\n};\nvar getJson = function getJson(url) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var csrfToken = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return get(url, params, csrfToken).then(function (response) {\n    return response.json();\n  });\n};\nvar postBare = function postBare(url) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var csrfToken = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if (!csrfToken) {\n    csrfToken = getCsrfToken(); // Won't work in web worker.\n  }\n\n  var body = new FormData();\n  body.append('csrfmiddlewaretoken', csrfToken);\n  Object.keys(params).forEach(function (key) {\n    var value = params[key];\n\n    if (_typeof(value) === \"object\" && value.file && value.filename) {\n      body.append(key, value.file, value.filename);\n    } else if (Array.isArray(value)) {\n      value.forEach(function (item) {\n        return body.append(\"\".concat(key, \"[]\"), item);\n      });\n    } else {\n      body.append(key, value);\n    }\n  });\n  return fetch(url, {\n    method: \"POST\",\n    headers: {\n      'X-CSRFToken': csrfToken,\n      'Accept': 'application/json',\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    credentials: 'include',\n    body: body\n  });\n};\nvar post = function post(url) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var csrfToken = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return postBare(url, params, csrfToken).then(handleFetchErrors);\n}; // post and then return json and status\n\nvar postJson = function postJson(url) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var csrfToken = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return post(url, params, csrfToken).then(function (response) {\n    return response.json().then(function (json) {\n      return {\n        json: json,\n        status: response.status\n      };\n    });\n  });\n};\nvar ensureCSS = function ensureCSS(cssUrl, staticUrl) {\n  if (_typeof(cssUrl) === 'object') {\n    cssUrl.forEach(function (url) {\n      return ensureCSS(url, staticUrl);\n    });\n    return;\n  }\n\n  var url = \"\".concat(staticUrl, \"css/\").concat(cssUrl, \"?v=\").concat(1563278625),\n      link = document.createElement(\"link\");\n  link.rel = \"stylesheet\";\n  link.href = url;\n  var styleSheet = Array.from(document.styleSheets).find(function (styleSheet) {\n    return styleSheet.href === link.href;\n  });\n\n  if (!styleSheet) {\n    document.head.appendChild(link);\n    return true;\n  }\n\n  return false;\n};\n\n//# sourceURL=webpack:///./js/modules/common/network.js?");

/***/ }),

/***/ "./js/modules/common/overview_menu.js":
/*!********************************************!*\
  !*** ./js/modules/common/overview_menu.js ***!
  \********************************************/
/*! exports provided: OverviewMenuView */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OverviewMenuView\", function() { return OverviewMenuView; });\n/* harmony import */ var diff_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! diff-dom */ \"./node_modules/diff-dom/src/index.js\");\n/* harmony import */ var _basic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./basic */ \"./js/modules/common/basic.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar OverviewMenuView =\n/*#__PURE__*/\nfunction () {\n  function OverviewMenuView(overview, model) {\n    _classCallCheck(this, OverviewMenuView);\n\n    this.overview = overview;\n    this.model = model();\n    this.dd = new diff_dom__WEBPACK_IMPORTED_MODULE_0__[\"DiffDOM\"]({\n      valueDiffing: false\n    });\n    this.openedMenu = false;\n    this.listeners = {};\n  }\n\n  _createClass(OverviewMenuView, [{\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n\n      Object(_basic__WEBPACK_IMPORTED_MODULE_1__[\"whenReady\"])().then(function () {\n        return _this.bindEvents();\n      });\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      var _this2 = this;\n\n      this.menuEl = document.getElementById('fw-overview-menu');\n\n      this.listeners.onclick = function (event) {\n        return _this2.onclick(event);\n      };\n\n      document.body.addEventListener('click', this.listeners.onclick);\n\n      this.listeners.oninput = function (event) {\n        return _this2.oninput(event);\n      };\n\n      document.body.addEventListener('input', this.listeners.oninput);\n      this.update();\n    }\n  }, {\n    key: \"oninput\",\n    value: function oninput(event) {\n      var target = event.target;\n\n      if (target.matches('#fw-overview-menu > li > .fw-button > input')) {\n        // A text was enetered in a top entry. we find which one.\n        var menuNumber = 0;\n        var seekItem = target.closest('li');\n\n        while (seekItem.previousElementSibling) {\n          menuNumber++;\n          seekItem = seekItem.previousElementSibling;\n        }\n\n        var menuItem = this.model.content[menuNumber];\n\n        if (menuItem.input) {\n          menuItem.input(this.overview, target.value);\n        }\n      }\n    }\n  }, {\n    key: \"onclick\",\n    value: function onclick(event) {\n      var target = event.target;\n\n      if (target.matches('#fw-overview-menu li li, #fw-overview-menu li li *')) {\n        event.preventDefault();\n        var itemNumber = 0;\n        var seekItem = target.closest('li');\n\n        while (seekItem.previousElementSibling) {\n          itemNumber++;\n          seekItem = seekItem.previousElementSibling;\n        }\n\n        var menuNumber = 0;\n        seekItem = seekItem.parentElement.parentElement.parentElement;\n\n        while (seekItem.previousElementSibling) {\n          menuNumber++;\n          seekItem = seekItem.previousElementSibling;\n        }\n\n        this.model.content[menuNumber].content[itemNumber].action(this.overview);\n        this.model.content[menuNumber].open = false;\n\n        if (this.model.content[menuNumber].type === 'dropdown') {\n          this.model.content[menuNumber].title = this.model.content[menuNumber].content[itemNumber].title;\n          this.openedMenu = false;\n          this.update();\n        }\n\n        return false;\n      } else if (target.matches('#fw-overview-menu li .select-action input[type=checkbox]')) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        event.stopPropagation(); // A toolbar dropdown menu item was clicked. We just need to\n        // find out which one\n\n        var _menuNumber = 0;\n\n        var _seekItem = target.closest('li');\n\n        while (_seekItem.previousElementSibling) {\n          _menuNumber++;\n          _seekItem = _seekItem.previousElementSibling;\n        }\n\n        var menuItem = this.model.content[_menuNumber];\n\n        if (menuItem.checked === true) {\n          menuItem.checked = false;\n          menuItem.uncheckAction(this.overview);\n        } else {\n          menuItem.checked = true;\n          menuItem.checkAction(this.overview);\n        }\n\n        return true;\n      } else if (target.matches('#fw-overview-menu li, #fw-overview-menu li *')) {\n        // A toolbar dropdown menu item was clicked. We just need to\n        // find out which one\n        var _menuNumber2 = 0;\n\n        var _seekItem2 = target.closest('li');\n\n        while (_seekItem2.previousElementSibling) {\n          _menuNumber2++;\n          _seekItem2 = _seekItem2.previousElementSibling;\n        }\n\n        var _menuItem = this.model.content[_menuNumber2]; // if it is a dropdown menu, open it. Otherwise execute an\n        // associated action.\n\n        if (['dropdown', 'select-action-dropdown'].includes(_menuItem.type)) {\n          event.preventDefault();\n\n          if (this.openedMenu === _menuNumber2) {\n            this.model.content[this.openedMenu].open = false;\n            this.openedMenu = false;\n          } else {\n            if (this.openedMenu !== false) {\n              this.model.content[this.openedMenu].open = false;\n            }\n\n            _menuItem.open = true;\n            this.openedMenu = _menuNumber2;\n          }\n\n          this.update();\n        } else if (_menuItem.action) {\n          event.preventDefault();\n\n          _menuItem.action(this.overview);\n\n          if (this.openedMenu !== false) {\n            this.model.content[this.openedMenu].open = false;\n            this.openedMenu = false;\n          }\n\n          this.update();\n        }\n\n        return false;\n      } else if (this.openedMenu !== false) {\n        this.model.content[this.openedMenu].open = false;\n        this.openedMenu = false;\n        this.update();\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (!this.menuEl) {\n        // page has not yet been loaded. abort\n        return;\n      }\n\n      var diff = this.dd.diff(this.menuEl, this.getMenuHTML());\n      this.dd.apply(this.menuEl, diff);\n    }\n  }, {\n    key: \"getMenuHTML\",\n    value: function getMenuHTML() {\n      var _this3 = this;\n\n      return \"<ul id=\\\"fw-overview-menu\\\">\".concat(this.model.content.map(function (menuItem) {\n        return \"<li class=\\\"fw-overview-menu-item\".concat(menuItem.id ? \" \".concat(menuItem.id) : '', \" \").concat(menuItem.type, \"\\\">\").concat(_this3.getMenuItemHTML(menuItem), \"</li>\");\n      }).join(''), \"</ul>\");\n    }\n  }, {\n    key: \"getMenuItemHTML\",\n    value: function getMenuItemHTML(menuItem) {\n      var returnValue;\n\n      switch (menuItem.type) {\n        case 'dropdown':\n          returnValue = this.getDropdownHTML(menuItem);\n          break;\n\n        case 'select-action-dropdown':\n          returnValue = this.getSelectionActionDropdownHTML(menuItem);\n          break;\n\n        case 'text':\n          returnValue = this.getTextHTML(menuItem);\n          break;\n\n        case 'button':\n          returnValue = this.getButtonHTML(menuItem);\n          break;\n\n        case 'search':\n          returnValue = this.getSearchHTML(menuItem);\n          break;\n\n        default:\n          returnValue = '';\n          break;\n      }\n\n      return returnValue;\n    }\n  }, {\n    key: \"getSelectionActionDropdownHTML\",\n    value: function getSelectionActionDropdownHTML(menuItem) {\n      return \"\\n        <div class=\\\"select-action fw-button fw-light fw-large\\\">\\n            <input type=\\\"checkbox\\\" \".concat(menuItem.checked ? 'checked' : '', \">\\n            <span class=\\\"select-action-dropdown\\\"><i class=\\\"fa fa-caret-down\\\"></i></span>\\n        </div>\\n        \").concat(this.getDropdownListHTML(menuItem), \"\\n        \");\n    }\n  }, {\n    key: \"getDropdownHTML\",\n    value: function getDropdownHTML(menuItem) {\n      return \"\\n        <div class=\\\"dropdown fw-dropdown-menu\\\">\\n            <label>\".concat(menuItem.title ? Object(_basic__WEBPACK_IMPORTED_MODULE_1__[\"escapeText\"])(menuItem.title) : menuItem.content.length ? Object(_basic__WEBPACK_IMPORTED_MODULE_1__[\"escapeText\"])(menuItem.content[0].title) : '', \"</label>\\n            <span class=\\\"dropdown\\\"><i class=\\\"fa fa-caret-down\\\"></i></span>\\n        </div>\\n        \").concat(this.getDropdownListHTML(menuItem), \"\\n        \");\n    }\n  }, {\n    key: \"getDropdownListHTML\",\n    value: function getDropdownListHTML(menuItem) {\n      var _this4 = this;\n\n      if (menuItem.open) {\n        return \"<div class=\\\"fw-pulldown fw-left\\\" style=\\\"display: block;\\\"><ul>\".concat(menuItem.content.map(function (menuOption) {\n          return _this4.getDropdownOptionHTML(menuOption);\n        }).join(''), \"</ul></div>\");\n      } else {\n        return '';\n      }\n    }\n  }, {\n    key: \"getDropdownOptionHTML\",\n    value: function getDropdownOptionHTML(menuOption) {\n      return \"\\n        <li>\\n            <span class=\\\"fw-pulldown-item\\\">\\n                \".concat(Object(_basic__WEBPACK_IMPORTED_MODULE_1__[\"escapeText\"])(menuOption.title), \"\\n            </span>\\n        </li>\\n        \");\n    }\n  }, {\n    key: \"getButtonHTML\",\n    value: function getButtonHTML(menuItem) {\n      return \"\\n        <button class=\\\"fw-button fw-light fw-large\\\" title=\\\"\".concat(menuItem.title, \"\\\">\\n            \").concat(menuItem.title, \"\\n            \").concat(menuItem.icon ? \"<i class=\\\"fa fa-\".concat(menuItem.icon, \"\\\"></i>\") : '', \"\\n        </button>\");\n    }\n  }, {\n    key: \"getTextHTML\",\n    value: function getTextHTML(menuItem) {\n      return \"<button class=\\\"fw-text-menu\\\" title=\\\"\".concat(menuItem.title, \"\\\">\").concat(menuItem.title, \"</button>\");\n    }\n  }, {\n    key: \"getSearchHTML\",\n    value: function getSearchHTML(menuItem) {\n      return \"\\n        <div class=\\\"fw-button fw-white fw-large disabled\\\">\\n            <input type=\\\"text\\\" placeholder=\\\"\".concat(menuItem.title, \"\\\">\\n            \").concat(menuItem.icon ? \"<i class=\\\"fa fa-\".concat(menuItem.icon, \"\\\"></i>\") : '', \"\\n        </div>\");\n    }\n  }]);\n\n  return OverviewMenuView;\n}();\n\n//# sourceURL=webpack:///./js/modules/common/overview_menu.js?");

/***/ }),

/***/ "./js/modules/common/templates.js":
/*!****************************************!*\
  !*** ./js/modules/common/templates.js ***!
  \****************************************/
/*! exports provided: baseBodyTemplate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"baseBodyTemplate\", function() { return baseBodyTemplate; });\n/* harmony import */ var _user_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./user_util */ \"./js/modules/common/user_util.js\");\n\nvar baseBodyTemplate = function baseBodyTemplate(_ref) {\n  var user = _ref.user,\n      contents = _ref.contents,\n      staticUrl = _ref.staticUrl,\n      hasOverview = _ref.hasOverview;\n  return \"\\n<div id=\\\"wait\\\">\\n    <i class=\\\"fa fa-spinner fa-pulse\\\"></i>\\n</div>\\n<header class=\\\"fw-header\\\">\\n    <div class=\\\"fw-container\\\">\\n        <h1 class=\\\"fw-logo\\\"><span class=\\\"fw-logo-text\\\"></span><img src=\\\"\".concat(staticUrl, \"svg/icon.svg?v=\").concat(1563278625, \"\\\" /></h1>\\n        <nav id=\\\"header-nav\\\"></nav>\\n        <div id=\\\"user-preferences\\\" class=\\\"fw-user-preferences fw-header-text\\\">\\n            <div id=\\\"preferences-btn\\\" class=\\\"fw-button\\\">\\n                \").concat(user.avatar.html, \"\\n            </div>\\n            <div id=\\\"user-preferences-pulldown\\\" class=\\\"fw-pulldown fw-right\\\">\\n                <ul>\\n                    <li>\\n                        <a class=\\\"fw-pulldown-item\\\" href=\\\"/user/profile/\\\">\\n                            <span class=\\\"fw-avatar-card\\\">\\n                                <span class=\\\"fw-avatar-card-avatar\\\">\").concat(user.avatar.html, \"</span>\\n                                <span class=\\\"fw-avatar-card-name\\\">\\n                                    \").concat(user.username, \"\\n                                    <span class=\\\"fw-avatar-card-email\\\">\").concat(Object(_user_util__WEBPACK_IMPORTED_MODULE_0__[\"filterPrimaryEmail\"])(user.emails), \"</span>\\n                                </span>\\n                            </span>\\n                        </a>\\n                    </li>\\n                    <li>\\n                        <a class=\\\"fw-pulldown-item\\\" href=\\\"/user/team/\\\">\\n                            \").concat(gettext(\"Contacts\"), \"\\n                        </a>\\n                    </li>\\n                    <li>\\n                        <button class=\\\"fw-pulldown-item fw-logout-button\\\" type=\\\"submit\\\">\").concat(gettext(\"Log out\"), \"</button>\\n                    </li>\\n                </ul>\\n            </div>\\n        </div><!-- end user preference -->\\n    </div><!-- end container -->\\n</header>\\n<div class=\\\"fw-contents-outer\\\">\\n    \").concat(hasOverview ? \"<div class=\\\"fw-overview-menu-wrapper\\\"><ul id=\\\"fw-overview-menu\\\"></ul></div>\" : '', \"\\n    <div class=\\\"fw-contents\\\">\\n        \").concat(contents, \"\\n    </div>\\n</div>\");\n};\n\n//# sourceURL=webpack:///./js/modules/common/templates.js?");

/***/ }),

/***/ "./js/modules/common/user.js":
/*!***********************************!*\
  !*** ./js/modules/common/user.js ***!
  \***********************************/
/*! exports provided: setLanguage, getUserInfo, loginUser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setLanguage\", function() { return setLanguage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getUserInfo\", function() { return getUserInfo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loginUser\", function() { return loginUser; });\n/* harmony import */ var _network__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./network */ \"./js/modules/common/network.js\");\n\nvar setLanguage = function setLanguage(config, language) {\n  return Object(_network__WEBPACK_IMPORTED_MODULE_0__[\"post\"])('/api/i18n/setlang/', {\n    language: language\n  }).then(function () {\n    return window.location.reload();\n  });\n};\nvar getUserInfo = function getUserInfo() {\n  return Object(_network__WEBPACK_IMPORTED_MODULE_0__[\"postJson\"])('/api/user/info/');\n};\nvar loginUser = function loginUser(config, login, password, remember) {\n  return Object(_network__WEBPACK_IMPORTED_MODULE_0__[\"post\"])('/api/user/login/', {\n    login: login,\n    password: password,\n    remember: remember\n  }).then(function () {\n    config.loggedIn = true;\n  });\n};\n\n//# sourceURL=webpack:///./js/modules/common/user.js?");

/***/ }),

/***/ "./js/modules/common/user_util.js":
/*!****************************************!*\
  !*** ./js/modules/common/user_util.js ***!
  \****************************************/
/*! exports provided: filterPrimaryEmail */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"filterPrimaryEmail\", function() { return filterPrimaryEmail; });\n/** Creates a dropdown box.\n * @param btn The button to open and close the dropdown box.\n * @param box The node containing the contents of the dropdown box.\n * @param preopen An optional function to be called before opening the dropdown box. Used to position dropdown box.\n */\nvar filterPrimaryEmail = function filterPrimaryEmail(emails) {\n  var primaryEmails = emails.filter(function (email) {\n    return email.primary;\n  });\n\n  if (!primaryEmails.length) {\n    if (emails.length) {\n      return emails[0].address;\n    } else {\n      return '';\n    }\n  }\n\n  return primaryEmails[0].address;\n};\n\n//# sourceURL=webpack:///./js/modules/common/user_util.js?");

/***/ }),

/***/ "./js/modules/common/worker.js":
/*!*************************************!*\
  !*** ./js/modules/common/worker.js ***!
  \*************************************/
/*! exports provided: makeWorker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"makeWorker\", function() { return makeWorker; });\n/* allows cross domain web workers */\n\n/* Taken from https://benohead.com/cross-domain-cross-browser-web-workers/ */\nvar makeWorker = function makeWorker(workerUrl) {\n  var a = document.createElement('a');\n  a.href = workerUrl; // turn into absolute URL if needed.\n\n  var blob = new Blob([\"importScripts(\\\"\".concat(a.href, \"\\\")\")], {\n    \"type\": 'application/javascript'\n  }),\n      blobUrl = window.URL.createObjectURL(blob),\n      worker = new Worker(blobUrl);\n  return worker;\n};\n\n//# sourceURL=webpack:///./js/modules/common/worker.js?");

/***/ }),

/***/ "./js/modules/common/ws.js":
/*!*********************************!*\
  !*** ./js/modules/common/ws.js ***!
  \*********************************/
/*! exports provided: WebSocketConnector */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WebSocketConnector\", function() { return WebSocketConnector; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/* Sets up communicating with server (retrieving document, saving, collaboration, etc.).\n */\nvar WebSocketConnector =\n/*#__PURE__*/\nfunction () {\n  function WebSocketConnector(_ref) {\n    var _ref$url = _ref.url,\n        url = _ref$url === void 0 ? '' : _ref$url,\n        _ref$appLoaded = _ref.appLoaded,\n        appLoaded = _ref$appLoaded === void 0 ? function () {\n      return false;\n    } : _ref$appLoaded,\n        _ref$anythingToSend = _ref.anythingToSend,\n        anythingToSend = _ref$anythingToSend === void 0 ? function () {\n      return false;\n    } : _ref$anythingToSend,\n        _ref$messagesElement = _ref.messagesElement,\n        messagesElement = _ref$messagesElement === void 0 ? function () {\n      return false;\n    } : _ref$messagesElement,\n        _ref$initialMessage = _ref.initialMessage,\n        initialMessage = _ref$initialMessage === void 0 ? function () {\n      return {\n        type: 'subscribe'\n      };\n    } : _ref$initialMessage,\n        _ref$resubScribed = _ref.resubScribed,\n        resubScribed = _ref$resubScribed === void 0 ? function () {} : _ref$resubScribed,\n        _ref$restartMessage = _ref.restartMessage,\n        restartMessage = _ref$restartMessage === void 0 ? function () {\n      return {\n        type: 'restart'\n      };\n    } : _ref$restartMessage,\n        _ref$warningNotAllSen = _ref.warningNotAllSent,\n        warningNotAllSent = _ref$warningNotAllSen === void 0 ? gettext('Warning! Some data is unsaved') : _ref$warningNotAllSen,\n        _ref$infoDisconnected = _ref.infoDisconnected,\n        infoDisconnected = _ref$infoDisconnected === void 0 ? gettext('Disconnected. Attempting to reconnect...') : _ref$infoDisconnected,\n        _ref$receiveData = _ref.receiveData,\n        receiveData = _ref$receiveData === void 0 ? function (_data) {} : _ref$receiveData;\n\n    _classCallCheck(this, WebSocketConnector);\n\n    this.url = url;\n    this.appLoaded = appLoaded;\n    this.anythingToSend = anythingToSend;\n    this.messagesElement = messagesElement;\n    this.initialMessage = initialMessage;\n    this.resubScribed = resubScribed;\n    this.restartMessage = restartMessage;\n    this.warningNotAllSent = warningNotAllSent;\n    this.infoDisconnected = infoDisconnected;\n    this.receiveData = receiveData;\n    /* A list of messages to be sent. Only used when temporarily offline.\n    Messages will be sent when returning back online. */\n\n    this.messagesToSend = [];\n    /* A list of messages from a previous connection */\n\n    this.oldMessages = [];\n    this.connected = false;\n    /* Increases when connection has to be reestablished */\n\n    /* 0 = before first connection. */\n\n    /* 1 = first connection established, etc. */\n\n    this.connectionCount = 0;\n    this.recentlySent = false;\n  }\n\n  _createClass(WebSocketConnector, [{\n    key: \"init\",\n    value: function init() {\n      this.createWSConnection();\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this.ws) {\n        this.ws.onclose = function () {};\n\n        this.ws.close();\n      }\n    }\n  }, {\n    key: \"createWSConnection\",\n    value: function createWSConnection() {\n      var _this = this;\n\n      // Messages object used to ensure that data is received in right order.\n      this.messages = {\n        server: 0,\n        client: 0,\n        lastTen: []\n      };\n      this.ws = new window.WebSocket(this.url);\n\n      this.ws.onmessage = function (event) {\n        var data = JSON.parse(event.data);\n        var expectedServer = _this.messages.server + 1;\n\n        if (data.type === 'request_resend') {\n          _this.resend_messages(data.from);\n        } else if (data.s < expectedServer) {\n          // Receive a message already received at least once. Ignore.\n          return;\n        } else if (data.s > expectedServer) {\n          // Messages from the server have been lost.\n          // Request resend.\n          _this.ws.send(JSON.stringify({\n            type: 'request_resend',\n            from: _this.messages.server\n          }));\n        } else {\n          _this.messages.server = expectedServer;\n\n          if (data.c === _this.messages.client) {\n            _this.receive(data);\n          } else if (data.c < _this.messages.client) {\n            // We have received all server messages, but the server seems\n            // to have missed some of the client's messages. They could\n            // have been sent simultaneously.\n            // The server wins over the client in this case.\n            var clientDifference = _this.messages.client - data.c;\n            _this.messages.client = data.c;\n\n            if (clientDifference > _this.messages.lastTen.length) {\n              // We cannot fix the situation\n              _this.send(_this.restartMessage);\n\n              return;\n            }\n\n            _this.messages['lastTen'].slice(0 - clientDifference).forEach(function (data) {\n              _this.messages.client += 1;\n              data.c = _this.messages.client;\n              data.s = _this.messages.server;\n\n              _this.ws.send(JSON.stringify(data));\n            });\n\n            _this.receive(data);\n          }\n        }\n      };\n\n      this.ws.onclose = function () {\n        _this.connected = false;\n        window.setTimeout(function () {\n          _this.createWSConnection();\n        }, 2000);\n\n        if (!_this.appLoaded()) {\n          // doc not initiated\n          return;\n        }\n\n        var messagesElement = _this.messagesElement();\n\n        if (messagesElement) {\n          if (_this.anythingToSend()) {\n            messagesElement.innerHTML = \"<span class=\\\"warn\\\">\".concat(_this.warningNotAllSent, \"</span>\");\n          } else {\n            messagesElement.innerHTML = _this.infoDisconnected;\n          }\n        }\n      };\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      var messagesElement = this.messagesElement();\n\n      if (messagesElement) {\n        messagesElement.innerHTML = '';\n      }\n\n      this.connected = true;\n      var message = this.initialMessage();\n      this.connectionCount++;\n      this.oldMessages = this.messagesToSend;\n      this.messagesToSend = [];\n      this.send(function () {\n        return message;\n      });\n    }\n  }, {\n    key: \"subscribed\",\n    value: function subscribed() {\n      if (this.connectionCount > 1) {\n        this.resubScribed();\n\n        while (this.oldMessages.length > 0) {\n          this.send(this.oldMessages.shift());\n        }\n      }\n    }\n    /** Sends data to server or keeps it in a list if currently offline. */\n\n  }, {\n    key: \"send\",\n    value: function send(getData) {\n      var timer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 80;\n\n      if (this.connected && !this.recentlySent) {\n        var data = getData();\n\n        if (!data) {\n          // message is empty\n          return;\n        }\n\n        this.messages.client += 1;\n        data.c = this.messages.client;\n        data.s = this.messages.server;\n        this.messages.lastTen.push(data);\n        this.messages.lastTen = this.messages['lastTen'].slice(-10);\n        this.ws.send(JSON.stringify(data));\n        this.setRecentlySentTimer(timer);\n      } else {\n        this.messagesToSend.push(getData);\n      }\n    }\n  }, {\n    key: \"setRecentlySentTimer\",\n    value: function setRecentlySentTimer(timer) {\n      var _this2 = this;\n\n      this.recentlySent = true;\n      window.setTimeout(function () {\n        _this2.recentlySent = false;\n        var oldMessages = _this2.messagesToSend;\n        _this2.messagesToSend = [];\n\n        while (oldMessages.length > 0) {\n          var getData = oldMessages.shift();\n\n          _this2.send(getData, Math.min(timer * 1.2, 10000));\n        }\n      }, timer);\n    }\n  }, {\n    key: \"resend_messages\",\n    value: function resend_messages(from) {\n      var _this3 = this;\n\n      var toSend = this.messages.client - from;\n      this.messages.client = from;\n\n      if (toSend > this.messages.lastTen.length) {\n        // Too many messages requested. Abort.\n        this.send(this.restartMessage);\n        return;\n      }\n\n      this.messages.lastTen.slice(0 - toSend).forEach(function (data) {\n        _this3.messages.client += 1;\n        data.c = _this3.messages.client;\n        data.s = _this3.messages.server;\n\n        _this3.ws.send(JSON.stringify(data));\n      });\n    }\n  }, {\n    key: \"receive\",\n    value: function receive(data) {\n      switch (data.type) {\n        case 'welcome':\n          this.open();\n          break;\n\n        case 'subscribed':\n          this.subscribed();\n          break;\n\n        case 'access_denied':\n          window.location.href = '/';\n          break;\n\n        default:\n          this.receiveData(data);\n          break;\n      }\n    }\n  }]);\n\n  return WebSocketConnector;\n}();\n\n//# sourceURL=webpack:///./js/modules/common/ws.js?");

/***/ }),

/***/ "./node_modules/diff-dom/src/TraceLogger.js":
/*!**************************************************!*\
  !*** ./node_modules/diff-dom/src/TraceLogger.js ***!
  \**************************************************/
/*! exports provided: TraceLogger */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TraceLogger\", function() { return TraceLogger; });\n/**\n * Use TraceLogger to figure out function calls inside\n * JS objects by wrapping an object with a TraceLogger\n * instance.\n *\n * Pretty-prints the call trace (using unicode box code)\n * when tracelogger.toString() is called.\n */\n\n/**\n * Wrap an object by calling new TraceLogger(obj)\n *\n * If you're familiar with Python decorators, this\n * does roughly the same thing, adding pre/post\n * call hook logging calls so that you can see\n * what's going on.\n */\nclass TraceLogger {\n    constructor(obj = {}) {\n        this.pad = \"│   \"\n        this.padding = \"\"\n        this.tick = 1\n        this.messages = []\n        const wrapkey = (obj, key) => {\n            // trace this function\n            const oldfn = obj[key]\n            obj[key] = (...args) => {\n                this.fin(key, Array.prototype.slice.call(args))\n                const result = oldfn.apply(obj, args)\n                this.fout(key, result)\n                return result\n            }\n        }\n        // can't use Object.keys for prototype walking\n        for (let key in obj) {\n            if (typeof obj[key] === \"function\") {\n                wrapkey(obj, key)\n            }\n        }\n        this.log(\"┌ TRACELOG START\")\n    }\n    // called when entering a function\n    fin(fn, args) {\n        this.padding += this.pad\n        this.log(`├─> entering ${fn}`, args)\n    }\n    // called when exiting a function\n    fout(fn, result) {\n        this.log(\"│<──┘ generated return value\", result)\n        this.padding = this.padding.substring(0, this.padding.length - this.pad.length)\n    }\n    // log message formatting\n    format(s, tick) {\n        let nf = function(t) {\n            t = `${t}`\n            while (t.length < 4) {\n                t = `0${t}`\n            }\n            return t\n        }\n        return `${nf(tick)}> ${this.padding}${s}`\n    }\n    // log a trace message\n    log() {\n        let s = Array.prototype.slice.call(arguments)\n        const stringCollapse = function(v) {\n            if (!v) {\n                return \"<falsey>\"\n            }\n            if (typeof v === \"string\") {\n                return v\n            }\n            if (v instanceof HTMLElement) {\n                return v.outerHTML || \"<empty>\"\n            }\n            if (v instanceof Array) {\n                return `[${v.map(stringCollapse).join(\",\")}]`\n            }\n            return v.toString() || v.valueOf() || \"<unknown>\"\n        }\n        s = s.map(stringCollapse).join(\", \")\n        this.messages.push(this.format(s, this.tick++))\n    }\n    // turn the log into a structured string with\n    // unicode box codes to make it a sensible trace.\n    toString() {\n        let cap = \"×   \"\n        let terminator = \"└───\"\n        while (terminator.length <= this.padding.length + this.pad.length) {\n            terminator += cap\n        }\n        let _ = this.padding\n        this.padding = \"\"\n        terminator = this.format(terminator, this.tick)\n        this.padding = _\n        return `${this.messages.join(\"\\n\")}\\n${terminator}`\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/diff-dom/src/TraceLogger.js?");

/***/ }),

/***/ "./node_modules/diff-dom/src/diffDOM/dom/apply.js":
/*!********************************************************!*\
  !*** ./node_modules/diff-dom/src/diffDOM/dom/apply.js ***!
  \********************************************************/
/*! exports provided: applyDiff, applyDOM */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"applyDiff\", function() { return applyDiff; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"applyDOM\", function() { return applyDOM; });\n/* harmony import */ var _fromVirtual__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fromVirtual */ \"./node_modules/diff-dom/src/diffDOM/dom/fromVirtual.js\");\n\n\n// ===== Apply a diff =====\n\nfunction getFromRoute(node, route) {\n    route = route.slice()\n    while (route.length > 0) {\n        if (!node.childNodes) {\n            return false\n        }\n        const c = route.splice(0, 1)[0]\n        node = node.childNodes[c]\n    }\n    return node\n}\n\nfunction applyDiff(\n        tree,\n        diff,\n        options // {preDiffApply, postDiffApply, textDiff, valueDiffing, _const}\n    ) {\n    let node = getFromRoute(tree, diff[options._const.route])\n    let newNode\n    let reference\n    let route\n    let nodeArray\n    let c\n\n    // pre-diff hook\n    const info = {\n        diff,\n        node\n    }\n\n    if (options.preDiffApply(info)) {\n        return true\n    }\n\n    switch (diff[options._const.action]) {\n        case options._const.addAttribute:\n            if (!node || !node.setAttribute) {\n                return false\n            }\n            node.setAttribute(diff[options._const.name], diff[options._const.value])\n            break\n        case options._const.modifyAttribute:\n            if (!node || !node.setAttribute) {\n                return false\n            }\n            node.setAttribute(diff[options._const.name], diff[options._const.newValue])\n            if (node.nodeName === 'INPUT' && diff[options._const.name] === 'value') {\n                node.value = diff[options._const.newValue]\n            }\n            break\n        case options._const.removeAttribute:\n            if (!node || !node.removeAttribute) {\n                return false\n            }\n            node.removeAttribute(diff[options._const.name])\n            break\n        case options._const.modifyTextElement:\n            if (!node || node.nodeType !== 3) {\n                return false\n            }\n            options.textDiff(node, node.data, diff[options._const.oldValue], diff[options._const.newValue])\n            break\n        case options._const.modifyValue:\n            if (!node || typeof node.value === 'undefined') {\n                return false\n            }\n            node.value = diff[options._const.newValue]\n            break\n        case options._const.modifyComment:\n            if (!node || typeof node.data === 'undefined') {\n                return false\n            }\n            options.textDiff(node, node.data, diff[options._const.oldValue], diff[options._const.newValue])\n            break\n        case options._const.modifyChecked:\n            if (!node || typeof node.checked === 'undefined') {\n                return false\n            }\n            node.checked = diff[options._const.newValue]\n            break\n        case options._const.modifySelected:\n            if (!node || typeof node.selected === 'undefined') {\n                return false\n            }\n            node.selected = diff[options._const.newValue]\n            break\n        case options._const.replaceElement:\n            node.parentNode.replaceChild(\n                Object(_fromVirtual__WEBPACK_IMPORTED_MODULE_0__[\"objToNode\"])(\n                    diff[options._const.newValue],\n                    node.namespaceURI === 'http://www.w3.org/2000/svg',\n                    options\n                ),\n                node\n            )\n            break\n        case options._const.relocateGroup:\n            nodeArray = Array(...new Array(diff.groupLength)).map(() => node.removeChild(node.childNodes[diff[options._const.from]]))\n            nodeArray.forEach((childNode, index) => {\n                if (index === 0) {\n                    reference = node.childNodes[diff[options._const.to]]\n                }\n                node.insertBefore(childNode, reference || null)\n            })\n            break\n        case options._const.removeElement:\n            node.parentNode.removeChild(node)\n            break\n        case options._const.addElement:\n            route = diff[options._const.route].slice()\n            c = route.splice(route.length - 1, 1)[0]\n            node = getFromRoute(tree, route)\n            node.insertBefore(\n                Object(_fromVirtual__WEBPACK_IMPORTED_MODULE_0__[\"objToNode\"])(\n                    diff[options._const.element],\n                    node.namespaceURI === 'http://www.w3.org/2000/svg',\n                    options\n                ),\n                node.childNodes[c] || null\n            )\n            break\n        case options._const.removeTextElement:\n            if (!node || node.nodeType !== 3) {\n                return false\n            }\n            node.parentNode.removeChild(node)\n            break\n        case options._const.addTextElement:\n            route = diff[options._const.route].slice()\n            c = route.splice(route.length - 1, 1)[0]\n            newNode = options.document.createTextNode(diff[options._const.value])\n            node = getFromRoute(tree, route)\n            if (!node || !node.childNodes) {\n                return false\n            }\n            node.insertBefore(newNode, node.childNodes[c] || null)\n            break\n        default:\n            console.log('unknown action')\n    }\n\n    // if a new node was created, we might be interested in its\n    // post diff hook\n    info.newNode = newNode\n    options.postDiffApply(info)\n\n    return true\n}\n\nfunction applyDOM(tree, diffs, options) {\n    return diffs.every(diff => applyDiff(tree, diff, options))\n}\n\n\n//# sourceURL=webpack:///./node_modules/diff-dom/src/diffDOM/dom/apply.js?");

/***/ }),

/***/ "./node_modules/diff-dom/src/diffDOM/dom/fromVirtual.js":
/*!**************************************************************!*\
  !*** ./node_modules/diff-dom/src/diffDOM/dom/fromVirtual.js ***!
  \**************************************************************/
/*! exports provided: objToNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"objToNode\", function() { return objToNode; });\nfunction objToNode(objNode, insideSvg, options) {\n    let node\n    if (objNode.nodeName === '#text') {\n        node = options.document.createTextNode(objNode.data)\n\n    } else if (objNode.nodeName === '#comment') {\n        node = options.document.createComment(objNode.data)\n    } else {\n        if (objNode.nodeName === 'svg' || insideSvg) {\n            node = options.document.createElementNS('http://www.w3.org/2000/svg', objNode.nodeName)\n            insideSvg = true\n        } else {\n            node = options.document.createElement(objNode.nodeName)\n        }\n        if (objNode.attributes) {\n            Object.entries(objNode.attributes).forEach(([key, value]) => node.setAttribute(key, value))\n        }\n        if (objNode.childNodes) {\n            objNode.childNodes.forEach(childNode => node.appendChild(objToNode(childNode, insideSvg, options)))\n        }\n        if (options.valueDiffing) {\n            if (objNode.value) {\n                node.value = objNode.value\n            }\n            if (objNode.checked) {\n                node.checked = objNode.checked\n            }\n            if (objNode.selected) {\n                node.selected = objNode.selected\n            }\n        }\n    }\n    return node\n}\n\n\n//# sourceURL=webpack:///./node_modules/diff-dom/src/diffDOM/dom/fromVirtual.js?");

/***/ }),

/***/ "./node_modules/diff-dom/src/diffDOM/dom/index.js":
/*!********************************************************!*\
  !*** ./node_modules/diff-dom/src/diffDOM/dom/index.js ***!
  \********************************************************/
/*! exports provided: applyDOM, undoDOM */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _apply__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./apply */ \"./node_modules/diff-dom/src/diffDOM/dom/apply.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"applyDOM\", function() { return _apply__WEBPACK_IMPORTED_MODULE_0__[\"applyDOM\"]; });\n\n/* harmony import */ var _undo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./undo */ \"./node_modules/diff-dom/src/diffDOM/dom/undo.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"undoDOM\", function() { return _undo__WEBPACK_IMPORTED_MODULE_1__[\"undoDOM\"]; });\n\n\n\n\n\n//# sourceURL=webpack:///./node_modules/diff-dom/src/diffDOM/dom/index.js?");

/***/ }),

/***/ "./node_modules/diff-dom/src/diffDOM/dom/undo.js":
/*!*******************************************************!*\
  !*** ./node_modules/diff-dom/src/diffDOM/dom/undo.js ***!
  \*******************************************************/
/*! exports provided: undoDOM */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"undoDOM\", function() { return undoDOM; });\n/* harmony import */ var _apply__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./apply */ \"./node_modules/diff-dom/src/diffDOM/dom/apply.js\");\n\n\n// ===== Undo a diff =====\n\nfunction swap(obj, p1, p2) {\n    const tmp = obj[p1]\n    obj[p1] = obj[p2]\n    obj[p2] = tmp\n}\n\nfunction undoDiff(\n    tree,\n    diff,\n    options // {preDiffApply, postDiffApply, textDiff, valueDiffing, _const}\n) {\n\n    switch (diff[options._const.action]) {\n        case options._const.addAttribute:\n            diff[options._const.action] = options._const.removeAttribute\n            Object(_apply__WEBPACK_IMPORTED_MODULE_0__[\"applyDiff\"])(tree, diff, options)\n            break\n        case options._const.modifyAttribute:\n            swap(diff, options._const.oldValue, options._const.newValue)\n            Object(_apply__WEBPACK_IMPORTED_MODULE_0__[\"applyDiff\"])(tree, diff, options)\n            break\n        case options._const.removeAttribute:\n            diff[options._const.action] = options._const.addAttribute\n            Object(_apply__WEBPACK_IMPORTED_MODULE_0__[\"applyDiff\"])(tree, diff, options)\n            break\n        case options._const.modifyTextElement:\n            swap(diff, options._const.oldValue, options._const.newValue)\n            Object(_apply__WEBPACK_IMPORTED_MODULE_0__[\"applyDiff\"])(tree, diff, options)\n            break\n        case options._const.modifyValue:\n            swap(diff, options._const.oldValue, options._const.newValue)\n            Object(_apply__WEBPACK_IMPORTED_MODULE_0__[\"applyDiff\"])(tree, diff, options)\n            break\n        case options._const.modifyComment:\n            swap(diff, options._const.oldValue, options._const.newValue)\n            Object(_apply__WEBPACK_IMPORTED_MODULE_0__[\"applyDiff\"])(tree, diff, options)\n            break\n        case options._const.modifyChecked:\n            swap(diff, options._const.oldValue, options._const.newValue)\n            Object(_apply__WEBPACK_IMPORTED_MODULE_0__[\"applyDiff\"])(tree, diff, options)\n            break\n        case options._const.modifySelected:\n            swap(diff, options._const.oldValue, options._const.newValue)\n            Object(_apply__WEBPACK_IMPORTED_MODULE_0__[\"applyDiff\"])(tree, diff, options)\n            break\n        case options._const.replaceElement:\n            swap(diff, options._const.oldValue, options._const.newValue)\n            Object(_apply__WEBPACK_IMPORTED_MODULE_0__[\"applyDiff\"])(tree, diff, options)\n            break\n        case options._const.relocateGroup:\n            swap(diff, options._const.from, options._const.to)\n            Object(_apply__WEBPACK_IMPORTED_MODULE_0__[\"applyDiff\"])(tree, diff, options)\n            break\n        case options._const.removeElement:\n            diff[options._const.action] = options._const.addElement\n            Object(_apply__WEBPACK_IMPORTED_MODULE_0__[\"applyDiff\"])(tree, diff, options)\n            break\n        case options._const.addElement:\n            diff[options._const.action] = options._const.removeElement\n            Object(_apply__WEBPACK_IMPORTED_MODULE_0__[\"applyDiff\"])(tree, diff, options)\n            break\n        case options._const.removeTextElement:\n            diff[options._const.action] = options._const.addTextElement\n            Object(_apply__WEBPACK_IMPORTED_MODULE_0__[\"applyDiff\"])(tree, diff, options)\n            break\n        case options._const.addTextElement:\n            diff[options._const.action] = options._const.removeTextElement\n            Object(_apply__WEBPACK_IMPORTED_MODULE_0__[\"applyDiff\"])(tree, diff, options)\n            break\n        default:\n            console.log('unknown action')\n    }\n\n}\n\nfunction undoDOM(tree, diffs, options) {\n    if (!diffs.length) {\n        diffs = [diffs]\n    }\n    diffs = diffs.slice()\n    diffs.reverse()\n    diffs.forEach(diff => {\n        undoDiff(tree, diff, options)\n    })\n}\n\n\n//# sourceURL=webpack:///./node_modules/diff-dom/src/diffDOM/dom/undo.js?");

/***/ }),

/***/ "./node_modules/diff-dom/src/diffDOM/index.js":
/*!****************************************************!*\
  !*** ./node_modules/diff-dom/src/diffDOM/index.js ***!
  \****************************************************/
/*! exports provided: nodeToObj, stringToObj, DiffDOM */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DiffDOM\", function() { return DiffDOM; });\n/* harmony import */ var _dom_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom/index */ \"./node_modules/diff-dom/src/diffDOM/dom/index.js\");\n/* harmony import */ var _virtual_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./virtual/index */ \"./node_modules/diff-dom/src/diffDOM/virtual/index.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"nodeToObj\", function() { return _virtual_index__WEBPACK_IMPORTED_MODULE_1__[\"nodeToObj\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"stringToObj\", function() { return _virtual_index__WEBPACK_IMPORTED_MODULE_1__[\"stringToObj\"]; });\n\n\n\n\n\nconst DEFAULT_OPTIONS = {\n    debug: false,\n    diffcap: 10, // Limit for how many diffs are accepting when debugging. Inactive when debug is false.\n    maxDepth: false, // False or a numeral. If set to a numeral, limits the level of depth that the the diff mechanism looks for differences. If false, goes through the entire tree.\n    maxChildCount: 50, // False or a numeral. If set to a numeral, only does a simplified form of diffing of contents so that the number of diffs cannot be higher than the number of child nodes.\n    valueDiffing: true, // Whether to take into consideration the values of forms that differ from auto assigned values (when a user fills out a form).\n    // syntax: textDiff: function (node, currentValue, expectedValue, newValue)\n    textDiff(node, currentValue, expectedValue, newValue) {\n        node.data = newValue\n        return\n    },\n    // empty functions were benchmarked as running faster than both\n    // `f && f()` and `if (f) { f(); }`\n    preVirtualDiffApply() {},\n    postVirtualDiffApply() {},\n    preDiffApply() {},\n    postDiffApply() {},\n    filterOuterDiff: null,\n    compress: false, // Whether to work with compressed diffs\n    _const: false, // object with strings for every change types to be used in diffs.\n    document: window && window.document ? window.document : false\n}\n\n\nclass DiffDOM {\n    constructor(options = {}) {\n\n        this.options = options\n        // IE11 doesn't have Object.assign and buble doesn't translate object spreaders\n        // by default, so this is the safest way of doing it currently.\n        Object.entries(DEFAULT_OPTIONS).forEach(([key, value]) => {\n            if (!Object.prototype.hasOwnProperty.call(this.options, key)) {\n                this.options[key] = value\n            }\n        })\n\n        if (!this.options._const) {\n            const varNames = [\"addAttribute\", \"modifyAttribute\", \"removeAttribute\",\n                \"modifyTextElement\", \"relocateGroup\", \"removeElement\", \"addElement\",\n                \"removeTextElement\", \"addTextElement\", \"replaceElement\", \"modifyValue\",\n                \"modifyChecked\", \"modifySelected\", \"modifyComment\", \"action\", \"route\",\n                \"oldValue\", \"newValue\", \"element\", \"group\", \"from\", \"to\", \"name\",\n                \"value\", \"data\", \"attributes\", \"nodeName\", \"childNodes\", \"checked\",\n                \"selected\"\n            ]\n            this.options._const = {}\n            if (this.options.compress) {\n                varNames.forEach((varName, index) => this.options._const[varName] = index)\n            } else {\n                varNames.forEach(varName => this.options._const[varName] = varName)\n            }\n        }\n\n        this.DiffFinder = _virtual_index__WEBPACK_IMPORTED_MODULE_1__[\"DiffFinder\"]\n\n    }\n\n    apply(tree, diffs) {\n        return Object(_dom_index__WEBPACK_IMPORTED_MODULE_0__[\"applyDOM\"])(tree, diffs, this.options)\n    }\n\n    undo(tree, diffs) {\n        return Object(_dom_index__WEBPACK_IMPORTED_MODULE_0__[\"undoDOM\"])(tree, diffs, this.options)\n    }\n\n    diff(t1Node, t2Node) {\n        const finder = new this.DiffFinder(t1Node, t2Node, this.options)\n        return finder.init()\n    }\n\n}\n\n\n//# sourceURL=webpack:///./node_modules/diff-dom/src/diffDOM/index.js?");

/***/ }),

/***/ "./node_modules/diff-dom/src/diffDOM/virtual/apply.js":
/*!************************************************************!*\
  !*** ./node_modules/diff-dom/src/diffDOM/virtual/apply.js ***!
  \************************************************************/
/*! exports provided: applyVirtual */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"applyVirtual\", function() { return applyVirtual; });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers */ \"./node_modules/diff-dom/src/diffDOM/virtual/helpers.js\");\n\n\n// ===== Apply a virtual diff =====\n\nfunction getFromVirtualRoute(tree, route) {\n    let node = tree\n    let parentNode\n    let nodeIndex\n\n    route = route.slice()\n    while (route.length > 0) {\n        if (!node.childNodes) {\n            return false\n        }\n        nodeIndex = route.splice(0, 1)[0]\n        parentNode = node\n        node = node.childNodes[nodeIndex]\n    }\n    return {\n        node,\n        parentNode,\n        nodeIndex\n    }\n}\n\nfunction applyVirtualDiff(\n        tree,\n        diff,\n        options // {preDiffApply, postDiffApply, _const}\n    ) {\n    const routeInfo = getFromVirtualRoute(tree, diff[options._const.route])\n    let node = routeInfo.node\n    const parentNode = routeInfo.parentNode\n    const nodeIndex = routeInfo.nodeIndex\n    const newSubsets = []\n\n    // pre-diff hook\n    const info = {\n        diff,\n        node\n    }\n\n    if (options.preDiffApply(info)) {\n        return true\n    }\n\n    let newNode\n    let nodeArray\n    let route\n    let c\n    switch (diff[options._const.action]) {\n        case options._const.addAttribute:\n            if (!node.attributes) {\n                node.attributes = {}\n            }\n\n            node.attributes[diff[options._const.name]] = diff[options._const.value]\n\n            if (diff[options._const.name] === 'checked') {\n                node.checked = true\n            } else if (diff[options._const.name] === 'selected') {\n                node.selected = true\n            } else if (node.nodeName === 'INPUT' && diff[options._const.name] === 'value') {\n                node.value = diff[options._const.value]\n            }\n\n            break\n        case options._const.modifyAttribute:\n            node.attributes[diff[options._const.name]] = diff[options._const.newValue]\n            break\n        case options._const.removeAttribute:\n\n            delete node.attributes[diff[options._const.name]]\n\n            if (Object.keys(node.attributes).length === 0) {\n                delete node.attributes\n            }\n\n            if (diff[options._const.name] === 'checked') {\n                node.checked = false\n            } else if (diff[options._const.name] === 'selected') {\n                delete node.selected\n            } else if (node.nodeName === 'INPUT' && diff[options._const.name] === 'value') {\n                delete node.value\n            }\n\n            break\n        case options._const.modifyTextElement:\n            node.data = diff[options._const.newValue]\n            break\n        case options._const.modifyValue:\n            node.value = diff[options._const.newValue]\n            break\n        case options._const.modifyComment:\n            node.data = diff[options._const.newValue]\n            break\n        case options._const.modifyChecked:\n            node.checked = diff[options._const.newValue]\n            break\n        case options._const.modifySelected:\n            node.selected = diff[options._const.newValue]\n            break\n        case options._const.replaceElement:\n            newNode = Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[\"cloneObj\"])(diff[options._const.newValue])\n            newNode.outerDone = true\n            newNode.innerDone = true\n            newNode.valueDone = true\n            parentNode.childNodes[nodeIndex] = newNode\n            break\n        case options._const.relocateGroup:\n            nodeArray = node.childNodes.splice(diff[options._const.from], diff.groupLength).reverse()\n            nodeArray.forEach(movedNode => node.childNodes.splice(diff[options._const.to], 0, movedNode))\n            if (node.subsets) {\n                node.subsets.forEach(map => {\n                    if (diff[options._const.from] < diff[options._const.to] && map.oldValue <= diff[options._const.to] && map.oldValue > diff[options._const.from]) {\n                        map.oldValue -= diff.groupLength\n                        const splitLength = map.oldValue + map.length - diff[options._const.to]\n                        if (splitLength > 0) {\n                            // new insertion splits map.\n                            newSubsets.push({\n                                oldValue: diff[options._const.to] + diff.groupLength,\n                                newValue: map.newValue + map.length - splitLength,\n                                length: splitLength\n                            })\n                            map.length -= splitLength\n                        }\n                    } else if (diff[options._const.from] > diff[options._const.to] && map.oldValue > diff[options._const.to] && map.oldValue < diff[options._const.from]) {\n                        map.oldValue += diff.groupLength\n                        const splitLength = map.oldValue + map.length - diff[options._const.to]\n                        if (splitLength > 0) {\n                            // new insertion splits map.\n                            newSubsets.push({\n                                oldValue: diff[options._const.to] + diff.groupLength,\n                                newValue: map.newValue + map.length - splitLength,\n                                length: splitLength\n                            })\n                            map.length -= splitLength\n                        }\n                    } else if (map.oldValue === diff[options._const.from]) {\n                        map.oldValue = diff[options._const.to]\n                    }\n                })\n            }\n\n            break\n        case options._const.removeElement:\n            parentNode.childNodes.splice(nodeIndex, 1)\n            if (parentNode.subsets) {\n                parentNode.subsets.forEach(map => {\n                    if (map.oldValue > nodeIndex) {\n                        map.oldValue -= 1\n                    } else if (map.oldValue === nodeIndex) {\n                        map.delete = true\n                    } else if (map.oldValue < nodeIndex && (map.oldValue + map.length) > nodeIndex) {\n                        if (map.oldValue + map.length - 1 === nodeIndex) {\n                            map.length--\n                        } else {\n                            newSubsets.push({\n                                newValue: map.newValue + nodeIndex - map.oldValue,\n                                oldValue: nodeIndex,\n                                length: map.length - nodeIndex + map.oldValue - 1\n                            })\n                            map.length = nodeIndex - map.oldValue\n                        }\n                    }\n                })\n            }\n            node = parentNode\n            break\n        case options._const.addElement:\n            route = diff[options._const.route].slice()\n            c = route.splice(route.length - 1, 1)[0]\n            node = getFromVirtualRoute(tree, route).node\n            newNode = Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[\"cloneObj\"])(diff[options._const.element])\n            newNode.outerDone = true\n            newNode.innerDone = true\n            newNode.valueDone = true\n\n            if (!node.childNodes) {\n                node.childNodes = []\n            }\n\n            if (c >= node.childNodes.length) {\n                node.childNodes.push(newNode)\n            } else {\n                node.childNodes.splice(c, 0, newNode)\n            }\n            if (node.subsets) {\n                node.subsets.forEach(map => {\n                    if (map.oldValue >= c) {\n                        map.oldValue += 1\n                    } else if (map.oldValue < c && (map.oldValue + map.length) > c) {\n                        const splitLength = map.oldValue + map.length - c\n                        newSubsets.push({\n                            newValue: map.newValue + map.length - splitLength,\n                            oldValue: c + 1,\n                            length: splitLength\n                        })\n                        map.length -= splitLength\n                    }\n                })\n            }\n            break\n        case options._const.removeTextElement:\n            parentNode.childNodes.splice(nodeIndex, 1)\n            if (parentNode.nodeName === 'TEXTAREA') {\n                delete parentNode.value\n            }\n            if (parentNode.subsets) {\n                parentNode.subsets.forEach(map => {\n                    if (map.oldValue > nodeIndex) {\n                        map.oldValue -= 1\n                    } else if (map.oldValue === nodeIndex) {\n                        map.delete = true\n                    } else if (map.oldValue < nodeIndex && (map.oldValue + map.length) > nodeIndex) {\n                        if (map.oldValue + map.length - 1 === nodeIndex) {\n                            map.length--\n                        } else {\n                            newSubsets.push({\n                                newValue: map.newValue + nodeIndex - map.oldValue,\n                                oldValue: nodeIndex,\n                                length: map.length - nodeIndex + map.oldValue - 1\n                            })\n                            map.length = nodeIndex - map.oldValue\n                        }\n                    }\n                })\n            }\n            node = parentNode\n            break\n        case options._const.addTextElement:\n            route = diff[options._const.route].slice()\n            c = route.splice(route.length - 1, 1)[0]\n            newNode = {}\n            newNode.nodeName = '#text'\n            newNode.data = diff[options._const.value]\n            node = getFromVirtualRoute(tree, route).node\n            if (!node.childNodes) {\n                node.childNodes = []\n            }\n\n            if (c >= node.childNodes.length) {\n                node.childNodes.push(newNode)\n            } else {\n                node.childNodes.splice(c, 0, newNode)\n            }\n            if (node.nodeName === 'TEXTAREA') {\n                node.value = diff[options._const.newValue]\n            }\n            if (node.subsets) {\n                node.subsets.forEach(map => {\n                    if (map.oldValue >= c) {\n                        map.oldValue += 1\n                    }\n                    if (map.oldValue < c && (map.oldValue + map.length) > c) {\n                        const splitLength = map.oldValue + map.length - c\n                        newSubsets.push({\n                            newValue: map.newValue + map.length - splitLength,\n                            oldValue: c + 1,\n                            length: splitLength\n                        })\n                        map.length -= splitLength\n                    }\n                })\n            }\n            break\n        default:\n            console.log('unknown action')\n    }\n\n    if (node.subsets) {\n        node.subsets = node.subsets.filter(map => !map.delete && map.oldValue !== map.newValue)\n        if (newSubsets.length) {\n            node.subsets = node.subsets.concat(newSubsets)\n        }\n    }\n\n    // capture newNode for the callback\n    info.newNode = newNode\n    options.postDiffApply(info)\n\n    return\n}\n\nfunction applyVirtual(tree, diffs, options) {\n    diffs.forEach(diff => {\n        applyVirtualDiff(tree, diff, options)\n    })\n    return true\n}\n\n\n//# sourceURL=webpack:///./node_modules/diff-dom/src/diffDOM/virtual/apply.js?");

/***/ }),

/***/ "./node_modules/diff-dom/src/diffDOM/virtual/diff.js":
/*!***********************************************************!*\
  !*** ./node_modules/diff-dom/src/diffDOM/virtual/diff.js ***!
  \***********************************************************/
/*! exports provided: DiffFinder */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DiffFinder\", function() { return DiffFinder; });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers */ \"./node_modules/diff-dom/src/diffDOM/virtual/helpers.js\");\n/* harmony import */ var _apply__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./apply */ \"./node_modules/diff-dom/src/diffDOM/virtual/apply.js\");\n/* harmony import */ var _fromDOM__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fromDOM */ \"./node_modules/diff-dom/src/diffDOM/virtual/fromDOM.js\");\n/* harmony import */ var _fromString__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fromString */ \"./node_modules/diff-dom/src/diffDOM/virtual/fromString.js\");\n\n\n\n\n\n// ===== Create a diff =====\n\nclass DiffFinder {\n    constructor(t1Node, t2Node, options) {\n        this.options = options\n        this.t1 = (t1Node instanceof HTMLElement) ? Object(_fromDOM__WEBPACK_IMPORTED_MODULE_2__[\"nodeToObj\"])(t1Node, this.options) : (typeof t1Node === 'string') ? Object(_fromString__WEBPACK_IMPORTED_MODULE_3__[\"stringToObj\"])(t1Node, this.options) : JSON.parse(JSON.stringify(t1Node))\n        this.t2 = (t2Node instanceof HTMLElement) ? Object(_fromDOM__WEBPACK_IMPORTED_MODULE_2__[\"nodeToObj\"])(t2Node, this.options) : (typeof t2Node === 'string') ? Object(_fromString__WEBPACK_IMPORTED_MODULE_3__[\"stringToObj\"])(t2Node, this.options) : JSON.parse(JSON.stringify(t2Node))\n        this.diffcount = 0\n        this.foundAll = false\n        if (this.debug) {\n            this.t1Orig = Object(_fromDOM__WEBPACK_IMPORTED_MODULE_2__[\"nodeToObj\"])(t1Node, this.options)\n            this.t2Orig = Object(_fromDOM__WEBPACK_IMPORTED_MODULE_2__[\"nodeToObj\"])(t2Node, this.options)\n        }\n\n        this.tracker = new _helpers__WEBPACK_IMPORTED_MODULE_0__[\"DiffTracker\"]()\n    }\n\n    init() {\n        return this.findDiffs(this.t1, this.t2)\n    }\n\n    findDiffs(t1, t2) {\n        let diffs\n        do {\n            if (this.options.debug) {\n                this.diffcount += 1\n                if (this.diffcount > this.options.diffcap) {\n                    window.diffError = [this.t1Orig, this.t2Orig]\n                    throw new Error(`surpassed diffcap:${JSON.stringify(this.t1Orig)} -> ${JSON.stringify(this.t2Orig)}`)\n                }\n            }\n            diffs = this.findNextDiff(t1, t2, [])\n\n            if (diffs.length === 0) {\n                // Last check if the elements really are the same now.\n                // If not, remove all info about being done and start over.\n                // Sometimes a node can be marked as done, but the creation of subsequent diffs means that it has to be changed again.\n                if (!Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[\"isEqual\"])(t1, t2)) {\n                    if (this.foundAll) {\n                        console.error('Could not find remaining diffs!')\n                    } else {\n                        this.foundAll = true\n                        Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[\"removeDone\"])(t1)\n                        diffs = this.findNextDiff(t1, t2, [])\n                    }\n                }\n            }\n            if (diffs.length > 0) {\n                this.foundAll = false\n                this.tracker.add(diffs)\n                Object(_apply__WEBPACK_IMPORTED_MODULE_1__[\"applyVirtual\"])(t1, diffs, this.options)\n            }\n        } while (diffs.length > 0)\n\n        return this.tracker.list\n    }\n\n    findNextDiff(t1, t2, route) {\n        let diffs\n        let fdiffs\n\n        if (this.options.maxDepth && route.length > this.options.maxDepth) {\n            return []\n        }\n        // outer differences?\n        if (!t1.outerDone) {\n            diffs = this.findOuterDiff(t1, t2, route)\n            if (this.options.filterOuterDiff) {\n                fdiffs = this.options.filterOuterDiff(t1, t2, diffs)\n                if (fdiffs) diffs = fdiffs\n            }\n            if (diffs.length > 0) {\n                t1.outerDone = true\n                return diffs\n            } else {\n                t1.outerDone = true\n            }\n        }\n        // inner differences?\n        if (!t1.innerDone) {\n            diffs = this.findInnerDiff(t1, t2, route)\n            if (diffs.length > 0) {\n                return diffs\n            } else {\n                t1.innerDone = true\n            }\n        }\n\n        if (this.options.valueDiffing && !t1.valueDone) {\n            // value differences?\n            diffs = this.findValueDiff(t1, t2, route)\n\n            if (diffs.length > 0) {\n                t1.valueDone = true\n                return diffs\n            } else {\n                t1.valueDone = true\n            }\n        }\n\n        // no differences\n        return []\n    }\n\n    findOuterDiff(t1, t2, route) {\n        const diffs = []\n        let attr\n        let attr1\n        let attr2\n        let attrLength\n        let pos\n        let i\n        if (t1.nodeName !== t2.nodeName) {\n            if (!route.length) {\n                throw new Error('Top level nodes have to be of the same kind.')\n            }\n            return [new _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Diff\"]()\n                .setValue(this.options._const.action, this.options._const.replaceElement)\n                .setValue(this.options._const.oldValue, Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[\"cloneObj\"])(t1))\n                .setValue(this.options._const.newValue, Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[\"cloneObj\"])(t2))\n                .setValue(this.options._const.route, route)\n            ]\n        }\n        if (route.length && this.options.maxNodeDiffCount < Math.abs((t1.childNodes || []).length - (t2.childNodes || []).length)) {\n            return [new _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Diff\"]()\n                .setValue(this.options._const.action, this.options._const.replaceElement)\n                .setValue(this.options._const.oldValue, Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[\"cloneObj\"])(t1))\n                .setValue(this.options._const.newValue, Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[\"cloneObj\"])(t2))\n                .setValue(this.options._const.route, route)\n            ]\n        }\n\n        if (t1.data !== t2.data) {\n            // Comment or text node.\n            if (t1.nodeName === '#text') {\n                return [new _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Diff\"]()\n                    .setValue(this.options._const.action, this.options._const.modifyTextElement)\n                    .setValue(this.options._const.route, route)\n                    .setValue(this.options._const.oldValue, t1.data)\n                    .setValue(this.options._const.newValue, t2.data)\n                ]\n            } else {\n                return [new _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Diff\"]()\n                    .setValue(this.options._const.action, this.options._const.modifyComment)\n                    .setValue(this.options._const.route, route)\n                    .setValue(this.options._const.oldValue, t1.data)\n                    .setValue(this.options._const.newValue, t2.data)\n                ]\n            }\n\n        }\n\n        attr1 = t1.attributes ? Object.keys(t1.attributes).sort() : []\n        attr2 = t2.attributes ? Object.keys(t2.attributes).sort() : []\n\n        attrLength = attr1.length\n        for (i = 0; i < attrLength; i++) {\n            attr = attr1[i]\n            pos = attr2.indexOf(attr)\n            if (pos === -1) {\n                diffs.push(new _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Diff\"]()\n                    .setValue(this.options._const.action, this.options._const.removeAttribute)\n                    .setValue(this.options._const.route, route)\n                    .setValue(this.options._const.name, attr)\n                    .setValue(this.options._const.value, t1.attributes[attr])\n                )\n            } else {\n                attr2.splice(pos, 1)\n                if (t1.attributes[attr] !== t2.attributes[attr]) {\n                    diffs.push(new _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Diff\"]()\n                        .setValue(this.options._const.action, this.options._const.modifyAttribute)\n                        .setValue(this.options._const.route, route)\n                        .setValue(this.options._const.name, attr)\n                        .setValue(this.options._const.oldValue, t1.attributes[attr])\n                        .setValue(this.options._const.newValue, t2.attributes[attr])\n                    )\n                }\n            }\n        }\n\n        attrLength = attr2.length\n        for (i = 0; i < attrLength; i++) {\n            attr = attr2[i]\n            diffs.push(new _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Diff\"]()\n                .setValue(this.options._const.action, this.options._const.addAttribute)\n                .setValue(this.options._const.route, route)\n                .setValue(this.options._const.name, attr)\n                .setValue(this.options._const.value, t2.attributes[attr])\n            )\n        }\n\n        return diffs\n    }\n\n    findInnerDiff(t1, t2, route) {\n        const t1ChildNodes = t1.childNodes ? t1.childNodes.slice() : []\n        const t2ChildNodes = t2.childNodes ? t2.childNodes.slice() : []\n        const last = Math.max(t1ChildNodes.length, t2ChildNodes.length)\n        let childNodesLengthDifference = Math.abs(t1ChildNodes.length - t2ChildNodes.length)\n        let diffs = []\n        let index = 0\n        if (!this.options.maxChildCount || last < this.options.maxChildCount) {\n            const subtrees = t1.subsets && t1.subsetsAge-- ? t1.subsets : (t1.childNodes && t2.childNodes) ? Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[\"markSubTrees\"])(t1, t2) : []\n\n            if (subtrees.length > 0) {\n                /* One or more groups have been identified among the childnodes of t1\n                 * and t2.\n                 */\n                diffs = this.attemptGroupRelocation(t1, t2, subtrees, route)\n                if (diffs.length > 0) {\n                    return diffs\n                }\n            }\n        }\n\n\n        /* 0 or 1 groups of similar child nodes have been found\n         * for t1 and t2. 1 If there is 1, it could be a sign that the\n         * contents are the same. When the number of groups is below 2,\n         * t1 and t2 are made to have the same length and each of the\n         * pairs of child nodes are diffed.\n         */\n\n        for (let i = 0; i < last; i += 1) {\n            const e1 = t1ChildNodes[i]\n            const e2 = t2ChildNodes[i]\n\n            if (childNodesLengthDifference) {\n                /* t1 and t2 have different amounts of childNodes. Add\n                 * and remove as necessary to obtain the same length */\n                if (e1 && !e2) {\n                    if (e1.nodeName === '#text') {\n                        diffs.push(new _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Diff\"]()\n                            .setValue(this.options._const.action, this.options._const.removeTextElement)\n                            .setValue(this.options._const.route, route.concat(index))\n                            .setValue(this.options._const.value, e1.data)\n                        )\n                        index -= 1\n                    } else {\n                        diffs.push(new _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Diff\"]()\n                            .setValue(this.options._const.action, this.options._const.removeElement)\n                            .setValue(this.options._const.route, route.concat(index))\n                            .setValue(this.options._const.element, Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[\"cloneObj\"])(e1))\n                        )\n                        index -= 1\n                    }\n\n                } else if (e2 && !e1) {\n                    if (e2.nodeName === '#text') {\n                        diffs.push(new _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Diff\"]()\n                            .setValue(this.options._const.action, this.options._const.addTextElement)\n                            .setValue(this.options._const.route, route.concat(index))\n                            .setValue(this.options._const.value, e2.data)\n                        )\n                    } else {\n                        diffs.push(new _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Diff\"]()\n                            .setValue(this.options._const.action, this.options._const.addElement)\n                            .setValue(this.options._const.route, route.concat(index))\n                            .setValue(this.options._const.element, Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[\"cloneObj\"])(e2))\n                        )\n                    }\n                }\n            }\n            /* We are now guaranteed that childNodes e1 and e2 exist,\n             * and that they can be diffed.\n             */\n            /* Diffs in child nodes should not affect the parent node,\n             * so we let these diffs be submitted together with other\n             * diffs.\n             */\n\n            if (e1 && e2) {\n                if (!this.options.maxChildCount || last < this.options.maxChildCount) {\n                    diffs = diffs.concat(this.findNextDiff(e1, e2, route.concat(index)))\n                } else if (!Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[\"isEqual\"])(e1, e2)) {\n                    if (t1ChildNodes.length > t2ChildNodes.length) {\n                        diffs = diffs.concat([\n                            new _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Diff\"]()\n                                .setValue(this.options._const.action, this.options._const.removeElement)\n                                .setValue(this.options._const.element, Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[\"cloneObj\"])(e1))\n                                .setValue(this.options._const.route, route.concat(index))\n                        ])\n                        t1ChildNodes.splice(i, 1)\n                        index -= 1\n                        childNodesLengthDifference -= 1\n                    } else if (t1ChildNodes.length < t2ChildNodes.length) {\n                        diffs = diffs.concat([\n                            new _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Diff\"]()\n                                .setValue(this.options._const.action, this.options._const.addElement)\n                                .setValue(this.options._const.element, Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[\"cloneObj\"])(e2))\n                                .setValue(this.options._const.route, route.concat(index))\n                        ])\n                        t1ChildNodes.splice(i, 0, {})\n                        childNodesLengthDifference -= 1\n                    } else {\n                        diffs = diffs.concat([\n                            new _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Diff\"]()\n                                .setValue(this.options._const.action, this.options._const.replaceElement)\n                                .setValue(this.options._const.oldValue, Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[\"cloneObj\"])(e1))\n                                .setValue(this.options._const.newValue, Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[\"cloneObj\"])(e2))\n                                .setValue(this.options._const.route, route.concat(index))\n                        ])\n                    }\n\n                }\n\n            }\n            index += 1\n\n        }\n        t1.innerDone = true\n        return diffs\n    }\n\n    attemptGroupRelocation(t1, t2, subtrees, route) {\n        /* Either t1.childNodes and t2.childNodes have the same length, or\n         * there are at least two groups of similar elements can be found.\n         * attempts are made at equalizing t1 with t2. First all initial\n         * elements with no group affiliation (gaps=true) are removed (if\n         * only in t1) or added (if only in t2). Then the creation of a group\n         * relocation diff is attempted.\n         */\n        const gapInformation = Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[\"getGapInformation\"])(t1, t2, subtrees)\n        const gaps1 = gapInformation.gaps1\n        const gaps2 = gapInformation.gaps2\n        let shortest = Math.min(gaps1.length, gaps2.length)\n        let destinationDifferent\n        let toGroup\n        let group\n        let node\n        let similarNode\n        let testI\n        const diffs = []\n\n\n        for (let index2 = 0, index1 = 0; index2 < shortest; index1 += 1, index2 += 1) {\n            if (gaps1[index2] === true) {\n                node = t1.childNodes[index1]\n                if (node.nodeName === '#text') {\n                    if (t2.childNodes[index2].nodeName === '#text' && node.data !== t2.childNodes[index2].data) {\n                        testI = index1\n                        while (t1.childNodes.length > testI + 1 && t1.childNodes[testI + 1].nodeName === '#text') {\n                            testI += 1\n                            if (t2.childNodes[index2].data === t1.childNodes[testI].data) {\n                                similarNode = true\n                                break\n                            }\n                        }\n                        if (!similarNode) {\n                            diffs.push(new _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Diff\"]()\n                                .setValue(this.options._const.action, this.options._const.modifyTextElement)\n                                .setValue(this.options._const.route, route.concat(index2))\n                                .setValue(this.options._const.oldValue, node.data)\n                                .setValue(this.options._const.newValue, t2.childNodes[index2].data)\n                            )\n                            return diffs\n                        }\n                    }\n                    diffs.push(new _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Diff\"]()\n                        .setValue(this.options._const.action, this.options._const.removeTextElement)\n                        .setValue(this.options._const.route, route.concat(index2))\n                        .setValue(this.options._const.value, node.data)\n                    )\n                    gaps1.splice(index2, 1)\n                    shortest = Math.min(gaps1.length, gaps2.length)\n                    index2 -= 1\n                } else {\n                    diffs.push(new _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Diff\"]()\n                        .setValue(this.options._const.action, this.options._const.removeElement)\n                        .setValue(this.options._const.route, route.concat(index2))\n                        .setValue(this.options._const.element, Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[\"cloneObj\"])(node))\n                    )\n                    gaps1.splice(index2, 1)\n                    shortest = Math.min(gaps1.length, gaps2.length)\n                    index2 -= 1\n                }\n\n            } else if (gaps2[index2] === true) {\n                node = t2.childNodes[index2]\n                if (node.nodeName === '#text') {\n                    diffs.push(new _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Diff\"]()\n                        .setValue(this.options._const.action, this.options._const.addTextElement)\n                        .setValue(this.options._const.route, route.concat(index2))\n                        .setValue(this.options._const.value, node.data)\n                    )\n                    gaps1.splice(index2, 0, true)\n                    shortest = Math.min(gaps1.length, gaps2.length)\n                    index1 -= 1\n                } else {\n                    diffs.push(new _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Diff\"]()\n                        .setValue(this.options._const.action, this.options._const.addElement)\n                        .setValue(this.options._const.route, route.concat(index2))\n                        .setValue(this.options._const.element, Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[\"cloneObj\"])(node))\n                    )\n                    gaps1.splice(index2, 0, true)\n                    shortest = Math.min(gaps1.length, gaps2.length)\n                    index1 -= 1\n                }\n\n            } else if (gaps1[index2] !== gaps2[index2]) {\n                if (diffs.length > 0) {\n                    return diffs\n                }\n                // group relocation\n                group = subtrees[gaps1[index2]]\n                toGroup = Math.min(group.newValue, (t1.childNodes.length - group.length))\n                if (toGroup !== group.oldValue) {\n                    // Check whether destination nodes are different than originating ones.\n                    destinationDifferent = false\n                    for (let j = 0; j < group.length; j += 1) {\n                        if (!Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[\"roughlyEqual\"])(t1.childNodes[toGroup + j], t1.childNodes[group.oldValue + j], [], false, true)) {\n                            destinationDifferent = true\n                        }\n                    }\n                    if (destinationDifferent) {\n                        return [new _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Diff\"]()\n                            .setValue(this.options._const.action, this.options._const.relocateGroup)\n                            .setValue('groupLength', group.length)\n                            .setValue(this.options._const.from, group.oldValue)\n                            .setValue(this.options._const.to, toGroup)\n                            .setValue(this.options._const.route, route)\n                        ]\n                    }\n                }\n            }\n        }\n        return diffs\n    }\n\n    findValueDiff(t1, t2, route) {\n        // Differences of value. Only useful if the value/selection/checked value\n        // differs from what is represented in the DOM. For example in the case\n        // of filled out forms, etc.\n        const diffs = []\n\n        if (t1.selected !== t2.selected) {\n            diffs.push(new _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Diff\"]()\n                .setValue(this.options._const.action, this.options._const.modifySelected)\n                .setValue(this.options._const.oldValue, t1.selected)\n                .setValue(this.options._const.newValue, t2.selected)\n                .setValue(this.options._const.route, route)\n            )\n        }\n\n        if ((t1.value || t2.value) && t1.value !== t2.value && t1.nodeName !== 'OPTION') {\n            diffs.push(new _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Diff\"]()\n                .setValue(this.options._const.action, this.options._const.modifyValue)\n                .setValue(this.options._const.oldValue, t1.value || \"\")\n                .setValue(this.options._const.newValue, t2.value || \"\")\n                .setValue(this.options._const.route, route)\n            )\n        }\n        if (t1.checked !== t2.checked) {\n            diffs.push(new _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Diff\"]()\n                .setValue(this.options._const.action, this.options._const.modifyChecked)\n                .setValue(this.options._const.oldValue, t1.checked)\n                .setValue(this.options._const.newValue, t2.checked)\n                .setValue(this.options._const.route, route)\n            )\n        }\n\n        return diffs\n    }\n\n}\n\n\n//# sourceURL=webpack:///./node_modules/diff-dom/src/diffDOM/virtual/diff.js?");

/***/ }),

/***/ "./node_modules/diff-dom/src/diffDOM/virtual/fromDOM.js":
/*!**************************************************************!*\
  !*** ./node_modules/diff-dom/src/diffDOM/virtual/fromDOM.js ***!
  \**************************************************************/
/*! exports provided: nodeToObj */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"nodeToObj\", function() { return nodeToObj; });\nfunction nodeToObj(aNode, options = {}) {\n    const objNode = {}\n    objNode.nodeName = aNode.nodeName\n    if (objNode.nodeName === '#text' || objNode.nodeName === '#comment') {\n        objNode.data = aNode.data\n    } else {\n        if (aNode.attributes && aNode.attributes.length > 0) {\n            objNode.attributes = {}\n            const nodeArray = Array.prototype.slice.call(aNode.attributes)\n            nodeArray.forEach(attribute => objNode.attributes[attribute.name] = attribute.value)\n        }\n        if (objNode.nodeName === 'TEXTAREA') {\n            objNode.value = aNode.value\n        } else if (aNode.childNodes && aNode.childNodes.length > 0) {\n            objNode.childNodes = []\n            const nodeArray = Array.prototype.slice.call(aNode.childNodes)\n            nodeArray.forEach(childNode => objNode.childNodes.push(nodeToObj(childNode, options)))\n        }\n        if (options.valueDiffing) {\n            if (aNode.checked !== undefined && aNode.type && ['radio', 'checkbox'].includes(aNode.type.toLowerCase())) {\n                objNode.checked = aNode.checked\n            } else if (aNode.value !== undefined) {\n                objNode.value = aNode.value\n            }\n            if (aNode.selected !== undefined) {\n                objNode.selected = aNode.selected\n            }\n        }\n    }\n    return objNode\n}\n\n\n//# sourceURL=webpack:///./node_modules/diff-dom/src/diffDOM/virtual/fromDOM.js?");

/***/ }),

/***/ "./node_modules/diff-dom/src/diffDOM/virtual/fromString.js":
/*!*****************************************************************!*\
  !*** ./node_modules/diff-dom/src/diffDOM/virtual/fromString.js ***!
  \*****************************************************************/
/*! exports provided: stringToObj */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"stringToObj\", function() { return stringToObj; });\n// from html-parse-stringify (MIT)\n\nconst tagRE = /<(?:\"[^\"]*\"['\"]*|'[^']*'['\"]*|[^'\">])+>/g\n// re-used obj for quick lookups of components\nconst empty = Object.create ? Object.create(null) : {}\nconst attrRE = /([\\w-:]+)|(['\"])([^'\"]*)\\2/g\n\n// create optimized lookup object for\n// void elements as listed here:\n// http://www.w3.org/html/wg/drafts/html/master/syntax.html#void-elements\nconst lookup = {\n    area: true,\n    base: true,\n    br: true,\n    col: true,\n    embed: true,\n    hr: true,\n    img: true,\n    input: true,\n    keygen: true,\n    link: true,\n    menuItem: true,\n    meta: true,\n    param: true,\n    source: true,\n    track: true,\n    wbr: true\n}\n\nfunction parseTag(tag) {\n    let i = 0\n    let key\n    const res = {\n        nodeName: ''\n    }\n\n    tag.replace(attrRE, match => {\n        if (i % 2) {\n            key = match\n        } else if (i === 0) {\n                if (lookup[match] || tag.charAt(tag.length - 2) === '/') {\n                    res.voidElement = true\n                }\n                res.nodeName = match.toUpperCase()\n            } else {\n                if (!res.attributes) {\n                    res.attributes = {}\n                }\n                res.attributes[key] = match.replace(/^['\"]|['\"]$/g, '')\n            }\n        i++\n    })\n\n    return res\n}\n\n\nfunction parse(\n    html,\n    options = {components: empty}\n) {\n    const result = []\n    let current\n    let level = -1\n    const arr = []\n    const byTag = {}\n    let inComponent = false\n\n    html.replace(tagRE, (tag, index) => {\n        if (inComponent) {\n            if (tag !== (`</${current.nodeName}>`)) {\n                return\n            } else {\n                inComponent = false\n            }\n        }\n        const isOpen = tag.charAt(1) !== '/'\n        const start = index + tag.length\n        const nextChar = html.charAt(start)\n        let parent\n\n        if (isOpen) {\n            level++\n\n            current = parseTag(tag)\n            if (current.type === 'tag' && options.components[current.nodeName]) {\n                current.type = 'component'\n                inComponent = true\n            }\n\n            if (!current.voidElement && !inComponent && nextChar && nextChar !== '<') {\n                if (!current.childNodes) {\n                    current.childNodes = []\n                }\n                current.childNodes.push({\n                    nodeName: '#text',\n                    data: html.slice(start, html.indexOf('<', start))\n                })\n            }\n\n            byTag[current.tagName] = current\n\n            // if we're at root, push new base node\n            if (level === 0) {\n                result.push(current)\n            }\n\n            parent = arr[level - 1]\n\n            if (parent) {\n                if (!parent.childNodes) {\n                    parent.childNodes = []\n                }\n                parent.childNodes.push(current)\n            }\n\n            arr[level] = current\n        }\n\n        if (!isOpen || current.voidElement) {\n            level--\n            if (!inComponent && nextChar !== '<' && nextChar) {\n                // trailing text node\n                // if we're at the root, push a base text node. otherwise add as\n                // a child to the current node.\n                parent = level === -1 ? result : arr[level].childNodes || []\n\n                // calculate correct end of the data slice in case there's\n                // no tag after the text node.\n                const end = html.indexOf('<', start)\n                const data = html.slice(start, end === -1 ? undefined : end)\n                parent.push({\n                    nodeName: '#text',\n                    data\n                })\n            }\n        }\n    })\n\n    return result[0]\n}\n\nfunction cleanObj(obj) {\n    delete obj.voidElement\n    if (obj.childNodes) {\n        obj.childNodes.forEach(child => cleanObj(child))\n    }\n    return obj\n}\n\nfunction stringToObj(string) {\n   return cleanObj(parse(string))\n}\n\n\n//# sourceURL=webpack:///./node_modules/diff-dom/src/diffDOM/virtual/fromString.js?");

/***/ }),

/***/ "./node_modules/diff-dom/src/diffDOM/virtual/helpers.js":
/*!**************************************************************!*\
  !*** ./node_modules/diff-dom/src/diffDOM/virtual/helpers.js ***!
  \**************************************************************/
/*! exports provided: Diff, removeDone, isEqual, roughlyEqual, cloneObj, getGapInformation, markSubTrees, DiffTracker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Diff\", function() { return Diff; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeDone\", function() { return removeDone; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isEqual\", function() { return isEqual; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"roughlyEqual\", function() { return roughlyEqual; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cloneObj\", function() { return cloneObj; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getGapInformation\", function() { return getGapInformation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"markSubTrees\", function() { return markSubTrees; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DiffTracker\", function() { return DiffTracker; });\nclass Diff {\n    constructor(options = {}) {\n        Object.entries(options).forEach(([key, value]) => this[key] = value)\n    }\n\n    toString() {\n        return JSON.stringify(this)\n    }\n\n    setValue(aKey, aValue) {\n        this[aKey] = aValue\n        return this\n    }\n}\n\nfunction elementDescriptors(el) {\n    const output = []\n    if (el.nodeName !== '#text' && el.nodeName !== '#comment') {\n        output.push(el.nodeName)\n        if (el.attributes) {\n            if (el.attributes['class']) {\n                output.push(`${el.nodeName}.${el.attributes['class'].replace(/ /g, '.')}`)\n            }\n            if (el.attributes.id) {\n                output.push(`${el.nodeName}#${el.attributes.id}`)\n            }\n        }\n\n    }\n    return output\n}\n\nfunction findUniqueDescriptors(li) {\n    const uniqueDescriptors = {}\n    const duplicateDescriptors = {}\n\n    li.forEach(node => {\n        elementDescriptors(node).forEach(descriptor => {\n            const inUnique = descriptor in uniqueDescriptors\n            const inDupes = descriptor in duplicateDescriptors\n            if (!inUnique && !inDupes) {\n                uniqueDescriptors[descriptor] = true\n            } else if (inUnique) {\n                delete uniqueDescriptors[descriptor]\n                duplicateDescriptors[descriptor] = true\n            }\n        })\n    })\n\n    return uniqueDescriptors\n}\n\nfunction uniqueInBoth(l1, l2) {\n    const l1Unique = findUniqueDescriptors(l1)\n    const l2Unique = findUniqueDescriptors(l2)\n    const inBoth = {}\n\n    Object.keys(l1Unique).forEach(key => {\n        if (l2Unique[key]) {\n            inBoth[key] = true\n        }\n    })\n\n    return inBoth\n}\n\nfunction removeDone(tree) {\n    delete tree.outerDone\n    delete tree.innerDone\n    delete tree.valueDone\n    if (tree.childNodes) {\n        return tree.childNodes.every(removeDone)\n    } else {\n        return true\n    }\n}\n\nfunction isEqual(e1, e2) {\n    if (!['nodeName', 'value', 'checked', 'selected', 'data'].every(element => {\n            if (e1[element] !== e2[element]) {\n                return false\n            }\n            return true\n        })) {\n        return false\n    }\n\n    if (Boolean(e1.attributes) !== Boolean(e2.attributes)) {\n        return false\n    }\n\n    if (Boolean(e1.childNodes) !== Boolean(e2.childNodes)) {\n        return false\n    }\n    if (e1.attributes) {\n        const e1Attributes = Object.keys(e1.attributes)\n        const e2Attributes = Object.keys(e2.attributes)\n\n        if (e1Attributes.length !== e2Attributes.length) {\n            return false\n        }\n        if (!e1Attributes.every(attribute => {\n                if (e1.attributes[attribute] !== e2.attributes[attribute]) {\n                    return false\n                }\n                return true\n            })) {\n            return false\n        }\n    }\n    if (e1.childNodes) {\n        if (e1.childNodes.length !== e2.childNodes.length) {\n            return false\n        }\n        if (!e1.childNodes.every((childNode, index) => isEqual(childNode, e2.childNodes[index]))) {\n\n            return false\n        }\n\n    }\n\n    return true\n}\n\n\nfunction roughlyEqual(e1, e2, uniqueDescriptors, sameSiblings, preventRecursion) {\n\n    if (!e1 || !e2) {\n        return false\n    }\n\n    if (e1.nodeName !== e2.nodeName) {\n        return false\n    }\n\n    if (e1.nodeName === '#text') {\n        // Note that we initially don't care what the text content of a node is,\n        // the mere fact that it's the same tag and \"has text\" means it's roughly\n        // equal, and then we can find out the true text difference later.\n        return preventRecursion ? true : e1.data === e2.data\n    }\n\n\n    if (e1.nodeName in uniqueDescriptors) {\n        return true\n    }\n\n    if (e1.attributes && e2.attributes) {\n\n        if (e1.attributes.id) {\n            if (e1.attributes.id !== e2.attributes.id) {\n                return false\n            } else {\n                const idDescriptor = `${e1.nodeName}#${e1.attributes.id}`\n                if (idDescriptor in uniqueDescriptors) {\n                    return true\n                }\n            }\n        }\n        if (e1.attributes['class'] && e1.attributes['class'] === e2.attributes['class']) {\n            const classDescriptor = `${e1.nodeName}.${e1.attributes['class'].replace(/ /g, '.')}`\n            if (classDescriptor in uniqueDescriptors) {\n                return true\n            }\n        }\n    }\n\n    if (sameSiblings) {\n        return true\n    }\n\n    const nodeList1 = e1.childNodes ? e1.childNodes.slice().reverse() : []\n    const nodeList2 = e2.childNodes ? e2.childNodes.slice().reverse() : []\n\n    if (nodeList1.length !== nodeList2.length) {\n        return false\n    }\n\n    if (preventRecursion) {\n        return nodeList1.every((element, index) => element.nodeName === nodeList2[index].nodeName)\n    } else {\n        // note: we only allow one level of recursion at any depth. If 'preventRecursion'\n        // was not set, we must explicitly force it to true for child iterations.\n        const childUniqueDescriptors = uniqueInBoth(nodeList1, nodeList2)\n        return nodeList1.every((element, index) => roughlyEqual(element, nodeList2[index], childUniqueDescriptors, true, true))\n    }\n}\n\n\nfunction cloneObj(obj) { //  TODO: Do we really need to clone here? Is it not enough to just return the original object?\n    return JSON.parse(JSON.stringify(obj))\n}\n/**\n * based on https://en.wikibooks.org/wiki/Algorithm_implementation/Strings/Longest_common_substring#JavaScript\n */\nfunction findCommonSubsets(c1, c2, marked1, marked2) {\n    let lcsSize = 0\n    let index = []\n    const c1Length = c1.length\n    const c2Length = c2.length\n\n    const // set up the matching table\n        matches = Array(...new Array(c1Length + 1)).map(() => [])\n\n    const uniqueDescriptors = uniqueInBoth(c1, c2)\n\n    let // If all of the elements are the same tag, id and class, then we can\n        // consider them roughly the same even if they have a different number of\n        // children. This will reduce removing and re-adding similar elements.\n        subsetsSame = c1Length === c2Length\n\n    if (subsetsSame) {\n\n        c1.some((element, i) => {\n            const c1Desc = elementDescriptors(element)\n            const c2Desc = elementDescriptors(c2[i])\n            if (c1Desc.length !== c2Desc.length) {\n                subsetsSame = false\n                return true\n            }\n            c1Desc.some((description, i) => {\n                if (description !== c2Desc[i]) {\n                    subsetsSame = false\n                    return true\n                }\n            })\n            if (!subsetsSame) {\n                return true\n            }\n        })\n    }\n\n    // fill the matches with distance values\n    for (let c1Index = 0; c1Index < c1Length; c1Index++) {\n        const c1Element = c1[c1Index]\n        for (let c2Index = 0; c2Index < c2Length; c2Index++) {\n            const c2Element = c2[c2Index]\n            if (!marked1[c1Index] && !marked2[c2Index] && roughlyEqual(c1Element, c2Element, uniqueDescriptors, subsetsSame)) {\n                matches[c1Index + 1][c2Index + 1] = (matches[c1Index][c2Index] ? matches[c1Index][c2Index] + 1 : 1)\n                if (matches[c1Index + 1][c2Index + 1] >= lcsSize) {\n                    lcsSize = matches[c1Index + 1][c2Index + 1]\n                    index = [c1Index + 1, c2Index + 1]\n                }\n            } else {\n                matches[c1Index + 1][c2Index + 1] = 0\n            }\n        }\n    }\n\n    if (lcsSize === 0) {\n        return false\n    }\n\n    return {\n        oldValue: index[0] - lcsSize,\n        newValue: index[1] - lcsSize,\n        length: lcsSize\n    }\n}\n\n/**\n * This should really be a predefined function in Array...\n */\nfunction makeArray(n, v) {\n    return Array(...new Array(n)).map(() => v)\n}\n\n/**\n * Generate arrays that indicate which node belongs to which subset,\n * or whether it's actually an orphan node, existing in only one\n * of the two trees, rather than somewhere in both.\n *\n * So if t1 = <img><canvas><br>, t2 = <canvas><br><img>.\n * The longest subset is \"<canvas><br>\" (length 2), so it will group 0.\n * The second longest is \"<img>\" (length 1), so it will be group 1.\n * gaps1 will therefore be [1,0,0] and gaps2 [0,0,1].\n *\n * If an element is not part of any group, it will stay being 'true', which\n * is the initial value. For example:\n * t1 = <img><p></p><br><canvas>, t2 = <b></b><br><canvas><img>\n *\n * The \"<p></p>\" and \"<b></b>\" do only show up in one of the two and will\n * therefore be marked by \"true\". The remaining parts are parts of the\n * groups 0 and 1:\n * gaps1 = [1, true, 0, 0], gaps2 = [true, 0, 0, 1]\n *\n */\nfunction getGapInformation(t1, t2, stable) {\n    const gaps1 = t1.childNodes ? makeArray(t1.childNodes.length, true) : []\n    const gaps2 = t2.childNodes ? makeArray(t2.childNodes.length, true) : []\n    let group = 0\n\n    // give elements from the same subset the same group number\n    stable.forEach(subset => {\n        const endOld = subset.oldValue + subset.length\n        const endNew = subset.newValue + subset.length\n\n        for (let j = subset.oldValue; j < endOld; j += 1) {\n            gaps1[j] = group\n        }\n        for (let j = subset.newValue; j < endNew; j += 1) {\n            gaps2[j] = group\n        }\n        group += 1\n    })\n\n    return {\n        gaps1,\n        gaps2\n    }\n}\n\n/**\n * Find all matching subsets, based on immediate child differences only.\n */\nfunction markSubTrees(oldTree, newTree) {\n    // note: the child lists are views, and so update as we update old/newTree\n    const oldChildren = oldTree.childNodes ? oldTree.childNodes : []\n\n    const newChildren = newTree.childNodes ? newTree.childNodes : []\n    const marked1 = makeArray(oldChildren.length, false)\n    const marked2 = makeArray(newChildren.length, false)\n    const subsets = []\n    let subset = true\n\n    const returnIndex = function() {\n        return arguments[1]\n    }\n\n    const markBoth = i => {\n        marked1[subset.oldValue + i] = true\n        marked2[subset.newValue + i] = true\n    }\n\n    while (subset) {\n        subset = findCommonSubsets(oldChildren, newChildren, marked1, marked2)\n        if (subset) {\n            subsets.push(subset)\n            const subsetArray = Array(...new Array(subset.length)).map(returnIndex)\n            subsetArray.forEach(item => markBoth(item))\n        }\n    }\n\n    oldTree.subsets = subsets\n    oldTree.subsetsAge = 100\n    return subsets\n}\n\nclass DiffTracker {\n    constructor() {\n        this.list = []\n    }\n\n    add(diffs) {\n        this.list.push(...diffs)\n    }\n    forEach(fn) {\n        this.list.forEach(li => fn(li))\n    }\n\n}\n\n\n//# sourceURL=webpack:///./node_modules/diff-dom/src/diffDOM/virtual/helpers.js?");

/***/ }),

/***/ "./node_modules/diff-dom/src/diffDOM/virtual/index.js":
/*!************************************************************!*\
  !*** ./node_modules/diff-dom/src/diffDOM/virtual/index.js ***!
  \************************************************************/
/*! exports provided: DiffFinder, nodeToObj, stringToObj */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _diff__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./diff */ \"./node_modules/diff-dom/src/diffDOM/virtual/diff.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DiffFinder\", function() { return _diff__WEBPACK_IMPORTED_MODULE_0__[\"DiffFinder\"]; });\n\n/* harmony import */ var _fromDOM__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fromDOM */ \"./node_modules/diff-dom/src/diffDOM/virtual/fromDOM.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"nodeToObj\", function() { return _fromDOM__WEBPACK_IMPORTED_MODULE_1__[\"nodeToObj\"]; });\n\n/* harmony import */ var _fromString__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fromString */ \"./node_modules/diff-dom/src/diffDOM/virtual/fromString.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"stringToObj\", function() { return _fromString__WEBPACK_IMPORTED_MODULE_2__[\"stringToObj\"]; });\n\n\n\n\n\n\n//# sourceURL=webpack:///./node_modules/diff-dom/src/diffDOM/virtual/index.js?");

/***/ }),

/***/ "./node_modules/diff-dom/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/diff-dom/src/index.js ***!
  \********************************************/
/*! exports provided: DiffDOM, nodeToObj, stringToObj, TraceLogger */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _diffDOM_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./diffDOM/index */ \"./node_modules/diff-dom/src/diffDOM/index.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DiffDOM\", function() { return _diffDOM_index__WEBPACK_IMPORTED_MODULE_0__[\"DiffDOM\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"nodeToObj\", function() { return _diffDOM_index__WEBPACK_IMPORTED_MODULE_0__[\"nodeToObj\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"stringToObj\", function() { return _diffDOM_index__WEBPACK_IMPORTED_MODULE_0__[\"stringToObj\"]; });\n\n/* harmony import */ var _TraceLogger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TraceLogger */ \"./node_modules/diff-dom/src/TraceLogger.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TraceLogger\", function() { return _TraceLogger__WEBPACK_IMPORTED_MODULE_1__[\"TraceLogger\"]; });\n\n\n\n\n\n//# sourceURL=webpack:///./node_modules/diff-dom/src/index.js?");

/***/ })

/******/ });